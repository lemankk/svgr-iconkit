# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

name: Packages release (beta)
run-name: Beta release ${{github.event.inputs.cbPackage}} with ${{github.event.inputs.cbVersionChange}} version
concurrency:
  group: 'svgr-iconkit-cicd-release-beta'
  cancel-in-progress: true

on:
  workflow_dispatch:
    inputs:
      cbVersionChange:
        type: choice 
        required: true
        description: The type of version change
        default: "prerelease"
        options:
        - "no"
        - "prerelease"
        - "prepatch"
        - "preminor"
        - "premajor"
      cbPackage:
        type: choice 
        required: true
        description: Package to be publish
        default: "all"
        options:
        - "all"
        - "packages/ext-ant-design"
        - "packages/ext-bootstrap"
        - "packages/ext-css-gg"
        - "packages/ext-entypo"
        - "packages/ext-evil-icons"
        - "packages/ext-feather"
        - "packages/ext-flag-icons"
        - "packages/ext-flat-color-icons"
        - "packages/ext-fluentui-system"
        - "packages/ext-fontawesome"
        - "packages/ext-fontawesome-brands"
        - "packages/ext-fontawesome5"
        - "packages/ext-fontawesome5-brands"
        - "packages/ext-fontisto"
        - "packages/ext-foundation"
        - "packages/ext-grommet-icons"
        - "packages/ext-heroicons"
        - "packages/ext-ionicons"
        - "packages/ext-material-community"
        - "packages/ext-material-design"
        - "packages/ext-octicons"
        - "packages/ext-simple-icons"
        - "packages/ext-simple-line-icons"
        - "packages/ext-tablet-icons"
        - "packages/ext-themify-icons"
        - "packages/ext-typicons"
        - "packages/ext-weather-icons"
        - "packages/ext-xnix"
        - "tools/build-config"
        - "tools/build-utils"
        - "tools/cli"
      cGithubPackagesPublish:
        type: choice 
        required: true
        description: Require publish to github registry?
        default: "yes"
        options:
        - "no"
        - "yes"
      cNpmPublish:
        type: choice 
        required: true
        description: Require publish to npm registry?
        default: "yes"
        options:
        - "no"
        - "yes"

permissions: write-all
jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: release
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Setup git
        run: |
          git config user.name "$(git log -n 1 --pretty=format:%an)"
          git config user.email "$(git log -n 1 --pretty=format:%ae)"
      - name: Install all packages
        if: github.event.inputs.cbPackage == 'all'
        run: |
          yarn config set disable-self-update-check true
          yarn config set ignore-engines true
          yarn config list
          yarn install
      - name: Install target package
        if: github.event.inputs.cbPackage != 'all'
        working-directory: ${{ github.event.inputs.cbPackage }}
        run: |
          ls -al
          npm install --legacy-peer-deps
          ls -al ./node_modules
      - name: 'Upload target package packages'
        if: github.event.inputs.cbPackage != 'all'
        uses: actions/upload-artifact@v3
        with:
          name: release-beta-install
          path: ${{ github.event.inputs.cbPackage }}
          retention-days: 14
      - name: Bump version to all
        if: github.event.inputs.cbPackage == 'all' && github.event.inputs.cbVersionChange != 'no'
        run: |
          yarn version:beta --yes --no-push
          git status
          git add ./
      - name: Bump version to target package
        if: github.event.inputs.cbPackage != 'all' && github.event.inputs.cbVersionChange != 'no'
        working-directory: ${{ github.event.inputs.cbPackage }}
        run: |
          yarn version --${{ github.event.inputs.cbVersionChange }} --preid beta --yes --no-push
          git status
          git add ./
      - name: Build all
        if: github.event.inputs.cbPackage == 'all'
        run: |
          yarn run build
      - name: Build to target package
        if: github.event.inputs.cbPackage != 'all'
        working-directory: ${{ github.event.inputs.cbPackage }}
        run: |
          ls -al
          cat ../../tsconfig.json > ./tsconfig.json
          npm run build
# cat ./tsconfig.json > ./tsconfig.tmp.json
# cat ./tsconfig.tmp.json > ./tsconfig.json
# unlink -f ./tsconfig.tmp.json
      - name: 'Upload target package artifact'
        if: github.event.inputs.cbPackage != 'all'
        uses: actions/upload-artifact@v3
        with:
          name: release-beta-build
          path: ${{ github.event.inputs.cbPackage }}
          retention-days: 14
      - name: publish all to registry(github)
        if: github.event.inputs.cbPackage == 'all' && github.event.inputs.cGithubPackagesPublish == 'yes'
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
          echo "//npm.pkg.github.com/:_authToken=${NODE_AUTH_TOKEN}" > .npmrc
          echo "always-auth = true" >> .npmrc
          yarn publish:all:github
      - name: publish target package to registry(github)
        if: github.event.inputs.cbPackage != 'all' && github.event.inputs.cGithubPackagesPublish == 'yes'
        working-directory: ${{ github.event.inputs.cbPackage }}
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
          echo "//npm.pkg.github.com/:_authToken=${NODE_AUTH_TOKEN}" > .npmrc
          echo "always-auth = true" >> .npmrc
          yarn publish --access public --non-interactive  --no-git-tag-version  --registry=https://npm.pkg.github.com/
      - name: publish all to registry(npmjs.com)
        if: github.event.inputs.cbPackage == 'all' && github.event.inputs.cNpmPublish == 'yes'
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_REGISTRY_TOKEN}}
        run: |
          echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" > .npmrc
          echo "always-auth = true" >> .npmrc
          yarn publish:all --registry=https://registry.npmjs.org/
      - name: publish target package to registry(npmjs.com)
        if: github.event.inputs.cbPackage != 'all' && github.event.inputs.cNpmPublish == 'yes'
        working-directory: ${{ github.event.inputs.cbPackage }}
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_REGISTRY_TOKEN}}
        run: |
          echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" > .npmrc
          echo "always-auth = true" >> .npmrc
          yarn publish --access public --non-interactive  --no-git-tag-version --registry=https://registry.npmjs.org/
      - name: push result
        run: |
          git push --force --all
