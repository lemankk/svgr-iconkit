{"ast":null,"code":"var _jsxFileName = \"/Users/leman/local-works/niceforum/svgr-iconkit/examples/expo-explorer/src/components/HSVColorPicker.js\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { SliderHuePicker, SliderSaturationPicker, SliderValuePicker } from \"react-native-slider-color-picker\";\nimport { Box } from \"native-base\";\nimport Color from \"color\";\nimport tinycolor from \"tinycolor2\";\n\nvar TrackImage = require(\"react-native-slider-color-picker/brightness_mask.png\");\n\nexport default function HSVColorPicker(_ref) {\n  var _ref$value = _ref.value,\n      value = _ref$value === void 0 ? \"#000\" : _ref$value,\n      onValueChange = _ref.onValueChange;\n\n  var onChangeColor = function onChangeColor(colorHsvOrRgb, resType) {\n    if (resType === \"end\") {\n      var h = colorHsvOrRgb.h,\n          s = colorHsvOrRgb.s,\n          v = colorHsvOrRgb.v,\n          a = colorHsvOrRgb.a;\n      var newColor = tinycolor(colorHsvOrRgb).toHexString();\n      onValueChange && onValueChange(newColor);\n    }\n  };\n\n  var color = Color(value);\n  var hueValue = color.hue();\n  var saturationPickerBgColor = Color({\n    h: hueValue,\n    s: 1,\n    v: 1\n  }).hex();\n  return React.createElement(Box, {\n    position: \"relative\",\n    padding: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, React.createElement(Box, {\n    height: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, React.createElement(SliderHuePicker, {\n    oldColor: value,\n    trackStyle: styles.track,\n    thumbStyle: styles.thumb,\n    useNativeDriver: true,\n    onColorChange: onChangeColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  })), React.createElement(Box, {\n    height: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, React.createElement(SliderSaturationPicker, {\n    oldColor: value,\n    trackStyle: styles.track,\n    thumbStyle: styles.thumb,\n    useNativeDriver: true,\n    onColorChange: onChangeColor,\n    style: [styles.picker, {\n      backgroundColor: saturationPickerBgColor\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  })), React.createElement(Box, {\n    height: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, React.createElement(SliderValuePicker, {\n    oldColor: value,\n    minimumValue: 0.02,\n    step: 0.05,\n    trackStyle: styles.track,\n    trackImage: TrackImage,\n    thumbStyle: styles.thumb,\n    onColorChange: onChangeColor,\n    style: styles.picker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\"\n  },\n  track: {\n    height: 12,\n    width: \"100%\"\n  },\n  picker: {\n    height: 12,\n    borderRadius: 6,\n    backgroundColor: \"black\"\n  },\n  thumb: {\n    width: 20,\n    height: 20,\n    borderColor: \"white\",\n    borderWidth: 1,\n    borderRadius: 10,\n    shadowColor: \"black\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 2,\n    shadowOpacity: 0.35\n  }\n});","map":{"version":3,"sources":["/Users/leman/local-works/niceforum/svgr-iconkit/examples/expo-explorer/src/components/HSVColorPicker.js"],"names":["React","SliderHuePicker","SliderSaturationPicker","SliderValuePicker","Box","Color","tinycolor","TrackImage","require","HSVColorPicker","value","onValueChange","onChangeColor","colorHsvOrRgb","resType","h","s","v","a","newColor","toHexString","color","hueValue","hue","saturationPickerBgColor","hex","styles","track","thumb","picker","backgroundColor","StyleSheet","create","container","flex","alignItems","height","width","borderRadius","borderColor","borderWidth","shadowColor","shadowOffset","shadowRadius","shadowOpacity"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { View, StyleSheet } from \"react-native\";\nimport {\n  SliderHuePicker,\n  SliderSaturationPicker,\n  SliderValuePicker,\n} from \"react-native-slider-color-picker\";\nimport { Box } from \"native-base\";\nimport Color from \"color\";\nimport tinycolor from \"tinycolor2\";\n\nconst TrackImage = require(\"react-native-slider-color-picker/brightness_mask.png\");\n\nexport default function HSVColorPicker({ value = \"#000\", onValueChange }) {\n  const onChangeColor = (colorHsvOrRgb, resType) => {\n    if (resType === \"end\") {\n      const {h,s,v,a} = colorHsvOrRgb\n      const newColor = tinycolor(colorHsvOrRgb).toHexString();\n      onValueChange && onValueChange(newColor);\n    }\n  };\n  const color = Color(value);\n  const hueValue = color.hue();\n  const saturationPickerBgColor = Color({ h: hueValue, s: 1, v: 1 }).hex();\n\n  return (\n    <Box position=\"relative\" padding={2}>\n      <Box height={12}>\n        <SliderHuePicker\n          oldColor={value}\n          trackStyle={styles.track}\n          thumbStyle={styles.thumb}\n          useNativeDriver={true}\n          onColorChange={onChangeColor}\n        />\n      </Box>\n      <Box height={12}>\n        <SliderSaturationPicker\n          oldColor={value}\n          trackStyle={styles.track}\n          thumbStyle={styles.thumb}\n          useNativeDriver={true}\n          onColorChange={onChangeColor}\n          style={[\n            styles.picker,\n            {\n              backgroundColor: saturationPickerBgColor,\n            },\n          ]}\n        />\n      </Box>\n      <Box height={12}>\n        <SliderValuePicker\n          oldColor={value}\n          minimumValue={0.02}\n          step={0.05}\n          trackStyle={styles.track}\n          trackImage={TrackImage}\n          thumbStyle={styles.thumb}\n          onColorChange={onChangeColor}\n          style={styles.picker}\n        />\n      </Box>\n    </Box>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n  },\n  track: { height: 12, width: \"100%\"},\n  picker: { height: 12, borderRadius: 6, backgroundColor: \"black\" },\n  thumb: {\n    width: 20,\n    height: 20,\n    borderColor: \"white\",\n    borderWidth: 1,\n    borderRadius: 10,\n    shadowColor: \"black\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowRadius: 2,\n    shadowOpacity: 0.35,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}