{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/leman/local-works/niceforum/svgr-iconkit/examples/expo-explorer/src/containers/Home.js\";\nvar _excluded = [\"Icon\"];\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useCallback, useState, useEffect } from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Button, Box, Container, IconButton, SimpleGrid, Text, Tabs, Input, Icon, Select, Slide, Divider, useDisclose, Modal, VStack, HStack, FormControl, Slider, Heading, Link, useToast } from \"native-base\";\nimport Clipboard from \"expo-clipboard\";\nimport AppIcon from \"@svgr-iconkit/material-community\";\nimport BrandsIcon from \"@svgr-iconkit/fontawesome5-brands\";\nimport { iconsets } from \"../config\";\nimport IconList from \"../components/IconList\";\nimport Header from \"../components/Header\";\nimport Content from \"../components/Content\";\nvar defaultMaxShownNum = 60;\nexport default function Home() {\n  var _this = this;\n\n  var _useDisclose = useDisclose(),\n      isDrawerOpen = _useDisclose.isOpen,\n      onDrawerOpen = _useDisclose.onOpen,\n      onDrawerClose = _useDisclose.onClose;\n\n  var toast = useToast();\n\n  var _useDisclose2 = useDisclose(),\n      isSettingOpen = _useDisclose2.isOpen,\n      onSettingOpen = _useDisclose2.onOpen,\n      onSettingClose = _useDisclose2.onClose;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentIconsetIndex = _useState2[0],\n      setIconsetIndex = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      keyword = _useState4[0],\n      setKeyword = _useState4[1];\n\n  var _useState5 = useState(\"regular\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentVariant = _useState6[0],\n      setVariant = _useState6[1];\n\n  var onChangeIconset = useCallback(function (newIndex) {\n    onDrawerClose();\n    setIconsetIndex(newIndex);\n    var _iconsets$newIndex$de = iconsets[newIndex].defaultVariant,\n        defaultVariant = _iconsets$newIndex$de === void 0 ? \"regular\" : _iconsets$newIndex$de;\n    setVariant(defaultVariant);\n    setMaxIconsShown(defaultMaxShownNum);\n  }, []);\n\n  var _useState7 = useState(24),\n      _useState8 = _slicedToArray(_useState7, 2),\n      iconSize = _useState8[0],\n      setIconSize = _useState8[1];\n\n  var _useState9 = useState(\"#0693E3\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      iconColor = _useState10[0],\n      setIconColor = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      isColorPickerOpen = _useState12[0],\n      setColorPickerOpen = _useState12[1];\n\n  var _useState13 = useState(true),\n      _useState14 = _slicedToArray(_useState13, 2),\n      isUsingStyledComponent = _useState14[0],\n      setUsingStyledComponent = _useState14[1];\n\n  var _useState15 = useState(0),\n      _useState16 = _slicedToArray(_useState15, 2),\n      setUpdateTime = _useState16[1];\n\n  var iconsetInfo = iconsets[currentIconsetIndex] || {};\n  var _iconsetInfo$iconName = iconsetInfo.iconNames,\n      iconNames = _iconsetInfo$iconName === void 0 ? [] : _iconsetInfo$iconName;\n  var isSearchMode = !!keyword && typeof keyword === \"string\" && keyword.length > 0;\n\n  var _useState17 = useState(defaultMaxShownNum),\n      _useState18 = _slicedToArray(_useState17, 2),\n      maxIconsShown = _useState18[0],\n      setMaxIconsShown = _useState18[1];\n\n  var matchedIconNames = !isSearchMode ? iconNames : iconNames.filter(function (name) {\n    return name.toLowerCase().includes(keyword.toLowerCase());\n  });\n  useEffect(function () {\n    if (!iconsetInfo.resources || typeof iconsetInfo.resources !== \"function\" || iconsetInfo.__loaded) {\n      return;\n    }\n\n    function run() {\n      var _await$iconsetInfo$re, Icon, restProps;\n\n      return _regeneratorRuntime.async(function run$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(iconsetInfo.resources());\n\n            case 2:\n              _await$iconsetInfo$re = _context.sent;\n              Icon = _await$iconsetInfo$re.Icon;\n              restProps = _objectWithoutProperties(_await$iconsetInfo$re, _excluded);\n              iconsets[currentIconsetIndex] = _objectSpread(_objectSpread({}, iconsetInfo), {}, {\n                component: Icon,\n                __loaded: true\n              }, restProps);\n              setUpdateTime(Date.now());\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    run();\n  }, [iconsetInfo, currentIconsetIndex]);\n\n  var onIconPress = function onIconPress(icon) {\n    Clipboard.setString(icon);\n    toast.show({\n      duration: 6000,\n      title: \"Icon name \" + icon + \" copied in clipboard!\"\n    });\n  };\n\n  var onPackageNamePress = function onPackageNamePress() {\n    Clipboard.setString(iconsetInfo.packageName);\n    toast.show({\n      duration: 6000,\n      title: \"Package name \" + iconsetInfo.packageName + \" copied in clipboard!\"\n    });\n  };\n\n  var onShowMore = function onShowMore() {\n    return setMaxIconsShown(maxIconsShown + 60);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Header, {\n    safeAreaTop: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, React.createElement(Header.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, React.createElement(Header.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, React.createElement(IconButton, {\n    onPress: onDrawerOpen,\n    icon: React.createElement(Icon, {\n      as: AppIcon,\n      name: \"menu\",\n      size: 24,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  })), React.createElement(Header.Item, {\n    flex: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, React.createElement(Input, {\n    flex: 1,\n    size: \"xs\",\n    placeholder: \"Filter by keywords\",\n    value: keyword,\n    onChangeText: setKeyword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  })), React.createElement(Header.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, React.createElement(IconButton, {\n    onPress: onSettingOpen,\n    icon: React.createElement(Icon, {\n      as: AppIcon,\n      name: \"cog\",\n      size: 24,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }))), React.createElement(Header.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, React.createElement(Header.Item, {\n    leftSide: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    bold: true,\n    fontSize: \"14px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, iconsetInfo.packageName)), React.createElement(Header.Item, {\n    rightSide: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, React.createElement(Link, {\n    href: \"https://npmjs.com/package/\" + iconsetInfo.packageName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, React.createElement(Icon, {\n    as: BrandsIcon,\n    name: \"npm\",\n    size: 26,\n    color: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  }), \" \"), React.createElement(IconButton, {\n    onPress: onPackageNamePress,\n    icon: React.createElement(Icon, {\n      as: AppIcon,\n      name: \"content-copy\",\n      size: 18,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 60\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  })))), React.createElement(Content, {\n    padder: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }, iconsetInfo && React.createElement(React.Fragment, null, React.createElement(IconList, {\n    maxCount: maxIconsShown,\n    component: iconsetInfo.component,\n    variant: currentVariant,\n    size: iconSize,\n    color: iconColor,\n    allIconNames: matchedIconNames,\n    allVariantNames: iconsetInfo.variantNames,\n    onIconPress: onIconPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }), Array.isArray(matchedIconNames) && maxIconsShown < matchedIconNames.length && React.createElement(Box, {\n    safeAreaBottom: true,\n    padding: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    onPress: onShowMore,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 19\n    }\n  }, \"Show more icons\")))), React.createElement(Slide, {\n    in: isDrawerOpen,\n    placement: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }\n  }, React.createElement(Box, {\n    minWidth: \"80%\",\n    height: \"100%\",\n    bg: \"white\",\n    rounded: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, React.createElement(Box, {\n    safeAreaTop: true,\n    backgroundColor: \"#222\",\n    p: 2,\n    paddingBottom: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }, React.createElement(Heading, {\n    alignItems: \"flex-start\",\n    justifyContent: \"center\",\n    color: \"#fff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, \"svgr-iconkit\", \" \", React.createElement(Link, {\n    href: \"https://svgr-iconkit.dev\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 15\n    }\n  }, React.createElement(Icon, {\n    as: AppIcon,\n    name: \"link\",\n    size: 20,\n    color: \"#ccc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  }), \" \")), React.createElement(Heading, {\n    color: \"#fff\",\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  }, \"explorer\")), React.createElement(Box, {\n    as: ScrollView,\n    safeAreaBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 11\n    }\n  }, React.createElement(Heading, {\n    margin: 4,\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }, \"Iconsets\"), iconsets.map(function (item, index) {\n    return React.createElement(React.Fragment, null, React.createElement(Button, {\n      key: item.packageName,\n      accessibilityLabel: item.name,\n      colorScheme: currentIconsetIndex === index ? \"secondary\" : undefined,\n      variant: \"ghost\",\n      textAlign: \"left\",\n      justifyContent: \"flex-start\",\n      onPress: function onPress() {\n        onChangeIconset(index);\n      },\n      title: item.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }\n    }, item.name));\n  })))), React.createElement(Modal, {\n    isOpen: isSettingOpen,\n    onClose: onSettingClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }\n  }, React.createElement(VStack, {\n    p: 4,\n    space: 4,\n    mx: 10,\n    width: \"80%\",\n    backgroundColor: \"#fff\",\n    borderRadius: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }\n  }, React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 11\n    }\n  }, React.createElement(FormControl.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  }, \"Variants\"), React.createElement(Select, {\n    safeAreaBottom: true,\n    selectedValue: currentVariant,\n    onValueChange: setVariant,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }\n  }, Array.isArray(iconsetInfo.variantNames) && iconsetInfo.variantNames.map(function (name) {\n    return React.createElement(Select.Item, {\n      key: name,\n      label: name,\n      value: name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 19\n      }\n    });\n  }), React.createElement(Select.Item, {\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 15\n    }\n  }))), React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 11\n    }\n  }), React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 11\n    }\n  }, React.createElement(FormControl.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }\n  }, \"Size: \" + iconSize + \"px\"), React.createElement(Slider, {\n    minValue: 12,\n    maxValue: 48,\n    defaultValue: iconSize,\n    onChangeEnd: setIconSize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }\n  }, React.createElement(Slider.Track, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 15\n    }\n  }, React.createElement(Slider.FilledTrack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }\n  })), React.createElement(Slider.Thumb, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 15\n    }\n  }))))));\n}","map":{"version":3,"sources":["/Users/leman/local-works/niceforum/svgr-iconkit/examples/expo-explorer/src/containers/Home.js"],"names":["React","useCallback","useState","useEffect","Button","Box","Container","IconButton","SimpleGrid","Text","Tabs","Input","Icon","Select","Slide","Divider","useDisclose","Modal","VStack","HStack","FormControl","Slider","Heading","Link","useToast","Clipboard","AppIcon","BrandsIcon","iconsets","IconList","Header","Content","defaultMaxShownNum","Home","isDrawerOpen","isOpen","onDrawerOpen","onOpen","onDrawerClose","onClose","toast","isSettingOpen","onSettingOpen","onSettingClose","currentIconsetIndex","setIconsetIndex","keyword","setKeyword","currentVariant","setVariant","onChangeIconset","newIndex","defaultVariant","setMaxIconsShown","iconSize","setIconSize","iconColor","setIconColor","isColorPickerOpen","setColorPickerOpen","isUsingStyledComponent","setUsingStyledComponent","setUpdateTime","iconsetInfo","iconNames","isSearchMode","length","maxIconsShown","matchedIconNames","filter","name","toLowerCase","includes","resources","__loaded","run","restProps","component","Date","now","onIconPress","icon","setString","show","duration","title","onPackageNamePress","packageName","onShowMore","variantNames","Array","isArray","ScrollView","map","item","index","undefined"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useEffect } from \"react\";\nimport { Platform, ScrollView, Dimensions } from \"react-native\";\nimport {\n  Button,\n  Box,\n  Container,\n  IconButton,\n  SimpleGrid,\n  Text,\n  Tabs,\n  Input,\n  Icon,\n  Select,\n  Slide,\n  Divider,\n  useDisclose,\n  Modal,\n  VStack,\n  HStack,\n  FormControl,\n  Slider,\n  Heading,\n  Link,\n  useToast,\n} from \"native-base\";\nimport Clipboard from \"expo-clipboard\";\nimport AppIcon from \"@svgr-iconkit/material-community\";\nimport BrandsIcon from \"@svgr-iconkit/fontawesome5-brands\";\n\nimport { iconsets } from \"../config\";\nimport IconList from \"../components/IconList\";\nimport Header from \"../components/Header\";\nimport Content from \"../components/Content\";\n// import HSVColorPicker from \"../components/HSVColorPicker\";\n\nconst defaultMaxShownNum = 60;\n\nexport default function Home() {\n  const {\n    isOpen: isDrawerOpen,\n    onOpen: onDrawerOpen,\n    onClose: onDrawerClose,\n  } = useDisclose();\n  const toast = useToast();\n\n  const {\n    isOpen: isSettingOpen,\n    onOpen: onSettingOpen,\n    onClose: onSettingClose,\n  } = useDisclose();\n\n  const [currentIconsetIndex, setIconsetIndex] = useState(0);\n  const [keyword, setKeyword] = useState(\"\");\n  const [currentVariant, setVariant] = useState(\"regular\");\n  const onChangeIconset = useCallback((newIndex) => {\n    onDrawerClose();\n    setIconsetIndex(newIndex);\n    const { defaultVariant = \"regular\" } = iconsets[newIndex];\n    setVariant(defaultVariant);\n    setMaxIconsShown(defaultMaxShownNum);\n  }, []);\n  const [iconSize, setIconSize] = useState(24);\n  const [iconColor, setIconColor] = useState(\"#0693E3\");\n  const [isColorPickerOpen, setColorPickerOpen] = useState(false);\n  const [isUsingStyledComponent, setUsingStyledComponent] = useState(true);\n\n  const [, setUpdateTime] = useState(0);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const iconsetInfo = iconsets[currentIconsetIndex] || {};\n\n  const { iconNames = [] } = iconsetInfo;\n\n  const isSearchMode =\n    !!keyword && typeof keyword === \"string\" && keyword.length > 0;\n  const [maxIconsShown, setMaxIconsShown] = useState(defaultMaxShownNum);\n\n  const matchedIconNames = !isSearchMode\n    ? iconNames\n    : iconNames.filter((name) =>\n        name.toLowerCase().includes(keyword.toLowerCase())\n      );\n\n  useEffect(() => {\n    if (\n      !iconsetInfo.resources ||\n      typeof iconsetInfo.resources !== \"function\" ||\n      iconsetInfo.__loaded\n    ) {\n      return;\n    }\n    async function run() {\n      const { Icon, ...restProps } = await iconsetInfo.resources();\n\n      iconsets[currentIconsetIndex] = {\n        ...iconsetInfo,\n        component: Icon,\n        __loaded: true,\n        ...restProps,\n      };\n      setUpdateTime(Date.now());\n    }\n    run();\n  }, [iconsetInfo, currentIconsetIndex]);\n\n  const onIconPress = (icon) => {\n    Clipboard.setString(icon);\n    toast.show({\n      duration: 6000,\n      title: `Icon name ${icon} copied in clipboard!`\n    })\n  };\n  const onPackageNamePress = () => {\n    Clipboard.setString(iconsetInfo.packageName);\n    toast.show({\n      duration: 6000,\n      title: `Package name ${iconsetInfo.packageName} copied in clipboard!`\n    })\n  };\n\n  const onShowMore = () => setMaxIconsShown(maxIconsShown + 60);\n\n  return (\n    <>\n      <Header safeAreaTop>\n        <Header.Row>\n          <Header.Item>\n            <IconButton\n              onPress={onDrawerOpen}\n              icon={<Icon as={AppIcon} name=\"menu\" size={24} color=\"black\" />}\n            />\n          </Header.Item>\n          <Header.Item flex={1}>\n            <Input\n              flex={1}\n              size=\"xs\"\n              placeholder=\"Filter by keywords\"\n              value={keyword}\n              onChangeText={setKeyword}\n            />\n          </Header.Item>\n          <Header.Item>\n            <IconButton\n              onPress={onSettingOpen}\n              icon={<Icon as={AppIcon} name=\"cog\" size={24} color=\"black\" />}\n            />\n          </Header.Item>\n        </Header.Row>\n        <Header.Row>\n          <Header.Item\n            leftSide\n          >\n            <Text bold fontSize=\"14px\">{iconsetInfo.packageName}</Text>\n          </Header.Item>\n          <Header.Item rightSide>\n            <Link href={`https://npmjs.com/package/${iconsetInfo.packageName}`}>\n              <Icon as={BrandsIcon} name=\"npm\" size={26} color=\"red\" />{\" \"}\n            </Link>\n            <IconButton onPress={onPackageNamePress} icon={<Icon as={AppIcon} name=\"content-copy\" size={18} color=\"black\" />} />\n          </Header.Item>\n        </Header.Row>\n      </Header>\n      <Content padder>\n        {iconsetInfo && (\n          <>\n            <IconList\n              maxCount={maxIconsShown}\n              component={iconsetInfo.component}\n              variant={currentVariant}\n              size={iconSize}\n              color={iconColor}\n              allIconNames={matchedIconNames}\n              allVariantNames={iconsetInfo.variantNames}\n              onIconPress={onIconPress}\n            />\n\n            {Array.isArray(matchedIconNames) &&\n              maxIconsShown < matchedIconNames.length && (\n                <Box safeAreaBottom padding={8}>\n                  <Button onPress={onShowMore}>Show more icons</Button>\n                </Box>\n              )}\n          </>\n        )}\n      </Content>\n      <Slide in={isDrawerOpen} placement=\"left\">\n        <Box minWidth=\"80%\" height=\"100%\" bg=\"white\" rounded=\"md\">\n          <Box safeAreaTop backgroundColor=\"#222\" p={2} paddingBottom={5}>\n            <Heading\n              alignItems=\"flex-start\"\n              justifyContent=\"center\"\n              color=\"#fff\"\n            >\n              svgr-iconkit{\" \"}\n              <Link href=\"https://svgr-iconkit.dev\">\n                <Icon as={AppIcon} name=\"link\" size={20} color=\"#ccc\" />{\" \"}\n              </Link>\n            </Heading>\n            <Heading color=\"#fff\" size=\"md\">\n              explorer\n            </Heading>\n          </Box>\n          <Box as={ScrollView} safeAreaBottom>\n            <Heading margin={4} size=\"sm\">\n              Iconsets\n            </Heading>\n            {iconsets.map((item, index) => (\n              <>\n                <Button\n                  key={item.packageName}\n                  accessibilityLabel={item.name}\n                  colorScheme={\n                    currentIconsetIndex === index ? \"secondary\" : undefined\n                  }\n                  variant=\"ghost\"\n                  textAlign=\"left\"\n                  justifyContent=\"flex-start\"\n                  onPress={() => {\n                    onChangeIconset(index);\n                  }}\n                  title={item.name}\n                >\n                  {item.name}\n                </Button>\n              </>\n            ))}\n          </Box>\n        </Box>\n      </Slide>\n      <Modal isOpen={isSettingOpen} onClose={onSettingClose}>\n        <VStack\n          p={4}\n          space={4}\n          mx={10}\n          width=\"80%\"\n          backgroundColor=\"#fff\"\n          borderRadius={5}\n        >\n          <FormControl>\n            <FormControl.Label>{`Variants`}</FormControl.Label>\n            <Select\n              safeAreaBottom\n              selectedValue={currentVariant}\n              onValueChange={setVariant}\n            >\n              {Array.isArray(iconsetInfo.variantNames) &&\n                iconsetInfo.variantNames.map((name) => (\n                  <Select.Item key={name} label={name} value={name} />\n                ))}\n              <Select.Item disabled />\n            </Select>\n          </FormControl>\n          <Divider />\n          <FormControl>\n            <FormControl.Label>{`Size: ${iconSize}px`}</FormControl.Label>\n            <Slider\n              minValue={12}\n              maxValue={48}\n              defaultValue={iconSize}\n              onChangeEnd={setIconSize}\n            >\n              <Slider.Track>\n                <Slider.FilledTrack />\n              </Slider.Track>\n              <Slider.Thumb />\n            </Slider>\n          </FormControl>\n          {/* <Divider />\n          <FormControl>\n            <FormControl.Label>{`Color: ${iconColor}`}</FormControl.Label>\n\n            <HSVColorPicker value={iconColor} onValueChange={setIconColor} />\n          </FormControl> */}\n        </VStack>\n      </Modal>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}