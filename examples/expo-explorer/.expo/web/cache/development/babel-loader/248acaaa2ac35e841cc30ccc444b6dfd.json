{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/leman/local-works/niceforum/svgr-iconkit/examples/expo-explorer/node_modules/react-native-slider-color-picker/h.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Immutable from 'immutable';\nimport tinycolor from 'tinycolor2';\nimport Slider from 'react-native-smooth-slider';\nexport var SliderHuePicker = function (_React$Component) {\n  _inherits(SliderHuePicker, _React$Component);\n\n  var _super = _createSuper(SliderHuePicker);\n\n  function SliderHuePicker(props, ctx) {\n    var _this;\n\n    _classCallCheck(this, SliderHuePicker);\n\n    _this = _super.call(this, props, ctx);\n\n    _this.setOldColor = function (oldColor) {\n      _this.setState({\n        color: tinycolor(oldColor).toHsv()\n      });\n    };\n\n    var state = {\n      oldColor: props.oldColor,\n      color: {\n        h: 0,\n        s: 1,\n        v: 1\n      }\n    };\n\n    if (props.oldColor) {\n      state.color = tinycolor(props.oldColor).toHsv();\n    }\n\n    if (props.defaultColor) {\n      state.color = tinycolor(props.defaultColor).toHsv();\n    }\n\n    _this.state = state;\n    return _this;\n  }\n\n  _createClass(SliderHuePicker, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      var nextState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return !Immutable.is(Immutable.fromJS(this.props), Immutable.fromJS(nextProps)) || !Immutable.is(Immutable.fromJS(this.state), Immutable.fromJS(nextState));\n    }\n  }, {\n    key: \"getColor\",\n    value: function getColor() {\n      var passedColor = typeof this.props.color === 'string' ? this.props.color : tinycolor(this.props.color).toHexString();\n      return passedColor || tinycolor(this.state.color).toHexString();\n    }\n  }, {\n    key: \"_onColorChange\",\n    value: function _onColorChange(x, resType) {\n      var color = _objectSpread(_objectSpread({}, this.state.color), {}, {\n        h: x\n      });\n\n      this.setState({\n        color: color\n      });\n\n      if (this.props.onColorChange) {\n        this.props.onColorChange(color, resType);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var color = this.state.color;\n      var _this$props = this.props,\n          style = _this$props.style,\n          trackStyle = _this$props.trackStyle,\n          trackImage = _this$props.trackImage,\n          thumbStyle = _this$props.thumbStyle,\n          minimumValue = _this$props.minimumValue,\n          maximumValue = _this$props.maximumValue,\n          step = _this$props.step,\n          moveVelocityThreshold = _this$props.moveVelocityThreshold,\n          useNativeDriver = _this$props.useNativeDriver;\n      var thumbColor = tinycolor({\n        h: color.h,\n        s: 1,\n        v: 1\n      }).toHexString();\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }\n      }, React.createElement(Slider, {\n        style: style,\n        trackStyle: [{\n          backgroundColor: 'transparent'\n        }, trackStyle],\n        trackImage: trackImage,\n        thumbStyle: [{\n          backgroundColor: thumbColor\n        }, thumbStyle],\n        minimumValue: minimumValue,\n        maximumValue: maximumValue,\n        value: color.h,\n        step: step,\n        moveVelocityThreshold: moveVelocityThreshold,\n        useNativeDriver: useNativeDriver,\n        onValueChange: function onValueChange(value) {\n          return _this2._onColorChange(value);\n        },\n        onSlidingComplete: function onSlidingComplete(value) {\n          return _this2._onColorChange(value, 'end');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }\n      }));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.oldColor !== prevState.oldColor) {\n        return {\n          oldColor: nextProps.oldColor,\n          color: tinycolor(nextProps.oldColor).toHsv()\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return SliderHuePicker;\n}(React.Component);\nSliderHuePicker.propTypes = {\n  color: PropTypes.oneOfType([PropTypes.string, PropTypes.shape({\n    h: PropTypes.number,\n    s: PropTypes.number,\n    v: PropTypes.number\n  })]),\n  defaultColor: PropTypes.string,\n  oldColor: PropTypes.string,\n  onColorChange: PropTypes.func,\n  minimumValue: PropTypes.number,\n  maximumValue: PropTypes.number,\n  step: PropTypes.number,\n  moveVelocityThreshold: PropTypes.number,\n  trackImage: Image.propTypes.source,\n  useNativeDriver: PropTypes.bool\n};\nSliderHuePicker.defaultProps = {\n  minimumValue: 0,\n  maximumValue: 359,\n  step: 1,\n  moveVelocityThreshold: 2000,\n  trackImage: require(\"./rainbow_slider.png\"),\n  useNativeDriver: false\n};\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'transparent',\n    flex: 1,\n    alignItems: 'stretch',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/leman/local-works/niceforum/svgr-iconkit/examples/expo-explorer/node_modules/react-native-slider-color-picker/h.js"],"names":["React","PropTypes","Immutable","tinycolor","Slider","SliderHuePicker","props","ctx","setOldColor","oldColor","setState","color","toHsv","state","h","s","v","defaultColor","nextProps","nextState","is","fromJS","passedColor","toHexString","x","resType","onColorChange","style","trackStyle","trackImage","thumbStyle","minimumValue","maximumValue","step","moveVelocityThreshold","useNativeDriver","thumbColor","styles","container","backgroundColor","value","_onColorChange","prevState","Component","propTypes","oneOfType","string","shape","number","func","Image","source","bool","defaultProps","require","StyleSheet","create","flex","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Image,\n    StyleSheet,\n    View,\n} from 'react-native';\nimport Immutable from 'immutable';\nimport tinycolor from 'tinycolor2';\nimport Slider from 'react-native-smooth-slider';\n\nexport class SliderHuePicker extends React.Component {\n\n    constructor(props, ctx) {\n        super(props, ctx);\n\n        const state = {\n            oldColor: props.oldColor,\n\n            color: {\n                h: 0,\n                s: 1,\n                v: 1,\n            },\n        };\n        if (props.oldColor) {\n            state.color = tinycolor(props.oldColor).toHsv();\n        }\n        if (props.defaultColor) {\n            state.color = tinycolor(props.defaultColor).toHsv();\n        }\n        this.state = state;\n    }\n\n    shouldComponentUpdate(nextProps, nextState = {}) {\n        return !Immutable.is(Immutable.fromJS(this.props), Immutable.fromJS(nextProps))\n        || !Immutable.is(Immutable.fromJS(this.state), Immutable.fromJS(nextState));\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        if (nextProps.oldColor !== prevState.oldColor) {\n            return {\n                oldColor: nextProps.oldColor,\n\n                color: tinycolor(nextProps.oldColor).toHsv(),\n            };\n        }\n\n        return null;\n    }\n\n    static propTypes = {\n        color: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.shape({\n                h: PropTypes.number,\n                s: PropTypes.number,\n                v: PropTypes.number\n            }),\n        ]),\n        defaultColor: PropTypes.string,\n        oldColor: PropTypes.string,\n        onColorChange: PropTypes.func,\n        minimumValue: PropTypes.number,\n        maximumValue: PropTypes.number,\n        step: PropTypes.number,\n        moveVelocityThreshold: PropTypes.number,    // Prevent onValueChange if slide too faster\n        trackImage: Image.propTypes.source,\n\n        /**\n         * The useNativeDriver parameter in Animated used by react-native-gesture-handler when the user change the value.\n         * Default value is false, because some Android phone [PanGestureHandler causes Animated Value to jump when using native driver](https://github.com/software-mansion/react-native-gesture-handler/issues/984)\n         */\n        useNativeDriver: PropTypes.bool,\n    };\n\n    static defaultProps = {\n        minimumValue: 0,\n        maximumValue: 359,  // 360 will cause h to 0 too, so 359 by default\n        step: 1,\n        moveVelocityThreshold: 2000,\n        trackImage: require('./rainbow_slider.png'),\n        useNativeDriver: false,\n    };\n\n    getColor() {\n        const passedColor = typeof this.props.color === 'string' ?\n            this.props.color :\n            tinycolor(this.props.color).toHexString();\n        return passedColor || tinycolor(this.state.color).toHexString();\n    }\n\n    setOldColor = oldColor => {\n        this.setState({\n            color: tinycolor(oldColor).toHsv(),\n        });\n    }\n\n    _onColorChange(x, resType) {\n        let color = {\n            ...this.state.color,\n            h: x,\n        };\n        this.setState({\n            color,\n        });\n\n        if (this.props.onColorChange) {\n            this.props.onColorChange(color, resType);\n        }\n    }\n\n    render() {\n        const {\n            color,\n        } = this.state;\n        const {\n            style,\n            trackStyle,\n            trackImage,\n            thumbStyle,\n            minimumValue,\n            maximumValue,\n            step,\n            moveVelocityThreshold,\n            useNativeDriver,\n        } = this.props;\n\n        let thumbColor = tinycolor({\n            h: color.h,\n            s: 1,\n            v: 1,\n        }).toHexString();\n\n        return (\n            <View style={styles.container}>\n                <Slider\n                    style={style}\n                    trackStyle={[{backgroundColor: 'transparent'}, trackStyle]}\n                    trackImage={trackImage}\n                    thumbStyle={[{backgroundColor: thumbColor}, thumbStyle]}\n                    minimumValue={minimumValue}\n                    maximumValue={maximumValue}\n                    value={color.h}\n                    step={step}\n                    moveVelocityThreshold={moveVelocityThreshold}\n                    useNativeDriver={useNativeDriver}\n                    onValueChange={value => this._onColorChange(value)}\n                    onSlidingComplete={value => this._onColorChange(value, 'end')}/>\n            </View>\n        );\n    }\n\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: 'transparent',\n        flex: 1,\n        alignItems: 'stretch',\n        justifyContent: 'center',\n    },\n});\n"]},"metadata":{},"sourceType":"module"}