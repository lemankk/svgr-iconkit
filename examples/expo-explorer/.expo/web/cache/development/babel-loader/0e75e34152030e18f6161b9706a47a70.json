{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/leman/local-works/niceforum/svgr-iconkit/examples/expo-explorer/node_modules/react-native-slider-color-picker/v.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Immutable from 'immutable';\nimport tinycolor from 'tinycolor2';\nimport Slider from 'react-native-smooth-slider';\nexport var SliderValuePicker = function (_React$Component) {\n  _inherits(SliderValuePicker, _React$Component);\n\n  var _super = _createSuper(SliderValuePicker);\n\n  function SliderValuePicker(props, ctx) {\n    var _this;\n\n    _classCallCheck(this, SliderValuePicker);\n\n    _this = _super.call(this, props, ctx);\n\n    _this.setOldColor = function (oldColor) {\n      _this.setState({\n        color: tinycolor(oldColor).toHsv()\n      });\n    };\n\n    var state = {\n      oldColor: props.oldColor,\n      color: {\n        h: 0,\n        s: 1,\n        v: 1\n      }\n    };\n\n    if (props.oldColor) {\n      state.color = tinycolor(props.oldColor).toHsv();\n    }\n\n    if (props.defaultColor) {\n      state.color = tinycolor(props.defaultColor).toHsv();\n    }\n\n    _this.state = state;\n    return _this;\n  }\n\n  _createClass(SliderValuePicker, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      var nextState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return !Immutable.is(Immutable.fromJS(this.props), Immutable.fromJS(nextProps)) || !Immutable.is(Immutable.fromJS(this.state), Immutable.fromJS(nextState));\n    }\n  }, {\n    key: \"getColor\",\n    value: function getColor() {\n      var passedColor = typeof this.props.color === 'string' ? this.props.color : tinycolor(this.props.color).toHexString();\n      return passedColor || tinycolor(this.state.color).toHexString();\n    }\n  }, {\n    key: \"_onColorChange\",\n    value: function _onColorChange(x, resType) {\n      var color = _objectSpread(_objectSpread({}, this.state.color), {}, {\n        v: x\n      });\n\n      this.setState({\n        color: color\n      });\n\n      if (this.props.onColorChange) {\n        this.props.onColorChange(color, resType);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var color = this.state.color;\n      var _this$props = this.props,\n          style = _this$props.style,\n          trackStyle = _this$props.trackStyle,\n          trackImage = _this$props.trackImage,\n          thumbStyle = _this$props.thumbStyle,\n          minimumTrackTintColor = _this$props.minimumTrackTintColor,\n          maximumTrackTintColor = _this$props.maximumTrackTintColor,\n          minimumValue = _this$props.minimumValue,\n          maximumValue = _this$props.maximumValue,\n          step = _this$props.step,\n          moveVelocityThreshold = _this$props.moveVelocityThreshold,\n          useNativeDriver = _this$props.useNativeDriver;\n      var thumbColor = tinycolor(_objectSpread(_objectSpread({}, color), {}, {\n        s: 0\n      })).toHexString();\n      var borderRadius = styles.style.borderRadius;\n\n      if (style) {\n        if (style.hasOwnProperty('borderRadius')) {\n          borderRadius = style.borderRadius;\n        } else if (style.hasOwnProperty('height')) {\n          borderRadius = style.height / 2;\n        }\n      }\n\n      if (trackStyle) {\n        if (trackStyle.hasOwnProperty('borderRadius')) {\n          borderRadius = trackStyle.borderRadius;\n        } else if (trackStyle.hasOwnProperty('height')) {\n          borderRadius = trackStyle.height / 2;\n        }\n      }\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }\n      }, React.createElement(Slider, {\n        style: style || styles.style,\n        trackStyle: [{\n          backgroundColor: 'transparent'\n        }, trackStyle, {\n          borderRadius: borderRadius\n        }],\n        trackImage: trackImage,\n        thumbStyle: [{\n          backgroundColor: thumbColor\n        }, thumbStyle],\n        minimumTrackTintColor: minimumTrackTintColor,\n        maximumTrackTintColor: maximumTrackTintColor,\n        minimumValue: minimumValue,\n        maximumValue: maximumValue,\n        value: color.v,\n        step: step,\n        moveVelocityThreshold: moveVelocityThreshold,\n        useNativeDriver: useNativeDriver,\n        onValueChange: function onValueChange(value) {\n          return _this2._onColorChange(value);\n        },\n        onSlidingComplete: function onSlidingComplete(value) {\n          return _this2._onColorChange(value, 'end');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }\n      }));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.oldColor !== prevState.oldColor) {\n        return {\n          oldColor: nextProps.oldColor,\n          color: tinycolor(nextProps.oldColor).toHsv()\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return SliderValuePicker;\n}(React.Component);\nSliderValuePicker.propTypes = {\n  color: PropTypes.oneOfType([PropTypes.string, PropTypes.shape({\n    h: PropTypes.number,\n    s: PropTypes.number,\n    v: PropTypes.number\n  })]),\n  defaultColor: PropTypes.string,\n  oldColor: PropTypes.string,\n  onColorChange: PropTypes.func,\n  minimumValue: PropTypes.number,\n  maximumValue: PropTypes.number,\n  step: PropTypes.number,\n  minimumTrackTintColor: PropTypes.string,\n  maximumTrackTintColor: PropTypes.string,\n  moveVelocityThreshold: PropTypes.number,\n  useNativeDriver: PropTypes.bool\n};\nSliderValuePicker.defaultProps = {\n  minimumValue: 0.01,\n  maximumValue: 1,\n  step: 0.01,\n  minimumTrackTintColor: '#3f3f3f',\n  maximumTrackTintColor: '#b3b3b3',\n  moveVelocityThreshold: 2000,\n  useNativeDriver: false\n};\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'transparent',\n    flex: 1,\n    alignItems: 'stretch',\n    justifyContent: 'center'\n  },\n  style: {\n    height: 12,\n    borderRadius: 6\n  }\n});","map":{"version":3,"sources":["/Users/leman/local-works/niceforum/svgr-iconkit/examples/expo-explorer/node_modules/react-native-slider-color-picker/v.js"],"names":["React","PropTypes","Immutable","tinycolor","Slider","SliderValuePicker","props","ctx","setOldColor","oldColor","setState","color","toHsv","state","h","s","v","defaultColor","nextProps","nextState","is","fromJS","passedColor","toHexString","x","resType","onColorChange","style","trackStyle","trackImage","thumbStyle","minimumTrackTintColor","maximumTrackTintColor","minimumValue","maximumValue","step","moveVelocityThreshold","useNativeDriver","thumbColor","borderRadius","styles","hasOwnProperty","height","container","backgroundColor","value","_onColorChange","prevState","Component","propTypes","oneOfType","string","shape","number","func","bool","defaultProps","StyleSheet","create","flex","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    StyleSheet,\n    View,\n} from 'react-native';\nimport Immutable from 'immutable';\nimport tinycolor from 'tinycolor2';\nimport Slider from 'react-native-smooth-slider';\n\nexport class SliderValuePicker extends React.Component {\n\n    constructor(props, ctx) {\n        super(props, ctx);\n\n        const state = {\n            oldColor: props.oldColor,\n\n            color: {\n                h: 0,\n                s: 1,\n                v: 1,\n            },\n        };\n        if (props.oldColor) {\n            state.color = tinycolor(props.oldColor).toHsv();\n        }\n        if (props.defaultColor) {\n            state.color = tinycolor(props.defaultColor).toHsv();\n        }\n        this.state = state;\n    }\n\n    shouldComponentUpdate(nextProps, nextState = {}) {\n        return !Immutable.is(Immutable.fromJS(this.props), Immutable.fromJS(nextProps))\n        || !Immutable.is(Immutable.fromJS(this.state), Immutable.fromJS(nextState));\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        if (nextProps.oldColor !== prevState.oldColor) {\n            return {\n                oldColor: nextProps.oldColor,\n\n                color: tinycolor(nextProps.oldColor).toHsv(),\n            };\n        }\n\n        return null;\n    }\n\n    static propTypes = {\n        color: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.shape({\n                h: PropTypes.number,\n                s: PropTypes.number,\n                v: PropTypes.number\n            }),\n        ]),\n        defaultColor: PropTypes.string,\n        oldColor: PropTypes.string,\n        onColorChange: PropTypes.func,\n        minimumValue: PropTypes.number,\n        maximumValue: PropTypes.number,\n        step: PropTypes.number,\n        minimumTrackTintColor: PropTypes.string,\n        maximumTrackTintColor: PropTypes.string,\n        moveVelocityThreshold: PropTypes.number,    // Prevent onValueChange if slide too faster\n\n        /**\n         * The useNativeDriver parameter in Animated used by react-native-gesture-handler when the user change the value.\n         * Default value is false, because some Android phone [PanGestureHandler causes Animated Value to jump when using native driver](https://github.com/software-mansion/react-native-gesture-handler/issues/984)\n         */\n        useNativeDriver: PropTypes.bool,\n    };\n\n    static defaultProps = {\n        minimumValue: 0.01, // 0 will cause h and s to 0 too, so 0.01 by default\n        maximumValue: 1,\n        step: 0.01,\n        minimumTrackTintColor: '#3f3f3f',\n        maximumTrackTintColor: '#b3b3b3',\n        moveVelocityThreshold: 2000,\n        useNativeDriver: false,\n    };\n\n    getColor() {\n        const passedColor = typeof this.props.color === 'string' ?\n            this.props.color :\n            tinycolor(this.props.color).toHexString();\n        return passedColor || tinycolor(this.state.color).toHexString();\n    }\n\n    setOldColor = oldColor => {\n        this.setState({\n            color: tinycolor(oldColor).toHsv(),\n        });\n    }\n\n    _onColorChange(x, resType) {\n        let color = {\n            ...this.state.color,\n            v: x,\n        };\n        this.setState({\n            color,\n        });\n\n        if (this.props.onColorChange) {\n            this.props.onColorChange(color, resType);\n        }\n    }\n\n    render() {\n        const {\n            color,\n        } = this.state;\n        const {\n            style,\n            trackStyle,\n            trackImage,\n            thumbStyle,\n            minimumTrackTintColor,\n            maximumTrackTintColor,\n            minimumValue,\n            maximumValue,\n            step,\n            moveVelocityThreshold,\n            useNativeDriver,\n        } = this.props;\n\n        let thumbColor = tinycolor({\n            ...color,\n            s: 0,\n        }).toHexString();\n\n        let borderRadius = styles.style.borderRadius;\n        if (style) {\n            if (style.hasOwnProperty('borderRadius')) {\n                borderRadius = style.borderRadius;\n            } else if (style.hasOwnProperty('height')) {\n                borderRadius = style.height / 2;\n            }\n        }\n        if (trackStyle) {\n            if (trackStyle.hasOwnProperty('borderRadius')) {\n                borderRadius = trackStyle.borderRadius;\n            } else if (trackStyle.hasOwnProperty('height')) {\n                borderRadius = trackStyle.height / 2;\n            }\n        }\n\n        return (\n            <View style={styles.container}>\n                <Slider\n                    style={style || styles.style}\n                    trackStyle={[{backgroundColor: 'transparent'}, trackStyle, {borderRadius}]}\n                    trackImage={trackImage}\n                    thumbStyle={[{backgroundColor: thumbColor}, thumbStyle]}\n                    minimumTrackTintColor={minimumTrackTintColor}\n                    maximumTrackTintColor={maximumTrackTintColor}\n                    minimumValue={minimumValue}\n                    maximumValue={maximumValue}\n                    value={color.v}\n                    step={step}\n                    moveVelocityThreshold={moveVelocityThreshold}\n                    useNativeDriver={useNativeDriver}\n                    onValueChange={value => this._onColorChange(value)}\n                    onSlidingComplete={value => this._onColorChange(value, 'end')}/>\n            </View>\n        );\n    }\n\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: 'transparent',\n        flex: 1,\n        alignItems: 'stretch',\n        justifyContent: 'center',\n    },\n    style: {\n        height: 12,\n        borderRadius: 6,\n    },\n});\n"]},"metadata":{},"sourceType":"module"}