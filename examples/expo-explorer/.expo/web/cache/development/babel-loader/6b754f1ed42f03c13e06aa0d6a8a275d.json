{"ast":null,"code":"var _jsxFileName = \"/Users/leman/local-works/niceforum/svgr-iconkit/examples/expo-explorer/src/components/ColorPicker.js\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { VStack, Pressable } from \"native-base\";\nvar defaultColors = ['#'];\nexport default function ColorPicker(_ref) {\n  var _this = this;\n\n  var _ref$value = _ref.value,\n      value = _ref$value === void 0 ? \"#000\" : _ref$value,\n      _ref$colors = _ref.colors,\n      colors = _ref$colors === void 0 ? defaultColors : _ref$colors,\n      onValueChange = _ref.onValueChange;\n  return React.createElement(VStack, {\n    space: 2,\n    padding: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, colors.map(function (color) {\n    return React.createElement(Pressable, {\n      borderColor: value === color ? '#333' : 'transparent',\n      borderWidth: 2,\n      key: color,\n      backgroundColor: color,\n      width: 30,\n      height: 30,\n      onPress: function onPress() {\n        return onValueChange && onValueChange(color);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 29\n      }\n    });\n  }));\n}","map":{"version":3,"sources":["/Users/leman/local-works/niceforum/svgr-iconkit/examples/expo-explorer/src/components/ColorPicker.js"],"names":["React","VStack","Pressable","defaultColors","ColorPicker","value","colors","onValueChange","map","color"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,aAAlC;AAEA,IAAMC,aAAa,GAAG,CAAC,GAAD,CAAtB;AAGA,eAAe,SAASC,WAAT,OAAgF;AAAA;;AAAA,wBAAzDC,KAAyD;AAAA,MAAzDA,KAAyD,2BAAjD,MAAiD;AAAA,yBAAzCC,MAAyC;AAAA,MAAzCA,MAAyC,4BAAhCH,aAAgC;AAAA,MAAjBI,aAAiB,QAAjBA,aAAiB;AAE7F,SACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE,CAAf;AAAkB,IAAA,OAAO,EAAE,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,MAAM,CAACE,GAAP,CAAY,UAAAC,KAAK;AAAA,WAAI,oBAAC,SAAD;AAAW,MAAA,WAAW,EAAEJ,KAAK,KAAKI,KAAV,GAAkB,MAAlB,GAA0B,aAAlD;AAAkE,MAAA,WAAW,EAAE,CAA/E;AAAkF,MAAA,GAAG,EAAEA,KAAvF;AAA8F,MAAA,eAAe,EAAEA,KAA/G;AAAsH,MAAA,KAAK,EAAE,EAA7H;AAAiI,MAAA,MAAM,EAAE,EAAzI;AAA6I,MAAA,OAAO,EAAE;AAAA,eAAMF,aAAa,IAAIA,aAAa,CAACE,KAAD,CAApC;AAAA,OAAtJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ;AAAA,GAAjB,CADH,CADF;AAKD","sourcesContent":["import React from \"react\";\nimport { View, StyleSheet } from \"react-native\";\nimport { VStack, Pressable } from \"native-base\";\n\nconst defaultColors = ['#']\n;\n\nexport default function ColorPicker({ value = \"#000\", colors = defaultColors, onValueChange }) {\n\n  return (\n    <VStack space={2} padding={2}>\n      {colors.map( color => <Pressable borderColor={value === color ? '#333': 'transparent' } borderWidth={2} key={color} backgroundColor={color} width={30} height={30} onPress={() => onValueChange && onValueChange(color)} />)}\n    </VStack>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}