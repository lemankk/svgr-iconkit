{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _react=_interopRequireWildcard(require(\"react\"));var _toggle=require(\"@react-stately/toggle\");var _reactNative=require(\"react-native-web/dist/index\");var _native=_interopRequireDefault(require(\"styled-components/native\"));var _lodash=_interopRequireDefault(require(\"lodash.isnil\"));var _useThemeProps=require(\"../../../hooks/useThemeProps\");var _hooks=require(\"../../../hooks\");var _styledSystem=require(\"styled-system\");var _customProps=require(\"../../../utils/customProps\");var _utils=require(\"../../../utils\");var _interactions=require(\"@react-native-aria/interactions\");var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/primitives/Switch/index.tsx\";var StyledNBSwitch=(0,_native.default)(_reactNative.Switch)(_styledSystem.color,_styledSystem.space,_styledSystem.layout,_styledSystem.flexbox,_styledSystem.border,_styledSystem.position,_customProps.customPosition,_customProps.customBorder,_customProps.customBackground,_customProps.customOutline,_customProps.customShadow,_customProps.customExtra,_customProps.customLayout);var Switch=function Switch(_ref2,ref){var style=_ref2.style,onToggle=_ref2.onToggle,isDisabled=_ref2.isDisabled,isInvalid=_ref2.isInvalid,isChecked=_ref2.isChecked,defaultIsChecked=_ref2.defaultIsChecked,accessibilityLabel=_ref2.accessibilityLabel,accessibilityHint=_ref2.accessibilityHint,props=(0,_objectWithoutProperties2.default)(_ref2,[\"style\",\"onToggle\",\"isDisabled\",\"isInvalid\",\"isChecked\",\"defaultIsChecked\",\"accessibilityLabel\",\"accessibilityHint\"]);var state=(0,_toggle.useToggleState)({defaultSelected:!(0,_lodash.default)(defaultIsChecked)?defaultIsChecked:false});var _usePropsResolution=(0,_useThemeProps.usePropsResolution)('Switch',props),_onTrackColor=_usePropsResolution.onTrackColor,_offTrackColor=_usePropsResolution.offTrackColor,_onThumbColor=_usePropsResolution.onThumbColor,_offThumbColor=_usePropsResolution.offThumbColor,themeStyle=_usePropsResolution.style,_hover=_usePropsResolution._hover,newProps=(0,_objectWithoutProperties2.default)(_usePropsResolution,[\"onTrackColor\",\"offTrackColor\",\"onThumbColor\",\"offThumbColor\",\"style\",\"_hover\"]);var borderColorInvalid=(0,_hooks.useToken)('colors','danger.600');var checked=!(0,_lodash.default)(isChecked)?isChecked:state.isSelected;var onTrackColor=(0,_hooks.useToken)('colors',_onTrackColor);var offTrackColor=(0,_hooks.useToken)('colors',_offTrackColor);var onThumbColor=(0,_hooks.useToken)('colors',_onThumbColor);var offThumbColor=(0,_hooks.useToken)('colors',_offThumbColor);var inValidPropFactors={borderWidth:1,borderRadius:16,borderColor:borderColorInvalid};var computedStyle=_reactNative.StyleSheet.flatten([themeStyle,style,isInvalid?inValidPropFactors:{}]);var _ref=_react.default.useRef(null);var _useHover=(0,_interactions.useHover)({},_ref),isHovered=_useHover.isHovered;return _react.default.createElement(StyledNBSwitch,(0,_extends2.default)({accessibilityLabel:accessibilityLabel,accessibilityHint:accessibilityHint,trackColor:{false:offTrackColor,true:onTrackColor},thumbColor:checked?onThumbColor:offThumbColor,activeThumbColor:onThumbColor,ios_backgroundColor:offTrackColor},isHovered&&_hover,newProps,{disabled:isDisabled,onValueChange:onToggle?onToggle:state.toggle,value:checked,style:computedStyle,ref:(0,_utils.mergeRefs)([ref,_ref]),opacity:isDisabled?0.4:1,__self:_this,__source:{fileName:_jsxFileName,lineNumber:86,columnNumber:5}}));};var _default=(0,_react.memo)((0,_react.forwardRef)(Switch));exports.default=_default;","map":{"version":3,"sources":["index.tsx"],"names":["StyledNBSwitch","RNSwitch","color","space","layout","flexbox","border","position","customPosition","customBorder","customBackground","customOutline","customShadow","customExtra","customLayout","Switch","style","onToggle","isDisabled","isInvalid","isChecked","defaultIsChecked","accessibilityLabel","accessibilityHint","props","state","defaultSelected","_onTrackColor","_offTrackColor","_onThumbColor","_offThumbColor","themeStyle","_hover","newProps","borderColorInvalid","checked","onTrackColor","offTrackColor","onThumbColor","offThumbColor","inValidPropFactors","borderWidth","borderRadius","borderColor","computedStyle","StyleSheet","_ref","React","isHovered","false","true"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { useToggleState } from '@react-stately/toggle';\nimport { StyleSheet, ViewStyle, Switch as RNSwitch } from 'react-native';\nimport styled from 'styled-components/native';\nimport isNil from 'lodash.isnil';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useToken } from '../../../hooks';\nimport { border, color, flexbox, layout, space, position } from 'styled-system';\nimport {\n  customBorder,\n  customBackground,\n  customOutline,\n  customLayout,\n  customExtra,\n  customShadow,\n  customPosition,\n} from '../../../utils/customProps';\nimport type { ISwitchProps } from './types';\nimport { mergeRefs } from '../../../utils';\nimport { useHover } from '@react-native-aria/interactions';\n\nconst StyledNBSwitch = styled(RNSwitch)<ISwitchProps>(\n  color,\n  space,\n  layout,\n  flexbox,\n  border,\n  position,\n  customPosition,\n  customBorder,\n  customBackground,\n  customOutline,\n  customShadow,\n  customExtra,\n  customLayout\n);\n\nconst Switch = (\n  {\n    style,\n    onToggle,\n    isDisabled,\n    isInvalid,\n    isChecked,\n    defaultIsChecked,\n    accessibilityLabel,\n    accessibilityHint,\n    ...props\n  }: ISwitchProps,\n  ref: any\n) => {\n  const state = useToggleState({\n    defaultSelected: !isNil(defaultIsChecked) ? defaultIsChecked : false,\n  });\n  const {\n    onTrackColor: _onTrackColor,\n    offTrackColor: _offTrackColor,\n    onThumbColor: _onThumbColor,\n    offThumbColor: _offThumbColor,\n    style: themeStyle,\n    _hover,\n    ...newProps\n  } = usePropsResolution('Switch', props);\n  const borderColorInvalid = useToken('colors', 'danger.600');\n  const checked = !isNil(isChecked) ? isChecked : state.isSelected;\n  const onTrackColor = useToken('colors', _onTrackColor);\n  const offTrackColor = useToken('colors', _offTrackColor);\n  const onThumbColor = useToken('colors', _onThumbColor);\n  const offThumbColor = useToken('colors', _offThumbColor);\n  const inValidPropFactors = {\n    borderWidth: 1,\n    borderRadius: 16,\n    borderColor: borderColorInvalid,\n  };\n\n  let computedStyle: ViewStyle = StyleSheet.flatten([\n    themeStyle,\n    style,\n    isInvalid ? inValidPropFactors : {},\n  ]);\n\n  const _ref = React.useRef(null);\n  const { isHovered } = useHover({}, _ref);\n\n  return (\n    <StyledNBSwitch\n      accessibilityLabel={accessibilityLabel}\n      accessibilityHint={accessibilityHint}\n      trackColor={{ false: offTrackColor, true: onTrackColor }}\n      thumbColor={checked ? onThumbColor : offThumbColor}\n      activeThumbColor={onThumbColor} // react-native-web prop for active thumbColor\n      ios_backgroundColor={offTrackColor}\n      {...(isHovered && _hover)}\n      {...newProps}\n      disabled={isDisabled}\n      onValueChange={onToggle ? onToggle : state.toggle}\n      value={checked}\n      style={computedStyle}\n      ref={mergeRefs([ref, _ref])}\n      opacity={isDisabled ? 0.4 : 1}\n    />\n  );\n};\n\nexport default memo(forwardRef(Switch));\nexport type { ISwitchProps };\n"]},"metadata":{},"sourceType":"script"}