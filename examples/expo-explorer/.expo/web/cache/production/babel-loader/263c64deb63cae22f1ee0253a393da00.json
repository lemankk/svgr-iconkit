{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _createClass from\"@babel/runtime/helpers/createClass\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _wrapNativeSuper from\"@babel/runtime/helpers/wrapNativeSuper\";function _createForOfIteratorHelperLoose(o,allowArrayLike){var it;if(typeof Symbol===\"undefined\"||o[Symbol.iterator]==null){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length===\"number\"){if(it)o=it;var i=0;return function(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]};};}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}it=o[Symbol.iterator]();return it.next.bind(it);}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o===\"string\")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n===\"Object\"&&o.constructor)n=o.constructor.name;if(n===\"Map\"||n===\"Set\")return Array.from(o);if(n===\"Arguments\"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import{useControlledState}from\"@react-stately/utils\";import{useMemo,useRef,useState}from\"react\";var $c91e86e24f2dc9a2182dcc2674c58c$export$Selection=function(_Set){_inherits($c91e86e24f2dc9a2182dcc2674c58c$export$Selection,_Set);var _super=_createSuper($c91e86e24f2dc9a2182dcc2674c58c$export$Selection);function $c91e86e24f2dc9a2182dcc2674c58c$export$Selection(keys,anchorKey,currentKey){var _this;_classCallCheck(this,$c91e86e24f2dc9a2182dcc2674c58c$export$Selection);_this=_super.call(this,keys);_this.anchorKey=void 0;_this.currentKey=void 0;if(keys instanceof $c91e86e24f2dc9a2182dcc2674c58c$export$Selection){_this.anchorKey=anchorKey||keys.anchorKey;_this.currentKey=currentKey||keys.currentKey;}else{_this.anchorKey=anchorKey;_this.currentKey=currentKey;}return _this;}return $c91e86e24f2dc9a2182dcc2674c58c$export$Selection;}(_wrapNativeSuper(Set));export function useMultipleSelectionState(props){var _props$selectionMode=props.selectionMode,selectionMode=_props$selectionMode===void 0?'none':_props$selectionMode,disallowEmptySelection=props.disallowEmptySelection;var isFocusedRef=useRef(false);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),_setFocused=_useState2[1];var focusedKeyRef=useRef(null);var childFocusStrategyRef=useRef(null);var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),_setFocusedKey=_useState4[1];var selectedKeysProp=useMemo(function(){return $c86d35e876e048ac11515eee40c7$var$convertSelection(props.selectedKeys);},[props.selectedKeys]);var defaultSelectedKeys=useMemo(function(){return $c86d35e876e048ac11515eee40c7$var$convertSelection(props.defaultSelectedKeys,new $c91e86e24f2dc9a2182dcc2674c58c$export$Selection());},[props.defaultSelectedKeys]);var _useControlledState=useControlledState(selectedKeysProp,defaultSelectedKeys,props.onSelectionChange),_useControlledState2=_slicedToArray(_useControlledState,2),selectedKeys=_useControlledState2[0],setSelectedKeys=_useControlledState2[1];var disabledKeysProp=useMemo(function(){return props.disabledKeys?new Set(props.disabledKeys):new Set();},[props.disabledKeys]);return{selectionMode:selectionMode,disallowEmptySelection:disallowEmptySelection,get isFocused(){return isFocusedRef.current;},setFocused:function setFocused(f){isFocusedRef.current=f;_setFocused(f);},get focusedKey(){return focusedKeyRef.current;},get childFocusStrategy(){return childFocusStrategyRef.current;},setFocusedKey:function setFocusedKey(k,childFocusStrategy){if(childFocusStrategy===void 0){childFocusStrategy='first';}focusedKeyRef.current=k;childFocusStrategyRef.current=childFocusStrategy;_setFocusedKey(k);},selectedKeys:selectedKeys,setSelectedKeys:setSelectedKeys,disabledKeys:disabledKeysProp};}function $c86d35e876e048ac11515eee40c7$var$convertSelection(selection,defaultValue){if(!selection){return defaultValue;}return selection==='all'?'all':new $c91e86e24f2dc9a2182dcc2674c58c$export$Selection(selection);}export var SelectionManager=function(){function SelectionManager(collection,state,options){_classCallCheck(this,SelectionManager);var _options$allowsCellSe;this.collection=void 0;this.state=void 0;this.allowsCellSelection=void 0;this._isSelectAll=void 0;this.collection=collection;this.state=state;this.allowsCellSelection=(_options$allowsCellSe=options==null?void 0:options.allowsCellSelection)!=null?_options$allowsCellSe:false;this._isSelectAll=null;}_createClass(SelectionManager,[{key:\"selectionMode\",get:function get(){return this.state.selectionMode;}},{key:\"disallowEmptySelection\",get:function get(){return this.state.disallowEmptySelection;}},{key:\"isFocused\",get:function get(){return this.state.isFocused;}},{key:\"setFocused\",value:function setFocused(isFocused){this.state.setFocused(isFocused);}},{key:\"focusedKey\",get:function get(){return this.state.focusedKey;}},{key:\"childFocusStrategy\",get:function get(){return this.state.childFocusStrategy;}},{key:\"setFocusedKey\",value:function setFocusedKey(key,childFocusStrategy){this.state.setFocusedKey(key,childFocusStrategy);}},{key:\"selectedKeys\",get:function get(){return this.state.selectedKeys==='all'?new Set(this.getSelectAllKeys()):this.state.selectedKeys;}},{key:\"rawSelection\",get:function get(){return this.state.selectedKeys;}},{key:\"isSelected\",value:function isSelected(key){if(this.state.selectionMode==='none'){return false;}key=this.getKey(key);return this.state.selectedKeys==='all'||this.state.selectedKeys.has(key);}},{key:\"isEmpty\",get:function get(){return this.state.selectedKeys!=='all'&&this.state.selectedKeys.size===0;}},{key:\"isSelectAll\",get:function get(){if(this.isEmpty){return false;}if(this.state.selectedKeys==='all'){return true;}if(this._isSelectAll!=null){return this._isSelectAll;}var allKeys=this.getSelectAllKeys();var selectedKeys=this.state.selectedKeys;this._isSelectAll=allKeys.every(function(k){return selectedKeys.has(k);});return this._isSelectAll;}},{key:\"firstSelectedKey\",get:function get(){var _first;var first=null;for(var _iterator=_createForOfIteratorHelperLoose(this.state.selectedKeys),_step;!(_step=_iterator()).done;){var key=_step.value;var item=this.collection.getItem(key);if(!first||(item==null?void 0:item.index)<first.index){first=item;}}return(_first=first)==null?void 0:_first.key;}},{key:\"lastSelectedKey\",get:function get(){var _last;var last=null;for(var _iterator2=_createForOfIteratorHelperLoose(this.state.selectedKeys),_step2;!(_step2=_iterator2()).done;){var key=_step2.value;var item=this.collection.getItem(key);if(!last||(item==null?void 0:item.index)>last.index){last=item;}}return(_last=last)==null?void 0:_last.key;}},{key:\"extendSelection\",value:function extendSelection(toKey){toKey=this.getKey(toKey);var selection;if(this.state.selectedKeys==='all'){selection=new $c91e86e24f2dc9a2182dcc2674c58c$export$Selection([toKey],toKey,toKey);}else{var selectedKeys=this.state.selectedKeys;var anchorKey=selectedKeys.anchorKey||toKey;selection=new $c91e86e24f2dc9a2182dcc2674c58c$export$Selection(selectedKeys,anchorKey,toKey);for(var _iterator3=_createForOfIteratorHelperLoose(this.getKeyRange(anchorKey,selectedKeys.currentKey||toKey)),_step3;!(_step3=_iterator3()).done;){var key=_step3.value;selection.delete(key);}for(var _iterator4=_createForOfIteratorHelperLoose(this.getKeyRange(toKey,anchorKey)),_step4;!(_step4=_iterator4()).done;){var _key=_step4.value;if(!this.state.disabledKeys.has(_key)){selection.add(_key);}}}this.state.setSelectedKeys(selection);}},{key:\"getKeyRange\",value:function getKeyRange(from,to){var fromItem=this.collection.getItem(from);var toItem=this.collection.getItem(to);if(fromItem&&toItem){if(fromItem.index<=toItem.index){return this.getKeyRangeInternal(from,to);}return this.getKeyRangeInternal(to,from);}return[];}},{key:\"getKeyRangeInternal\",value:function getKeyRangeInternal(from,to){var keys=[];var key=from;while(key){var item=this.collection.getItem(key);if(item&&item.type==='item'||item.type==='cell'&&this.allowsCellSelection){keys.push(key);}if(key===to){return keys;}key=this.collection.getKeyAfter(key);}return[];}},{key:\"getKey\",value:function getKey(key){var item=this.collection.getItem(key);if(!item){return key;}if(item.type==='cell'&&this.allowsCellSelection){return key;}while(item.type!=='item'&&item.parentKey){item=this.collection.getItem(item.parentKey);}if(!item||item.type!=='item'){return null;}return item.key;}},{key:\"toggleSelection\",value:function toggleSelection(key){key=this.getKey(key);if(key==null){return;}var keys=new $c91e86e24f2dc9a2182dcc2674c58c$export$Selection(this.state.selectedKeys==='all'?this.getSelectAllKeys():this.state.selectedKeys);if(keys.has(key)){keys.delete(key);}else{keys.add(key);keys.anchorKey=key;keys.currentKey=key;}this.state.setSelectedKeys(keys);}},{key:\"replaceSelection\",value:function replaceSelection(key){key=this.getKey(key);if(key==null){return;}this.state.setSelectedKeys(new $c91e86e24f2dc9a2182dcc2674c58c$export$Selection([key],key,key));}},{key:\"setSelectedKeys\",value:function setSelectedKeys(keys){if(this.selectionMode==='none'){return;}var selection=new $c91e86e24f2dc9a2182dcc2674c58c$export$Selection();for(var _iterator5=_createForOfIteratorHelperLoose(keys),_step5;!(_step5=_iterator5()).done;){var key=_step5.value;key=this.getKey(key);if(key!=null){selection.add(key);if(this.selectionMode==='single'){break;}}}this.state.setSelectedKeys(selection);}},{key:\"getSelectAllKeys\",value:function getSelectAllKeys(){var _this2=this;var keys=[];var addKeys=function addKeys(key){while(key){if(!_this2.state.disabledKeys.has(key)){var item=_this2.collection.getItem(key);if(item.type==='item'){keys.push(key);}if(item.hasChildNodes&&(_this2.allowsCellSelection||item.type!=='item')){addKeys(_toConsumableArray(item.childNodes)[0].key);}}key=_this2.collection.getKeyAfter(key);}};addKeys(this.collection.getFirstKey());return keys;}},{key:\"selectAll\",value:function selectAll(){if(this.selectionMode==='multiple'){this.state.setSelectedKeys('all');}}},{key:\"clearSelection\",value:function clearSelection(){if(this.state.selectedKeys==='all'||this.state.selectedKeys.size>0){this.state.setSelectedKeys(new $c91e86e24f2dc9a2182dcc2674c58c$export$Selection());}}},{key:\"toggleSelectAll\",value:function toggleSelectAll(){if(this.isSelectAll){this.clearSelection();}else{this.selectAll();}}},{key:\"select\",value:function select(key,e){if(this.selectionMode==='none'){return;}if(this.selectionMode==='single'){if(this.isSelected(key)&&!this.disallowEmptySelection){this.toggleSelection(key);}else{this.replaceSelection(key);}}else if(e&&e.shiftKey){this.extendSelection(key);}else{this.toggleSelection(key);}}},{key:\"isSelectionEqual\",value:function isSelectionEqual(selection){if(selection===this.state.selectedKeys){return true;}var selectedKeys=this.selectedKeys;if(selection.size!==selectedKeys.size){return false;}for(var _iterator6=_createForOfIteratorHelperLoose(selection),_step6;!(_step6=_iterator6()).done;){var key=_step6.value;if(!selectedKeys.has(key)){return false;}}for(var _iterator7=_createForOfIteratorHelperLoose(selectedKeys),_step7;!(_step7=_iterator7()).done;){var _key2=_step7.value;if(!selection.has(_key2)){return false;}}return true;}}]);return SelectionManager;}();","map":{"version":3,"sources":["packages/@react-stately/selection/src/Selection.ts","packages/@react-stately/selection/src/useMultipleSelectionState.ts","packages/@react-stately/selection/src/SelectionManager.ts"],"names":["anchorKey","currentKey","constructor","keys","selectionMode","disallowEmptySelection","isFocusedRef","useRef","useState","focusedKeyRef","childFocusStrategyRef","selectedKeysProp","useMemo","convertSelection","props","defaultSelectedKeys","useControlledState","disabledKeysProp","setFocused","setFocusedKey","childFocusStrategy","selectedKeys","setSelectedKeys","disabledKeys","selection","collection","state","allowsCellSelection","_isSelectAll","options","isSelected","key","allKeys","k","first","item","last","extendSelection","toKey","fromItem","toItem","toggleSelection","replaceSelection","addKeys","selectAll","clearSelection","toggleSelectAll","select","e","isSelectionEqual"],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Key} from 'react';\n\n/**\n * A Selection is a special Set containing Keys, which also has an anchor\n * and current selected key for use when range selecting.\n */\nexport class Selection extends Set<Key> {\n  anchorKey: Key;\n  currentKey: Key;\n\n  constructor(keys?: Iterable<Key> | Selection, anchorKey?: Key, currentKey?: Key) {\n    super(keys);\n    if (keys instanceof Selection) {\n      this.anchorKey = anchorKey || keys.anchorKey;\n      this.currentKey = currentKey || keys.currentKey;\n    } else {\n      this.anchorKey = anchorKey;\n      this.currentKey = currentKey;\n    }\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Key, useMemo, useRef, useState} from 'react';\nimport {MultipleSelection, SelectionMode} from '@react-types/shared';\nimport {MultipleSelectionState} from './types';\nimport {Selection} from './Selection';\nimport {useControlledState} from '@react-stately/utils';\n\n/**\n * Manages state for multiple selection and focus in a collection.\n */\nexport function useMultipleSelectionState(props: MultipleSelection): MultipleSelectionState {\n  let {\n    selectionMode = 'none' as SelectionMode,\n    disallowEmptySelection\n  } = props;\n\n  // We want synchronous updates to `isFocused` and `focusedKey` after their setters are called.\n  // But we also need to trigger a react re-render. So, we have both a ref (sync) and state (async).\n  let isFocusedRef = useRef(false);\n  let [, setFocused] = useState(false);\n  let focusedKeyRef = useRef(null);\n  let childFocusStrategyRef = useRef(null);\n  let [, setFocusedKey] = useState(null);\n  let selectedKeysProp = useMemo(() => convertSelection(props.selectedKeys), [props.selectedKeys]);\n  let defaultSelectedKeys = useMemo(() => convertSelection(props.defaultSelectedKeys, new Selection()), [props.defaultSelectedKeys]);\n  let [selectedKeys, setSelectedKeys] = useControlledState(\n    selectedKeysProp,\n    defaultSelectedKeys,\n    props.onSelectionChange\n  );\n  let disabledKeysProp = useMemo(() =>\n    props.disabledKeys ? new Set(props.disabledKeys) : new Set<Key>()\n  , [props.disabledKeys]);\n\n  return {\n    selectionMode,\n    disallowEmptySelection,\n    get isFocused() {\n      return isFocusedRef.current;\n    },\n    setFocused(f) {\n      isFocusedRef.current = f;\n      setFocused(f);\n    },\n    get focusedKey() {\n      return focusedKeyRef.current;\n    },\n    get childFocusStrategy() {\n      return childFocusStrategyRef.current;\n    },\n    setFocusedKey(k, childFocusStrategy = 'first') {\n      focusedKeyRef.current = k;\n      childFocusStrategyRef.current = childFocusStrategy;\n      setFocusedKey(k);\n    },\n    selectedKeys,\n    setSelectedKeys,\n    disabledKeys: disabledKeysProp\n  };\n}\n\nfunction convertSelection(selection: 'all' | Iterable<Key>, defaultValue?: Selection): 'all' | Selection {\n  if (!selection) {\n    return defaultValue;\n  }\n\n  return selection === 'all'\n    ? 'all'\n    : new Selection(selection);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Collection, FocusStrategy, Selection as ISelection, Node, PressEvent, SelectionMode} from '@react-types/shared';\nimport {Key} from 'react';\nimport {MultipleSelectionManager, MultipleSelectionState} from './types';\nimport {Selection} from './Selection';\n\ninterface SelectionManagerOptions {\n  allowsCellSelection?: boolean\n}\n\n/**\n * An interface for reading and updating multiple selection state.\n */\nexport class SelectionManager implements MultipleSelectionManager {\n  private collection: Collection<Node<unknown>>;\n  private state: MultipleSelectionState;\n  private allowsCellSelection: boolean;\n  private _isSelectAll: boolean;\n\n  constructor(collection: Collection<Node<unknown>>, state: MultipleSelectionState, options?: SelectionManagerOptions) {\n    this.collection = collection;\n    this.state = state;\n    this.allowsCellSelection = options?.allowsCellSelection ?? false;\n    this._isSelectAll = null;\n  }\n\n  /**\n   * The type of selection that is allowed in the collection.\n   */\n  get selectionMode(): SelectionMode {\n    return this.state.selectionMode;\n  }\n\n  /**\n   * Whether the collection allows empty selection.\n   */\n  get disallowEmptySelection(): boolean {\n    return this.state.disallowEmptySelection;\n  }\n\n  /**\n   * Whether the collection is currently focused.\n   */\n  get isFocused(): boolean {\n    return this.state.isFocused;\n  }\n\n  /**\n   * Sets whether the collection is focused.\n   */\n  setFocused(isFocused: boolean) {\n    this.state.setFocused(isFocused);\n  }\n\n  /**\n   * The current focused key in the collection.\n   */\n  get focusedKey(): Key {\n    return this.state.focusedKey;\n  }\n\n  /** Whether the first or last child of the focused key should receive focus. */\n  get childFocusStrategy(): FocusStrategy {\n    return this.state.childFocusStrategy;\n  }\n\n  /**\n   * Sets the focused key.\n   */\n  setFocusedKey(key: Key, childFocusStrategy?: FocusStrategy) {\n    this.state.setFocusedKey(key, childFocusStrategy);\n  }\n\n  /**\n   * The currently selected keys in the collection.\n   */\n  get selectedKeys(): Set<Key> {\n    return this.state.selectedKeys === 'all'\n      ? new Set(this.getSelectAllKeys())\n      : this.state.selectedKeys;\n  }\n\n  /**\n   * The raw selection value for the collection.\n   * Either 'all' for select all, or a set of keys.\n   */\n  get rawSelection(): ISelection {\n    return this.state.selectedKeys;\n  }\n\n  /**\n   * Returns whether a key is selected.\n   */\n  isSelected(key: Key) {\n    if (this.state.selectionMode === 'none') {\n      return false;\n    }\n\n    key = this.getKey(key);\n    return this.state.selectedKeys === 'all' || this.state.selectedKeys.has(key);\n  }\n\n  /**\n   * Whether the selection is empty.\n   */\n  get isEmpty(): boolean {\n    return this.state.selectedKeys !== 'all' && this.state.selectedKeys.size === 0;\n  }\n\n  /**\n   * Whether all items in the collection are selected.\n   */\n  get isSelectAll(): boolean {\n    if (this.isEmpty) {\n      return false;\n    }\n\n    if (this.state.selectedKeys === 'all') {\n      return true;\n    }\n\n    if (this._isSelectAll != null) {\n      return this._isSelectAll;\n    }\n\n    let allKeys = this.getSelectAllKeys();\n    let selectedKeys = this.state.selectedKeys;\n    this._isSelectAll = allKeys.every(k => selectedKeys.has(k));\n    return this._isSelectAll;\n  }\n\n  get firstSelectedKey(): Key | null {\n    let first: Node<unknown> | null = null;\n    for (let key of this.state.selectedKeys) {\n      let item = this.collection.getItem(key);\n      if (!first || item?.index < first.index) {\n        first = item;\n      }\n    }\n\n    return first?.key;\n  }\n\n  get lastSelectedKey(): Key | null {\n    let last: Node<unknown> | null = null;\n    for (let key of this.state.selectedKeys) {\n      let item = this.collection.getItem(key);\n      if (!last || item?.index > last.index) {\n        last = item;\n      }\n    }\n\n    return last?.key;\n  }\n\n  /**\n   * Extends the selection to the given key.\n   */\n  extendSelection(toKey: Key) {\n    toKey = this.getKey(toKey);\n\n    let selection: Selection;\n\n    // Only select the one key if coming from a select all.\n    if (this.state.selectedKeys === 'all') {\n      selection = new Selection([toKey], toKey, toKey);\n    } else {\n      let selectedKeys = this.state.selectedKeys as Selection;\n      let anchorKey = selectedKeys.anchorKey || toKey;\n      selection = new Selection(selectedKeys, anchorKey, toKey);\n      for (let key of this.getKeyRange(anchorKey, selectedKeys.currentKey || toKey)) {\n        selection.delete(key);\n      }\n\n      for (let key of this.getKeyRange(toKey, anchorKey)) {\n        if (!this.state.disabledKeys.has(key)) {\n          selection.add(key);\n        }\n      }\n    }\n\n    this.state.setSelectedKeys(selection);\n  }\n\n  private getKeyRange(from: Key, to: Key) {\n    let fromItem = this.collection.getItem(from);\n    let toItem = this.collection.getItem(to);\n    if (fromItem && toItem) {\n      if (fromItem.index <= toItem.index) {\n        return this.getKeyRangeInternal(from, to);\n      }\n\n      return this.getKeyRangeInternal(to, from);\n    }\n\n    return [];\n  }\n\n  private getKeyRangeInternal(from: Key, to: Key) {\n    let keys: Key[] = [];\n    let key = from;\n    while (key) {\n      let item = this.collection.getItem(key);\n      if (item && item.type === 'item' || (item.type === 'cell' && this.allowsCellSelection)) {\n        keys.push(key);\n      }\n\n      if (key === to) {\n        return keys;\n      }\n\n      key = this.collection.getKeyAfter(key);\n    }\n\n    return [];\n  }\n\n  private getKey(key: Key) {\n    let item = this.collection.getItem(key);\n    if (!item) {\n      // ¯\\_(ツ)_/¯\n      return key;\n    }\n\n    // If cell selection is allowed, just return the key.\n    if (item.type === 'cell' && this.allowsCellSelection) {\n      return key;\n    }\n\n    // Find a parent item to select\n    while (item.type !== 'item' && item.parentKey) {\n      item = this.collection.getItem(item.parentKey);\n    }\n\n    if (!item || item.type !== 'item') {\n      return null;\n    }\n\n    return item.key;\n  }\n\n  /**\n   * Toggles whether the given key is selected.\n   */\n  toggleSelection(key: Key) {\n    key = this.getKey(key);\n    if (key == null) {\n      return;\n    }\n\n    let keys = new Selection(this.state.selectedKeys === 'all' ? this.getSelectAllKeys() : this.state.selectedKeys);\n    if (keys.has(key)) {\n      keys.delete(key);\n      // TODO: move anchor to last selected key...\n      // Does `current` need to move here too?\n    } else {\n      keys.add(key);\n      keys.anchorKey = key;\n      keys.currentKey = key;\n    }\n\n    this.state.setSelectedKeys(keys);\n  }\n\n  /**\n   * Replaces the selection with only the given key.\n   */\n  replaceSelection(key: Key) {\n    key = this.getKey(key);\n    if (key == null) {\n      return;\n    }\n\n    this.state.setSelectedKeys(new Selection([key], key, key));\n  }\n\n  /**\n   * Replaces the selection with the given keys.\n   */\n  setSelectedKeys(keys: Iterable<Key>) {\n    if (this.selectionMode === 'none') {\n      return;\n    }\n\n    let selection = new Selection();\n    for (let key of keys) {\n      key = this.getKey(key);\n      if (key != null) {\n        selection.add(key);\n        if (this.selectionMode === 'single') {\n          break;\n        }\n      }\n    }\n\n    this.state.setSelectedKeys(selection);\n  }\n\n  private getSelectAllKeys() {\n    let keys: Key[] = [];\n    let addKeys = (key: Key) => {\n      while (key) {\n        if (!this.state.disabledKeys.has(key)) {\n          let item = this.collection.getItem(key);\n          if (item.type === 'item') {\n            keys.push(key);\n          }\n\n          // Add child keys. If cell selection is allowed, then include item children too.\n          if (item.hasChildNodes && (this.allowsCellSelection || item.type !== 'item')) {\n            addKeys([...item.childNodes][0].key);\n          }\n        }\n\n        key = this.collection.getKeyAfter(key);\n      }\n    };\n\n    addKeys(this.collection.getFirstKey());\n    return keys;\n  }\n\n  /**\n   * Selects all items in the collection.\n   */\n  selectAll() {\n    if (this.selectionMode === 'multiple') {\n      this.state.setSelectedKeys('all');\n    }\n  }\n\n  /**\n   * Removes all keys from the selection.\n   */\n  clearSelection() {\n    if (this.state.selectedKeys === 'all' || this.state.selectedKeys.size > 0) {\n      this.state.setSelectedKeys(new Selection());\n    }\n  }\n\n  /**\n   * Toggles between select all and an empty selection.\n   */\n  toggleSelectAll() {\n    if (this.isSelectAll) {\n      this.clearSelection();\n    } else {\n      this.selectAll();\n    }\n  }\n\n  select(key: Key, e?: PressEvent | PointerEvent) {\n    if (this.selectionMode === 'none') {\n      return;\n    }\n\n    if (this.selectionMode === 'single') {\n      if (this.isSelected(key) && !this.disallowEmptySelection) {\n        this.toggleSelection(key);\n      } else {\n        this.replaceSelection(key);\n      }\n    } else if (e && e.shiftKey) {\n      this.extendSelection(key);\n    } else {\n      this.toggleSelection(key);\n    }\n  }\n\n  /**\n   * Returns whether the current selection is equal to the given selection.\n   */\n  isSelectionEqual(selection: Set<Key>) {\n    if (selection === this.state.selectedKeys) {\n      return true;\n    }\n\n    // Check if the set of keys match.\n    let selectedKeys = this.selectedKeys;\n    if (selection.size !== selectedKeys.size) {\n      return false;\n    }\n\n    for (let key of selection) {\n      if (!selectedKeys.has(key)) {\n        return false;\n      }\n    }\n\n    for (let key of selectedKeys) {\n      if (!selection.has(key)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}