{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _react=_interopRequireDefault(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");var _hooks=require(\"../../../hooks\");var _utils=require(\"../../../utils\");var _Box=_interopRequireDefault(require(\"../../primitives/Box\"));var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/Skeleton/Skeleton.tsx\";var Skeleton=function Skeleton(allProps,ref){var _props$transform;var isDomUsable=(0,_utils.canUseDom)();var variant=allProps.variant,children=allProps.children,props=(0,_objectWithoutProperties2.default)(allProps,[\"variant\",\"children\"]);var newProps=(0,_hooks.useThemeProps)('Skeleton',props);var style=newProps.style,skeletonColor=newProps.skeletonColor,baseColor=newProps.baseColor;var blinkAnim=_react.default.useRef(new _reactNative.Animated.Value(0)).current;_react.default.useEffect(function(){if(isDomUsable){var blink=_reactNative.Animated.sequence([_reactNative.Animated.timing(blinkAnim,{toValue:1,duration:1000,useNativeDriver:_reactNative.Platform.OS!=='web'}),_reactNative.Animated.timing(blinkAnim,{toValue:0,duration:1000,useNativeDriver:_reactNative.Platform.OS!=='web'})]);_reactNative.Animated.loop(blink).start();}},[blinkAnim,isDomUsable]);var skeletonStyle={skeleton:{position:'absolute',top:0,bottom:0,height:'100%',width:'100%',borderRadius:variant==='circle'?999:3,backgroundColor:skeletonColor,opacity:blinkAnim}};return _react.default.createElement(_Box.default,(0,_extends2.default)({style:[style,{transform:((_props$transform=props.transform)!=null?_props$transform:variant==='text')?[{scaleY:0.6}]:undefined}],borderRadius:variant==='circle'?999:3,bg:baseColor},props,{ref:ref,__self:_this,__source:{fileName:_jsxFileName,lineNumber:47,columnNumber:5}}),_react.default.createElement(_reactNative.Animated.View,{style:skeletonStyle.skeleton,__self:_this,__source:{fileName:_jsxFileName,lineNumber:62,columnNumber:7}}),children?_react.default.createElement(_reactNative.View,{style:{opacity:0},__self:_this,__source:{fileName:_jsxFileName,lineNumber:63,columnNumber:19}},children):null);};var _default=_react.default.memo(_react.default.forwardRef(Skeleton));exports.default=_default;","map":{"version":3,"sources":["Skeleton.tsx"],"names":["Skeleton","isDomUsable","variant","children","props","allProps","newProps","style","skeletonColor","baseColor","blinkAnim","React","Animated","blink","toValue","duration","useNativeDriver","Platform","skeletonStyle","skeleton","position","top","bottom","height","width","borderRadius","backgroundColor","opacity","transform","scaleY"],"mappings":"mWAAA,GAAA,CAAA,MAAA,CAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,C,wDAEA,GAAA,CAAA,MAAA,CAAA,OAAA,kBAAA,CACA,GAAA,CAAA,MAAA,CAAA,OAAA,kBAAA,CACA,GAAA,CAAA,IAAA,CAAA,sBAAA,CAAA,OAAA,wBAAA,CAAA,C,uIAGA,GAAMA,CAAAA,QAAQ,CAARA,QAAAA,CAAAA,QAAAA,CAAW,QAAXA,CAAW,GAAXA,CAAmD,CAAA,GAAA,CAAA,gBAAA,CACvD,GAAMC,CAAAA,WAAW,CAAG,CAAA,EAAA,MAAA,CAApB,SAAoB,GAApB,CADuD,GAE/CC,CAAAA,OAF+C,CAEfG,QAFe,CAAA,OAAA,CAEtCF,QAFsC,CAEfE,QAFe,CAAA,QAAA,CAEzBD,KAFyB,CAAA,CAAA,EAAA,yBAAA,CAAA,OAAA,EAAA,QAAA,CAAA,CAAA,SAAA,CAAA,UAAA,CAAA,CAAA,CAGvD,GAAME,CAAAA,QAAQ,CAAG,CAAA,EAAA,MAAA,CAAA,aAAA,EAAA,UAAA,CAAjB,KAAiB,CAAjB,CAHuD,GAI/CC,CAAAA,KAJ+C,CAIXD,QAJW,CAAA,KAAA,CAIxCE,aAJwC,CAIXF,QAJW,CAAA,aAAA,CAIzBG,SAJyB,CAIXH,QAJW,CAAA,SAAA,CAKvD,GAAMI,CAAAA,SAAS,CAAGC,MAAAA,CAAAA,OAAAA,CAAAA,MAAAA,CAAa,GAAIC,CAAAA,YAAAA,CAAAA,QAAAA,CAAJ,KAAA,CAAbD,CAAa,CAAbA,EAAlB,OAAA,CAEAA,MAAAA,CAAAA,OAAAA,CAAAA,SAAAA,CAAgB,UAAM,CACpB,GAAA,WAAA,CAAiB,CACf,GAAME,CAAAA,KAAK,CAAGD,YAAAA,CAAAA,QAAAA,CAAAA,QAAAA,CAAkB,CAC9BA,YAAAA,CAAAA,QAAAA,CAAAA,MAAAA,CAAAA,SAAAA,CAA2B,CACzBE,OAAO,CADkB,CAAA,CAEzBC,QAAQ,CAFiB,IAAA,CAGzBC,eAAe,CAAEC,YAAAA,CAAAA,QAAAA,CAAAA,EAAAA,GAJW,KACH,CAA3BL,CAD8B,CAM9BA,YAAAA,CAAAA,QAAAA,CAAAA,MAAAA,CAAAA,SAAAA,CAA2B,CACzBE,OAAO,CADkB,CAAA,CAEzBC,QAAQ,CAFiB,IAAA,CAGzBC,eAAe,CAAEC,YAAAA,CAAAA,QAAAA,CAAAA,EAAAA,GATrB,KAM6B,CAA3BL,CAN8B,CAAlBA,CAAd,CAYAA,YAAAA,CAAAA,QAAAA,CAAAA,IAAAA,CAAAA,KAAAA,EAAAA,KAAAA,GAEH,CAhBDD,CAAAA,CAgBG,CAAA,SAAA,CAhBHA,WAgBG,CAhBHA,EAkBA,GAAMO,CAAAA,aAAkB,CAAG,CACzBC,QAAQ,CAAE,CACRC,QAAQ,CADA,UAAA,CAERC,GAAG,CAFK,CAAA,CAGRC,MAAM,CAHE,CAAA,CAIRC,MAAM,CAJE,MAAA,CAKRC,KAAK,CALG,MAAA,CAMRC,YAAY,CAAEvB,OAAO,GAAPA,QAAAA,CAAAA,GAAAA,CANN,CAAA,CAORwB,eAAe,CAPP,aAAA,CAQRC,OAAO,CATX,SACY,CADe,CAA3B,CAaA,MACE,CAAA,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,IAAA,CAAD,OAAA,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAA,CACE,KAAK,CAAE,CAAA,KAAA,CAEL,CACEC,SAAS,CACP,CAAA,CAAA,gBAAA,CAAA,KAAK,CAAL,SAAA,GAAA,IAAA,CAAA,gBAAA,CAAmB1B,OAAO,GAA1B,MAAA,EACI,CAAC,CAAE2B,MAAM,CADb,GACK,CAAD,CADJ,CALR,SAGI,CAFK,CADT,CAUE,YAAY,CAAE3B,OAAO,GAAPA,QAAAA,CAAAA,GAAAA,CAVhB,CAAA,CAWE,EAAE,CAXJ,SAAA,CAAA,CAAA,KAAA,CAAA,CAaE,GAAG,CAbL,GAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAeE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAD,QAAC,CAAD,IAAA,CAAA,CAAe,KAAK,CAAEgB,aAAa,CAAnC,QAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CAfF,CAeE,CAAA,CAAA,CAfF,CAgBGf,QAAQ,CAAG,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,CAAA,CAAM,KAAK,CAAE,CAAEwB,OAAO,CAAtB,CAAa,CAAb,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CAAA,EAAA,CAAA,CAAA,CAAH,QAAG,CAAH,CAjBb,IACE,CADF,CAtCF,CAAA,C,aA4DehB,MAAAA,CAAAA,OAAAA,CAAAA,IAAAA,CAAWA,MAAAA,CAAAA,OAAAA,CAAAA,UAAAA,CAAXA,QAAWA,CAAXA,C","sourcesContent":["import React from 'react';\nimport { Animated, Platform, View } from 'react-native';\nimport { useThemeProps } from '../../../hooks';\nimport { canUseDom } from '../../../utils';\nimport Box from '../../primitives/Box';\nimport type { ISkeletonProps } from './types';\n\nconst Skeleton = (allProps: ISkeletonProps, ref: any) => {\n  const isDomUsable = canUseDom();\n  const { variant, children, ...props } = allProps;\n  const newProps = useThemeProps('Skeleton', props);\n  const { style, skeletonColor, baseColor } = newProps;\n  const blinkAnim = React.useRef(new Animated.Value(0)).current;\n\n  React.useEffect(() => {\n    if (isDomUsable) {\n      const blink = Animated.sequence([\n        Animated.timing(blinkAnim, {\n          toValue: 1,\n          duration: 1000,\n          useNativeDriver: Platform.OS !== 'web',\n        }),\n        Animated.timing(blinkAnim, {\n          toValue: 0,\n          duration: 1000,\n          useNativeDriver: Platform.OS !== 'web',\n        }),\n      ]);\n      Animated.loop(blink).start();\n    }\n  }, [blinkAnim, isDomUsable]);\n\n  const skeletonStyle: any = {\n    skeleton: {\n      position: 'absolute',\n      top: 0,\n      bottom: 0,\n      height: '100%',\n      width: '100%',\n      borderRadius: variant === 'circle' ? 999 : 3,\n      backgroundColor: skeletonColor,\n      opacity: blinkAnim, // Bind opacity to animated value\n    },\n  };\n\n  return (\n    <Box\n      style={[\n        style,\n        {\n          transform:\n            props.transform ?? variant === 'text'\n              ? [{ scaleY: 0.6 }]\n              : undefined,\n        },\n      ]}\n      borderRadius={variant === 'circle' ? 999 : 3}\n      bg={baseColor}\n      {...props}\n      ref={ref}\n    >\n      <Animated.View style={skeletonStyle.skeleton} />\n      {children ? <View style={{ opacity: 0 }}>{children}</View> : null}\n    </Box>\n  );\n};\n\nexport default React.memo(React.forwardRef(Skeleton));\n"]},"metadata":{},"sourceType":"script"}