{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.useMediaQuery=useMediaQuery;var _reactNative=require(\"react-native-web/dist/index\");var _lodash=_interopRequireDefault(require(\"lodash.isnil\"));function useMediaQuery(query){var dims=(0,_reactNative.useWindowDimensions)();var height=dims==null?void 0:dims.height;var width=dims==null?void 0:dims.width;return iterateQuery(query,height,width);}function iterateQuery(query,height,width){var key;var val;var queryResults=[];if(Array.isArray(query)){query.forEach(function(subQuery){key=Object.keys(subQuery)[0];val=Object.values(subQuery)[0];queryResults.push(calculateQuery(key,val,height,width));});}else{key=Object.keys(query)[0];val=Object.values(query)[0];queryResults.push(calculateQuery(key,val,height,width));}return queryResults;}function calculateQuery(key,val,height,width){var retval;if((0,_lodash.default)(width)||(0,_lodash.default)(height)||(0,_lodash.default)(val)){return;}switch(key){case'maxWidth':retval=!(0,_lodash.default)(val)?width<=val:undefined;break;case'minWidth':retval=!(0,_lodash.default)(val)?width>=val:undefined;break;case'maxHeight':retval=!(0,_lodash.default)(val)?height<=val:undefined;break;case'minHeight':retval=!(0,_lodash.default)(val)?height>=val:undefined;break;case'orientation':if(!(0,_lodash.default)(val)){if(width>height){retval=val==='landscape';}else{retval=val==='portrait';}}break;default:break;}return retval;}","map":{"version":3,"sources":["useMediaQuery.ts"],"names":["dims","height","width","iterateQuery","queryResults","Array","query","key","Object","val","calculateQuery","retval"],"mappings":"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","sourcesContent":["import { useWindowDimensions } from 'react-native';\nimport isNil from 'lodash.isnil';\n\ntype QueryKeys =\n  | 'maxWidth'\n  | 'minWidth'\n  | 'maxHeight'\n  | 'minHeight'\n  | 'orientation';\n\ntype SubQuery = {\n  [queryKey in QueryKeys]?: number | string;\n};\ntype Query = Array<SubQuery>;\n\nexport function useMediaQuery(query: SubQuery | Query) {\n  let dims = useWindowDimensions();\n  const height = dims?.height;\n  const width = dims?.width;\n  return iterateQuery(query, height, width);\n}\n\nfunction iterateQuery(\n  query: SubQuery | Query,\n  height?: number,\n  width?: number\n) {\n  let key;\n  let val;\n  let queryResults = [];\n  if (Array.isArray(query)) {\n    query.forEach((subQuery: SubQuery) => {\n      key = Object.keys(subQuery)[0];\n      val = Object.values(subQuery)[0];\n      queryResults.push(calculateQuery(key, val, height, width));\n    });\n  } else {\n    key = Object.keys(query)[0];\n    val = Object.values(query)[0];\n    queryResults.push(calculateQuery(key, val, height, width));\n  }\n  return queryResults;\n}\n\nfunction calculateQuery(\n  key: string,\n  val?: number | string,\n  height?: number,\n  width?: number\n) {\n  let retval;\n  if (isNil(width) || isNil(height) || isNil(val)) {\n    return;\n  }\n  switch (key) {\n    case 'maxWidth':\n      retval = !isNil(val) ? width <= val : undefined;\n      break;\n    case 'minWidth':\n      retval = !isNil(val) ? width >= val : undefined;\n      break;\n    case 'maxHeight':\n      retval = !isNil(val) ? height <= val : undefined;\n      break;\n    case 'minHeight':\n      retval = !isNil(val) ? height >= val : undefined;\n      break;\n    case 'orientation':\n      if (!isNil(val)) {\n        if (width > height) {\n          retval = val === 'landscape';\n        } else {\n          retval = val === 'portrait';\n        }\n      }\n      break;\n    default:\n      break;\n  }\n  return retval;\n}\n"]},"metadata":{},"sourceType":"script"}