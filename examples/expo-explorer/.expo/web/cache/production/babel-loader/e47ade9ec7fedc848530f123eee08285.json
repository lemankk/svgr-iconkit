{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _react=_interopRequireDefault(require(\"react\"));var _Input=require(\"../../primitives/Input\");var _Context=require(\"./Context\");var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/NumberInput/NumberInputField.tsx\";var NumberInputFiled=function NumberInputFiled(_ref,ref){var isDisabled=_ref.isDisabled,props=(0,_objectWithoutProperties2.default)(_ref,[\"isDisabled\"]);var _React$useContext=_react.default.useContext(_Context.NumberInputContext),handleChange=_React$useContext.handleChange,handleChangeWithoutCheck=_React$useContext.handleChangeWithoutCheck,numberInputStepper=_React$useContext.numberInputStepper,numberInputValue=_React$useContext.numberInputValue,isControlled=_React$useContext.isControlled,context=(0,_objectWithoutProperties2.default)(_React$useContext,[\"handleChange\",\"handleChangeWithoutCheck\",\"numberInputStepper\",\"numberInputValue\",\"isControlled\"]);var changeHandler=function changeHandler(inputValue){var minusIndex=inputValue.indexOf('-');if(minusIndex!==-1&&minusIndex!==0){inputValue=inputValue.replace('-','');inputValue='-'+inputValue;}var value=parseInt(inputValue,10);if(isControlled)handleChange&&handleChange(value);else if(value)handleChangeWithoutCheck&&handleChangeWithoutCheck(value);else handleChangeWithoutCheck&&handleChangeWithoutCheck(0);};var blurHandler=function blurHandler(){if(numberInputValue)handleChange&&handleChange(numberInputValue);};return _react.default.createElement(_Input.Input,(0,_extends2.default)({p:0,pl:2},context,props,{onBlur:function onBlur(){return blurHandler();},isDisabled:isDisabled||context.isDisabled,onChangeText:function onChangeText(inputValue){return changeHandler(inputValue);},keyboardType:\"numeric\",value:\"\"+numberInputValue,InputRightElement:numberInputStepper,ref:ref,__self:_this,__source:{fileName:_jsxFileName,lineNumber:36,columnNumber:5}}));};var _default=_react.default.memo(_react.default.forwardRef(NumberInputFiled));exports.default=_default;","map":{"version":3,"sources":["NumberInputField.tsx"],"names":["NumberInputFiled","isDisabled","props","handleChange","handleChangeWithoutCheck","numberInputStepper","numberInputValue","isControlled","context","React","NumberInputContext","changeHandler","minusIndex","inputValue","value","parseInt","blurHandler"],"mappings":"mWAAA,GAAA,CAAA,MAAA,CAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CACA,GAAA,CAAA,MAAA,CAAA,OAAA,0BAAA,CAEA,GAAA,CAAA,QAAA,CAAA,OAAA,aAAA,C,kJAEA,GAAMA,CAAAA,gBAAgB,CAAhBA,QAAAA,CAAAA,gBAAAA,CAAmB,IAAnBA,CAAmB,GAAnBA,CAGD,CAFDC,GAAAA,CAAAA,UAEC,CAAA,IAAA,CAFDA,UAAAA,CAAeC,KAEd,CAAA,CAAA,EAAA,yBAAA,CAAA,OAAA,EAAA,IAAA,CAAA,CAAA,YAAA,CAAA,CAFDD,CAEC,GAAA,CAAA,iBAAA,CAWCQ,MAAAA,CAAAA,OAAAA,CAAAA,UAAAA,CAAiBC,QAAAA,CAXlB,kBAWCD,CAXD,CAEDN,YAFC,CAAA,iBAAA,CAAA,YAAA,CAGDC,wBAHC,CAAA,iBAAA,CAAA,wBAAA,CAIDC,kBAJC,CAAA,iBAAA,CAAA,kBAAA,CAKDC,gBALC,CAAA,iBAAA,CAAA,gBAAA,CAMDC,YANC,CAAA,iBAAA,CAAA,YAAA,CAOEC,OAPF,CAAA,CAAA,EAAA,yBAAA,CAAA,OAAA,EAAA,iBAAA,CAAA,CAAA,cAAA,CAAA,0BAAA,CAAA,oBAAA,CAAA,kBAAA,CAAA,cAAA,CAAA,CAAA,CAYH,GAAMG,CAAAA,aAAa,CAAbA,QAAAA,CAAAA,aAAAA,CAAgB,UAAhBA,CAAqC,CACzC,GAAIC,CAAAA,UAAU,CAAGC,UAAU,CAAVA,OAAAA,CAAjB,GAAiBA,CAAjB,CACA,GAAID,UAAU,GAAK,CAAfA,CAAAA,EAAqBA,UAAU,GAAnC,CAAA,CAA2C,CACzCC,UAAU,CAAGA,UAAU,CAAVA,OAAAA,CAAAA,GAAAA,CAAbA,EAAaA,CAAbA,CACAA,UAAU,CAAG,IAAbA,UAAAA,CAEF,IAAMC,CAAAA,KAAK,CAAGC,QAAQ,CAAA,UAAA,CAAtB,EAAsB,CAAtB,CACA,GAAA,YAAA,CAAkBZ,YAAY,EAAIA,YAAY,CAA9C,KAA8C,CAA5BA,CAAlB,IACK,IAAA,KAAA,CAAWC,wBAAwB,EAAIA,wBAAwB,CAA/D,KAA+D,CAApDA,CAAX,IACAA,CAAAA,wBAAwB,EAAIA,wBAAwB,CAApDA,CAAoD,CAApDA,CATP,CAAA,CAWA,GAAMY,CAAAA,WAAW,CAAXA,QAAAA,CAAAA,WAAAA,EAAoB,CACxB,GAAA,gBAAA,CAAsBb,YAAY,EAAIA,YAAY,CAA5BA,gBAA4B,CAA5BA,CADxB,CAAA,CAGA,MACE,CAAA,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,MAAA,CAAD,KAAA,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAA,CACE,CAAC,CADH,CAAA,CAEE,EAAE,CAFJ,CAAA,CAAA,CAAA,OAAA,CAAA,KAAA,CAAA,CAKE,MAAM,CAAE,QAAA,CAAA,MAAA,EAAA,CAAA,MAAMa,CAAAA,WAAN,EAAA,CALV,CAAA,CAME,UAAU,CAAEf,UAAU,EAAIO,OAAO,CANnC,UAAA,CAOE,YAAY,CAAE,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,CAAA,MAAgBG,CAAAA,aAAa,CAA7B,UAA6B,CAA7B,CAPhB,CAAA,CAQE,YAAY,CARd,SAAA,CASE,KAAK,CAAA,GATP,gBAAA,CAUE,iBAAiB,CAVnB,kBAAA,CAWE,GAAG,CAXL,GAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CADF,CACE,CAAA,CAAA,CAAA,CADF,CA7BF,CAAA,C,aA8CeF,MAAAA,CAAAA,OAAAA,CAAAA,IAAAA,CAAWA,MAAAA,CAAAA,OAAAA,CAAAA,UAAAA,CAAXA,gBAAWA,CAAXA,C","sourcesContent":["import React from 'react';\nimport { Input } from '../../primitives/Input';\nimport type { INumberInputContext, INumberInputFieldProps } from './types';\nimport { NumberInputContext } from './Context';\n\nconst NumberInputFiled = (\n  { isDisabled, ...props }: INumberInputFieldProps,\n  ref: any\n) => {\n  const {\n    handleChange,\n    handleChangeWithoutCheck,\n    numberInputStepper,\n    numberInputValue,\n    isControlled,\n    ...context\n  }: INumberInputContext & {\n    handleChange?: (value: string | number) => void;\n    numberInputStepper?: any;\n  } = React.useContext(NumberInputContext);\n  const changeHandler = (inputValue: any) => {\n    let minusIndex = inputValue.indexOf('-');\n    if (minusIndex !== -1 && minusIndex !== 0) {\n      inputValue = inputValue.replace('-', '');\n      inputValue = '-' + inputValue;\n    }\n    const value = parseInt(inputValue, 10);\n    if (isControlled) handleChange && handleChange(value);\n    else if (value) handleChangeWithoutCheck && handleChangeWithoutCheck(value);\n    else handleChangeWithoutCheck && handleChangeWithoutCheck(0);\n  };\n  const blurHandler = () => {\n    if (numberInputValue) handleChange && handleChange(numberInputValue);\n  };\n  return (\n    <Input\n      p={0}\n      pl={2}\n      {...context}\n      {...props}\n      onBlur={() => blurHandler()}\n      isDisabled={isDisabled || context.isDisabled}\n      onChangeText={(inputValue) => changeHandler(inputValue)}\n      keyboardType=\"numeric\"\n      value={`${numberInputValue}`}\n      InputRightElement={numberInputStepper}\n      ref={ref}\n    />\n  );\n};\n\nexport default React.memo(React.forwardRef(NumberInputFiled));\n"]},"metadata":{},"sourceType":"script"}