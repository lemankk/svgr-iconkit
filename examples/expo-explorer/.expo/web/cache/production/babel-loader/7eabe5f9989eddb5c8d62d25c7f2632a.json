{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _lodash=_interopRequireDefault(require(\"lodash.get\"));var _react=_interopRequireDefault(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");var _native=_interopRequireDefault(require(\"styled-components/native\"));var _styledSystem=require(\"styled-system\");var _hooks=require(\"../../../hooks\");var _utils=require(\"../../../utils\");var _Box=_interopRequireDefault(require(\"../../primitives/Box\"));var _theme=require(\"../../../theme\");var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/CircularProgress/CircularProgress.tsx\";var StyleAnimatedView=(0,_native.default)(_reactNative.Animated.View)(_styledSystem.color,_styledSystem.border);var CircularProgress=function CircularProgress(_ref,ref){var value=_ref.value,isIndeterminate=_ref.isIndeterminate,max=_ref.max,min=_ref.min,props=(0,_objectWithoutProperties2.default)(_ref,[\"value\",\"isIndeterminate\",\"max\",\"min\"]);var theme=(0,_hooks.useTheme)();var isDomUsable=(0,_utils.canUseDom)();if(min){value=value-min;}var sizeProps;var newProps=(0,_hooks.useThemeProps)('CircularProgress',props);var _themeTools$extractIn=_theme.themeTools.extractInObject(props,['size']),_themeTools$extractIn2=(0,_slicedToArray2.default)(_themeTools$extractIn,2),remainingProps=_themeTools$extractIn2[1];if(!newProps.size){sizeProps={height:newProps.height,width:newProps.width};}else{sizeProps={height:newProps.size,width:newProps.size};}var themeHeight=(0,_lodash.default)(theme,'space.'+sizeProps.height);var themeWidth=(0,_lodash.default)(theme,'space.'+sizeProps.width);var styleSize={height:themeHeight?parseInt(themeHeight.slice(themeHeight.Length,-2),10):sizeProps.height,width:themeWidth?parseInt(themeWidth.slice(themeWidth.Length,-2),10):sizeProps.width};var defaultThickness=newProps.thickness;var degree=new _reactNative.Animated.Value(0);if(isIndeterminate){if(isDomUsable){_reactNative.Animated.loop(_reactNative.Animated.timing(degree,{toValue:1,duration:600,easing:_reactNative.Easing.linear,useNativeDriver:false})).start();}}var _React$useState=_react.default.useState(0),_React$useState2=(0,_slicedToArray2.default)(_React$useState,2),viewHeight=_React$useState2[0],setViewHeight=_React$useState2[1];var layout=function layout(e){var height=e.nativeEvent.layout.height;setViewHeight(height);};var defaultStyling=(0,_extends2.default)({borderBottomLeftRadius:viewHeight/2,borderBottomRightRadius:viewHeight/2,borderTopLeftRadius:viewHeight/2,borderTopRightRadius:viewHeight/2,borderLeftWidth:defaultThickness,borderBottomWidth:defaultThickness,position:'absolute',borderLeftColor:'transparent',borderBottomColor:'transparent'},styleSize);var styles=_reactNative.StyleSheet.create({firstProgressLayer:(0,_extends2.default)({borderTopWidth:defaultThickness,borderRightWidth:defaultThickness},defaultStyling,{transform:[{rotateZ:'-135deg'}]}),secondProgressLayer:(0,_extends2.default)({borderTopWidth:defaultThickness,borderRightWidth:defaultThickness},defaultStyling,{transform:[{rotateZ:'45deg'}]}),offsetLayer:(0,_extends2.default)({borderTopWidth:defaultThickness,borderRightWidth:defaultThickness},defaultStyling,{borderRadius:viewHeight/2,transform:[{rotateZ:'-135deg'}]}),animateStyle:(0,_extends2.default)({borderTopWidth:defaultThickness,borderRightWidth:defaultThickness},defaultStyling,{transform:[{rotateZ:degree.interpolate({inputRange:[0,1],outputRange:['0deg','360deg']})}]})});var halfSide=(max?min?max-min:max:100)/2;var propStyle=function propStyle(percent,base_degrees){var rotateBy=base_degrees+percent*180/halfSide;return{transform:[{rotateZ:rotateBy+'deg'}]};};var renderThirdLayer=function renderThirdLayer(percent){if(percent>halfSide){return _react.default.createElement(_Box.default,{borderTopColor:newProps.color,borderRightColor:newProps.color,style:[styles.secondProgressLayer,propStyle(percent-halfSide,45)],__self:_this,__source:{fileName:_jsxFileName,lineNumber:128,columnNumber:9}});}else{return _react.default.createElement(_Box.default,{borderTopColor:newProps.trackColor,borderRightColor:newProps.trackColor,style:styles.offsetLayer,__self:_this,__source:{fileName:_jsxFileName,lineNumber:139,columnNumber:9}});}};var firstProgressLayerStyle;if(value>halfSide){firstProgressLayerStyle=propStyle(halfSide,-135);}else{firstProgressLayerStyle=propStyle(value,-135);}return _react.default.createElement(_Box.default,(0,_extends2.default)({},sizeProps,{rounded:viewHeight/2,borderWidth:defaultThickness,borderColor:newProps.trackColor,justifyContent:\"center\",alignItems:\"center\"},remainingProps,{ref:ref,accessible:true,accessibilityRole:\"progressbar\",accessibilityValue:{min:min,max:max,now:value},__self:_this,__source:{fileName:_jsxFileName,lineNumber:155,columnNumber:5}}),!isIndeterminate?_react.default.createElement(_react.default.Fragment,null,_react.default.createElement(_Box.default,{onLayout:layout,borderTopColor:newProps.color,borderRightColor:newProps.color,style:[styles.firstProgressLayer,firstProgressLayerStyle],__self:_this,__source:{fileName:_jsxFileName,lineNumber:174,columnNumber:11}}),renderThirdLayer(value),_react.default.createElement(_Box.default,{_text:newProps._text,__self:_this,__source:{fileName:_jsxFileName,lineNumber:181,columnNumber:11}},remainingProps.children)):_react.default.createElement(StyleAnimatedView,{onLayout:layout,borderTopColor:newProps.color,borderRightColor:newProps.color,style:styles.animateStyle,__self:_this,__source:{fileName:_jsxFileName,lineNumber:184,columnNumber:9}}));};var _default=_react.default.memo(_react.default.forwardRef(CircularProgress));exports.default=_default;","map":{"version":3,"sources":["CircularProgress.tsx"],"names":["StyleAnimatedView","Animated","color","border","CircularProgress","value","isIndeterminate","max","min","props","theme","isDomUsable","newProps","remainingProps","themeTools","sizeProps","height","width","themeHeight","themeWidth","styleSize","parseInt","defaultThickness","degree","toValue","duration","easing","Easing","useNativeDriver","viewHeight","setViewHeight","React","layout","e","defaultStyling","borderBottomLeftRadius","borderBottomRightRadius","borderTopLeftRadius","borderTopRightRadius","borderLeftWidth","borderBottomWidth","position","borderLeftColor","borderBottomColor","styles","StyleSheet","firstProgressLayer","borderTopWidth","borderRightWidth","transform","rotateZ","secondProgressLayer","offsetLayer","borderRadius","animateStyle","inputRange","outputRange","halfSide","propStyle","rotateBy","base_degrees","percent","renderThirdLayer","firstProgressLayerStyle","now"],"mappings":"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","sourcesContent":["import get from 'lodash.get';\nimport React from 'react';\nimport { Animated, Easing, StyleSheet } from 'react-native';\nimport styled from 'styled-components/native';\nimport { border, color } from 'styled-system';\nimport { useTheme, useThemeProps } from '../../../hooks';\nimport { canUseDom } from '../../../utils';\nimport { default as Box, IBoxProps } from '../../primitives/Box';\nimport type { ICircularProgressProps } from './types';\nimport { themeTools } from '../../../theme';\n\nconst StyleAnimatedView = styled(Animated.View)<IBoxProps>(color, border);\n\nconst CircularProgress = (\n  { value, isIndeterminate, max, min, ...props }: ICircularProgressProps,\n  ref: any\n) => {\n  const theme = useTheme();\n\n  const isDomUsable = canUseDom();\n  if (min) {\n    value = value - min;\n  }\n\n  let sizeProps;\n  let newProps = useThemeProps('CircularProgress', props);\n  let [, remainingProps] = themeTools.extractInObject(props, ['size']); // removing size from props so that Box don't accept size passed for CircularProgress\n\n  if (!newProps.size) {\n    sizeProps = {\n      height: newProps.height,\n      width: newProps.width,\n    };\n  } else {\n    sizeProps = { height: newProps.size, width: newProps.size };\n  }\n  // fetching size from theme for passing into style prop\n  const themeHeight = get(theme, 'space.' + sizeProps.height);\n  const themeWidth = get(theme, 'space.' + sizeProps.width);\n\n  const styleSize = {\n    height: themeHeight\n      ? parseInt(themeHeight.slice(themeHeight.Length, -2), 10)\n      : sizeProps.height,\n    width: themeWidth\n      ? parseInt(themeWidth.slice(themeWidth.Length, -2), 10)\n      : sizeProps.width,\n  };\n\n  const defaultThickness = newProps.thickness;\n  const degree: any = new Animated.Value(0);\n  if (isIndeterminate) {\n    if (isDomUsable) {\n      Animated.loop(\n        Animated.timing(degree, {\n          toValue: 1,\n          duration: 600,\n          easing: Easing.linear,\n          useNativeDriver: false,\n        })\n      ).start();\n    }\n  }\n  const [viewHeight, setViewHeight] = React.useState(0);\n  const layout = (e: any) => {\n    let height = e.nativeEvent.layout.height;\n    setViewHeight(height);\n  };\n\n  const defaultStyling: any = {\n    borderBottomLeftRadius: viewHeight / 2,\n    borderBottomRightRadius: viewHeight / 2,\n    borderTopLeftRadius: viewHeight / 2,\n    borderTopRightRadius: viewHeight / 2,\n    borderLeftWidth: defaultThickness,\n    borderBottomWidth: defaultThickness,\n    position: 'absolute',\n    borderLeftColor: 'transparent',\n    borderBottomColor: 'transparent',\n    ...styleSize,\n  };\n  const styles = StyleSheet.create({\n    firstProgressLayer: {\n      borderTopWidth: defaultThickness,\n      borderRightWidth: defaultThickness,\n      ...defaultStyling,\n      transform: [{ rotateZ: '-135deg' }],\n    },\n    secondProgressLayer: {\n      borderTopWidth: defaultThickness,\n      borderRightWidth: defaultThickness,\n      ...defaultStyling,\n      transform: [{ rotateZ: '45deg' }],\n    },\n    offsetLayer: {\n      borderTopWidth: defaultThickness,\n      borderRightWidth: defaultThickness,\n      ...defaultStyling,\n      borderRadius: viewHeight / 2,\n      transform: [{ rotateZ: '-135deg' }],\n    },\n    animateStyle: {\n      borderTopWidth: defaultThickness,\n      borderRightWidth: defaultThickness,\n      ...defaultStyling,\n      transform: [\n        {\n          rotateZ: degree.interpolate({\n            inputRange: [0, 1],\n            outputRange: ['0deg', '360deg'],\n          }),\n        },\n      ],\n    },\n  });\n  let halfSide = (max ? (min ? max - min : max) : 100) / 2; // calculating the halfvalue of the progress according to min and max\n\n  const propStyle = (percent: number, base_degrees: number) => {\n    const rotateBy = base_degrees + (percent * 180) / halfSide;\n    return {\n      transform: [{ rotateZ: rotateBy + 'deg' }],\n    };\n  };\n\n  const renderThirdLayer = (percent: number) => {\n    if (percent > halfSide) {\n      return (\n        <Box\n          borderTopColor={newProps.color}\n          borderRightColor={newProps.color}\n          style={[\n            styles.secondProgressLayer,\n            propStyle(percent - halfSide, 45),\n          ]}\n        />\n      );\n    } else {\n      return (\n        <Box\n          borderTopColor={newProps.trackColor}\n          borderRightColor={newProps.trackColor}\n          style={styles.offsetLayer}\n        />\n      );\n    }\n  };\n  let firstProgressLayerStyle;\n  if (value > halfSide) {\n    firstProgressLayerStyle = propStyle(halfSide, -135);\n  } else {\n    firstProgressLayerStyle = propStyle(value, -135);\n  }\n\n  return (\n    <Box\n      {...sizeProps}\n      rounded={viewHeight / 2}\n      borderWidth={defaultThickness}\n      borderColor={newProps.trackColor}\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      {...remainingProps}\n      ref={ref}\n      accessible\n      accessibilityRole=\"progressbar\"\n      accessibilityValue={{\n        min,\n        max,\n        now: value,\n      }}\n    >\n      {!isIndeterminate ? (\n        <>\n          <Box\n            onLayout={layout}\n            borderTopColor={newProps.color}\n            borderRightColor={newProps.color}\n            style={[styles.firstProgressLayer, firstProgressLayerStyle]}\n          />\n          {renderThirdLayer(value)}\n          <Box _text={newProps._text}>{remainingProps.children}</Box>\n        </>\n      ) : (\n        <StyleAnimatedView\n          onLayout={layout}\n          borderTopColor={newProps.color}\n          borderRightColor={newProps.color}\n          style={styles.animateStyle}\n        />\n      )}\n    </Box>\n  );\n};\n\nexport default React.memo(React.forwardRef(CircularProgress));\n"]},"metadata":{},"sourceType":"script"}