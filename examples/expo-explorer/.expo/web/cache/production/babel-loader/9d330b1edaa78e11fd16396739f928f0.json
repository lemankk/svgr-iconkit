{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _react=_interopRequireDefault(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");var _hooks=require(\"../../../hooks\");var _Flex=_interopRequireDefault(require(\"../../primitives/Flex\"));var _BreadcrumbSeparator=require(\"./BreadcrumbSeparator\");var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/Breadcrumb/Breadcrumb.tsx\";var Breadcrumb=function Breadcrumb(_ref,ref){var style=_ref.style,children=_ref.children,separator=_ref.separator,spacing=_ref.spacing,_text=_ref._text,props=(0,_objectWithoutProperties2.default)(_ref,[\"style\",\"children\",\"separator\",\"spacing\",\"_text\"]);var textProps=(0,_extends2.default)({},_text);var newProps=(0,_hooks.useThemeProps)('Breadcrumb',props);return _react.default.createElement(_Flex.default,(0,_extends2.default)({},newProps,{ref:ref,style:style,accessibilityRole:_reactNative.Platform.OS==='web'?'navigation':undefined,accessibilityLabel:\"Breadcrumb\",__self:_this,__source:{fileName:_jsxFileName,lineNumber:14,columnNumber:5}}),children&&!children.length?children:(0,_BreadcrumbSeparator.getBreadcrumbSeparator)(children,separator,textProps,spacing));};var _default=_react.default.memo(_react.default.forwardRef(Breadcrumb));exports.default=_default;","map":{"version":3,"sources":["Breadcrumb.tsx"],"names":["Breadcrumb","style","children","separator","spacing","_text","props","textProps","newProps","Platform","React"],"mappings":"mWAAA,GAAA,CAAA,MAAA,CAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,C,wDAEA,GAAA,CAAA,MAAA,CAAA,OAAA,kBAAA,CACA,GAAA,CAAA,KAAA,CAAA,sBAAA,CAAA,OAAA,yBAAA,CAAA,CACA,GAAA,CAAA,oBAAA,CAAA,OAAA,yBAAA,C,2IAEA,GAAMA,CAAAA,UAAU,CAAVA,QAAAA,CAAAA,UAAAA,CAAa,IAAbA,CAAa,GAAbA,CAGD,CAFDC,GAAAA,CAAAA,KAEC,CAAA,IAAA,CAFDA,KAAAA,CAAOC,QAEN,CAAA,IAAA,CAFMA,QAAPD,CAAiBE,SAEhB,CAAA,IAAA,CAFgBA,SAAjBF,CAA4BG,OAE3B,CAAA,IAAA,CAF2BA,OAA5BH,CAAqCI,KAEpC,CAAA,IAAA,CAFoCA,KAArCJ,CAA+CK,KAE9C,CAAA,CAAA,EAAA,yBAAA,CAAA,OAAA,EAAA,IAAA,CAAA,CAAA,OAAA,CAAA,UAAA,CAAA,WAAA,CAAA,SAAA,CAAA,OAAA,CAAA,CAFDL,CAGF,GAAMM,CAAAA,SAAS,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAA,EAAA,CAAf,KAAe,CAAf,CACA,GAAIC,CAAAA,QAAQ,CAAG,CAAA,EAAA,MAAA,CAAA,aAAA,EAAA,YAAA,CAAf,KAAe,CAAf,CACA,MACE,CAAA,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,KAAA,CAAD,OAAA,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAA,EAAA,CAAA,QAAA,CAAA,CAEE,GAAG,CAFL,GAAA,CAGE,KAAK,CAHP,KAAA,CAKE,iBAAiB,CAAEC,YAAAA,CAAAA,QAAAA,CAAAA,EAAAA,GAAAA,KAAAA,CAAAA,YAAAA,CALrB,SAAA,CAME,kBAAkB,CANpB,YAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAQGP,QAAQ,EAAI,CAACA,QAAQ,CAArBA,MAAAA,CAAAA,QAAAA,CAEG,CAAA,EAAA,oBAAA,CAAA,sBAAA,EAAA,QAAA,CAAA,SAAA,CAAA,SAAA,CAXR,OAWQ,CAVN,CADF,CANF,CAAA,C,aAqBeQ,MAAAA,CAAAA,OAAAA,CAAAA,IAAAA,CAAWA,MAAAA,CAAAA,OAAAA,CAAAA,UAAAA,CAAXA,UAAWA,CAAXA,C","sourcesContent":["import React from 'react';\nimport { Platform } from 'react-native';\nimport { useThemeProps } from '../../../hooks';\nimport Flex from '../../primitives/Flex';\nimport { getBreadcrumbSeparator } from './BreadcrumbSeparator';\nimport type { IBreadcrumbProps } from './types';\nconst Breadcrumb = (\n  { style, children, separator, spacing, _text, ...props }: IBreadcrumbProps,\n  ref: any\n) => {\n  const textProps = { ..._text };\n  let newProps = useThemeProps('Breadcrumb', props);\n  return (\n    <Flex\n      {...newProps}\n      ref={ref}\n      style={style}\n      // @ts-ignore - Web only prop\n      accessibilityRole={Platform.OS === 'web' ? 'navigation' : undefined}\n      accessibilityLabel=\"Breadcrumb\"\n    >\n      {children && !children.length\n        ? children\n        : getBreadcrumbSeparator(children, separator, textProps, spacing)}\n    </Flex>\n  );\n};\nexport default React.memo(React.forwardRef(Breadcrumb));\nexport type { IBreadcrumbProps };\n"]},"metadata":{},"sourceType":"script"}