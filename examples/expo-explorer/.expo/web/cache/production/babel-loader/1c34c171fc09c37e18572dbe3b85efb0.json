{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.useFormControlProvider=useFormControlProvider;exports.useFormControl=useFormControl;exports.useFormControlContext=exports.FormControlContext=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _react=_interopRequireDefault(require(\"react\"));var _utils=require(\"@react-native-aria/utils\");var _lodash=_interopRequireDefault(require(\"lodash.omit\"));var _utils2=require(\"../../../utils\");var FormControlContext=_react.default.createContext({});exports.FormControlContext=FormControlContext;function useFormControlProvider(props){var idProp=props.nativeID,isRequired=props.isRequired,isInvalid=props.isInvalid,isDisabled=props.isDisabled,isReadOnly=props.isReadOnly,htmlProps=(0,_objectWithoutProperties2.default)(props,[\"nativeID\",\"isRequired\",\"isInvalid\",\"isDisabled\",\"isReadOnly\"]);var id=(0,_utils.useId)();var nativeID=idProp||\"field-\"+id;var labelId=nativeID+\"-label\";var feedbackId=nativeID+\"-feedback\";var helpTextId=nativeID+\"-helptext\";var _React$useState=_react.default.useState(false),_React$useState2=(0,_slicedToArray2.default)(_React$useState,2),hasFeedbackText=_React$useState2[0],setHasFeedbackText=_React$useState2[1];var _React$useState3=_react.default.useState(false),_React$useState4=(0,_slicedToArray2.default)(_React$useState3,2),hasHelpText=_React$useState4[0],setHasHelpText=_React$useState4[1];var context={isRequired:!!isRequired,isInvalid:!!isInvalid,isReadOnly:!!isReadOnly,isDisabled:!!isDisabled,hasFeedbackText:hasFeedbackText,setHasFeedbackText:setHasFeedbackText,hasHelpText:hasHelpText,setHasHelpText:setHasHelpText,nativeID:nativeID,labelId:labelId,feedbackId:feedbackId,helpTextId:helpTextId,htmlProps:htmlProps};return context;}function useFormControl(props){var _props$nativeID;var field=useFormControlContext();var describedBy=[];if(field!=null&&field.hasFeedbackText)describedBy.push(field==null?void 0:field.feedbackId);if(field!=null&&field.hasHelpText)describedBy.push(field==null?void 0:field.helpTextId);var ariaDescribedBy=describedBy.join(' ');var cleanProps=(0,_lodash.default)(props,['isInvalid','isDisabled','isReadOnly','isRequired']);return(0,_extends2.default)({},cleanProps,{nativeID:(_props$nativeID=props.nativeID)!=null?_props$nativeID:field==null?void 0:field.nativeID,disabled:props.isDisabled||(field==null?void 0:field.isDisabled),readOnly:props.isReadOnly||(field==null?void 0:field.isReadOnly),required:props.isRequired||(field==null?void 0:field.isRequired),accessibilityInvalid:(0,_utils2.ariaAttr)(props.isInvalid||(field==null?void 0:field.isInvalid)),accessibilityRequired:(0,_utils2.ariaAttr)(props.isRequired||(field==null?void 0:field.isRequired)),accessibilityReadOnly:(0,_utils2.ariaAttr)(props.isReadOnly||(field==null?void 0:field.isReadOnly)),accessibilityDescribedBy:ariaDescribedBy||undefined});}var useFormControlContext=function useFormControlContext(){return _react.default.useContext(FormControlContext);};exports.useFormControlContext=useFormControlContext;","map":{"version":3,"sources":["useFormControl.tsx"],"names":["FormControlContext","React","idProp","isRequired","isInvalid","isDisabled","isReadOnly","htmlProps","props","id","nativeID","labelId","feedbackId","helpTextId","hasFeedbackText","setHasFeedbackText","hasHelpText","setHasHelpText","context","field","useFormControlContext","describedBy","ariaDescribedBy","cleanProps","disabled","readOnly","required","accessibilityInvalid","accessibilityRequired","accessibilityReadOnly","accessibilityDescribedBy"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useId } from '@react-native-aria/utils';\nimport omit from 'lodash.omit';\nimport type { IFormControlProps } from './types';\nimport { ariaAttr } from '../../../utils';\n\nexport type IFormControlContext = Omit<\n  ReturnType<typeof useFormControlProvider>,\n  'htmlProps'\n>;\n\nexport const FormControlContext = React.createContext({});\n\nexport function useFormControlProvider(props: IFormControlProps) {\n  const {\n    nativeID: idProp,\n    isRequired,\n    isInvalid,\n    isDisabled,\n    isReadOnly,\n    ...htmlProps\n  } = props;\n\n  const id = useId();\n  // Generate all the required ids\n  const nativeID = idProp || `field-${id}`;\n\n  const labelId = `${nativeID}-label`;\n  const feedbackId = `${nativeID}-feedback`;\n  const helpTextId = `${nativeID}-helptext`;\n\n  /**\n   * Track whether the `FormErrorMessage` has been rendered.\n   * We use this to append its id the the `aria-describedby` of the `input`.\n   */\n  const [hasFeedbackText, setHasFeedbackText] = React.useState(false);\n\n  /**\n   * Track whether the `FormHelperText` has been rendered.\n   * We use this to append its id the the `aria-describedby` of the `input`.\n   */\n  const [hasHelpText, setHasHelpText] = React.useState(false);\n\n  const context = {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    hasFeedbackText,\n    setHasFeedbackText,\n    hasHelpText,\n    setHasHelpText,\n    nativeID,\n    labelId,\n    feedbackId,\n    helpTextId,\n    htmlProps,\n  };\n\n  return context;\n}\n\n/**\n * React hook that provides the props that should be spread on to\n * input fields (`input`, `select`, `textarea`, etc.).\n *\n * It provides a convenient way to control a form fields, validation\n * and helper text.\n */\nexport function useFormControl(props: IFormControlProps) {\n  const field = useFormControlContext();\n  const describedBy: any[] = [];\n\n  // Error message must be described first in all scenarios.\n  if (field?.hasFeedbackText) describedBy.push(field?.feedbackId);\n  if (field?.hasHelpText) describedBy.push(field?.helpTextId);\n  const ariaDescribedBy = describedBy.join(' ');\n\n  const cleanProps = omit(props, [\n    'isInvalid',\n    'isDisabled',\n    'isReadOnly',\n    'isRequired',\n  ]);\n\n  return {\n    ...cleanProps,\n    nativeID: props.nativeID ?? field?.nativeID,\n    disabled: props.isDisabled || field?.isDisabled,\n    readOnly: props.isReadOnly || field?.isReadOnly,\n    required: props.isRequired || field?.isRequired,\n    accessibilityInvalid: ariaAttr(props.isInvalid || field?.isInvalid),\n    accessibilityRequired: ariaAttr(props.isRequired || field?.isRequired),\n    accessibilityReadOnly: ariaAttr(props.isReadOnly || field?.isReadOnly),\n    accessibilityDescribedBy: ariaDescribedBy || undefined,\n  };\n}\n\nexport const useFormControlContext = () => {\n  return (React.useContext(\n    FormControlContext\n  ) as unknown) as IFormControlContext;\n};\n"]},"metadata":{},"sourceType":"script"}