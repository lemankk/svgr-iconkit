{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _react=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");var _native=_interopRequireDefault(require(\"styled-components/native\"));var _utils=require(\"../../../utils\");var _styledSystem=require(\"styled-system\");var _customProps=require(\"../../../utils/customProps\");var _useThemeProps=require(\"../../../hooks/useThemeProps\");var _focus2=require(\"@react-native-aria/focus\");var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/primitives/Pressable/Pressable.tsx\";var useHover=function useHover(){var _React$useState=_react.default.useState(false),_React$useState2=(0,_slicedToArray2.default)(_React$useState,2),isHovered=_React$useState2[0],setHovered=_React$useState2[1];return{pressableProps:{onHoverIn:function onHoverIn(){return setHovered(true);},onHoverOut:function onHoverOut(){return setHovered(false);}},isHovered:isHovered};};var useFocus=function useFocus(){var _React$useState3=_react.default.useState(false),_React$useState4=(0,_slicedToArray2.default)(_React$useState3,2),isFocused=_React$useState4[0],setFocused=_React$useState4[1];return{focusProps:{onFocus:function onFocus(){return setFocused(true);},onBlur:function onBlur(){return setFocused(false);}},isFocused:isFocused};};var useIsPressed=function useIsPressed(){var _React$useState5=_react.default.useState(false),_React$useState6=(0,_slicedToArray2.default)(_React$useState5,2),isPressed=_React$useState6[0],setIsPressed=_React$useState6[1];return{pressableProps:{onPressIn:function onPressIn(){return setIsPressed(true);},onPressOut:function onPressOut(){return setIsPressed(false);}},isPressed:isPressed};};var StyledPressable=(0,_native.default)(_reactNative.Pressable)(_styledSystem.color,_styledSystem.space,_styledSystem.layout,_styledSystem.flexbox,_styledSystem.border,_styledSystem.position,_customProps.customPosition,_customProps.customBorder,_customProps.customBackground,_customProps.customOutline,_customProps.customShadow,_customProps.customExtra,_customProps.customLayout);var Pressable=function Pressable(_ref,ref){var children=_ref.children,onPressIn=_ref.onPressIn,onPressOut=_ref.onPressOut,onHoverIn=_ref.onHoverIn,onHoverOut=_ref.onHoverOut,onFocus=_ref.onFocus,onBlur=_ref.onBlur,props=(0,_objectWithoutProperties2.default)(_ref,[\"children\",\"onPressIn\",\"onPressOut\",\"onHoverIn\",\"onHoverOut\",\"onFocus\",\"onBlur\"]);var _useHover=useHover(),pressableProps=_useHover.pressableProps,isHovered=_useHover.isHovered;var _useIsPressed=useIsPressed(),isPressedProps=_useIsPressed.pressableProps,isPressed=_useIsPressed.isPressed;var _useFocus=useFocus(),focusProps=_useFocus.focusProps,isFocused=_useFocus.isFocused;var _usePropsResolution=(0,_useThemeProps.usePropsResolution)('Pressable',props),_hover=_usePropsResolution._hover,_pressed=_usePropsResolution._pressed,_focus=_usePropsResolution._focus,_focusVisible=_usePropsResolution._focusVisible,themeProps=(0,_objectWithoutProperties2.default)(_usePropsResolution,[\"_hover\",\"_pressed\",\"_focus\",\"_focusVisible\"]);var _useFocusRing=(0,_focus2.useFocusRing)(),isFocusVisible=_useFocusRing.isFocusVisible,focusRingProps=_useFocusRing.focusProps;return _react.default.createElement(StyledPressable,(0,_extends2.default)({ref:ref,onPressIn:(0,_utils.composeEventHandlers)(onPressIn,isPressedProps.onPressIn),onPressOut:(0,_utils.composeEventHandlers)(onPressOut,isPressedProps.onPressOut),onHoverIn:(0,_utils.composeEventHandlers)(onHoverIn,pressableProps.onHoverIn),onHoverOut:(0,_utils.composeEventHandlers)(onHoverOut,pressableProps.onHoverOut),onFocus:(0,_utils.composeEventHandlers)((0,_utils.composeEventHandlers)(onFocus,focusProps.onFocus),focusRingProps.onFocus),onBlur:(0,_utils.composeEventHandlers)((0,_utils.composeEventHandlers)(onBlur,focusProps.onBlur),focusRingProps.onBlur)},themeProps,isHovered&&_hover,isFocused&&_focus,isFocusVisible&&_focusVisible,isPressed&&_pressed,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:94,columnNumber:5}}),typeof children!=='function'?children:children({isPressed:isPressed,isHovered:isHovered,isFocused:isFocused}));};var _default=(0,_react.memo)((0,_react.forwardRef)(Pressable));exports.default=_default;","map":{"version":3,"sources":["Pressable.tsx"],"names":["useHover","isHovered","setHovered","React","pressableProps","onHoverIn","onHoverOut","useFocus","isFocused","setFocused","focusProps","onFocus","onBlur","useIsPressed","isPressed","setIsPressed","onPressIn","onPressOut","StyledPressable","RNPressable","color","space","layout","flexbox","border","position","customPosition","customBorder","customBackground","customOutline","customShadow","customExtra","customLayout","Pressable","children","props","isPressedProps","_hover","_pressed","_focus","_focusVisible","themeProps","isFocusVisible","focusRingProps"],"mappings":"ohBAAA,GAAA,CAAA,MAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,C,wDAEA,GAAA,CAAA,OAAA,CAAA,sBAAA,CAAA,OAAA,CAAA,0BAAA,CAAA,CAAA,CACA,GAAA,CAAA,MAAA,CAAA,OAAA,kBAAA,CACA,GAAA,CAAA,aAAA,CAAA,OAAA,CAAA,eAAA,CAAA,CAEA,GAAA,CAAA,YAAA,CAAA,OAAA,8BAAA,CASA,GAAA,CAAA,cAAA,CAAA,OAAA,gCAAA,CACA,GAAA,CAAA,OAAA,CAAA,OAAA,CAAA,0BAAA,CAAA,C,yIAEA,GAAMA,CAAAA,QAAQ,CAARA,QAAAA,CAAAA,QAAAA,EAAiB,CAAA,GAAA,CAAA,eAAA,CACWG,MAAAA,CAAAA,OAAAA,CAAAA,QAAAA,CADX,KACWA,CADX,CAAA,gBAAA,CAAA,CAAA,EAAA,eAAA,CAAA,OAAA,EAAA,eAAA,CAAA,CAAA,CAAA,CACdF,SADc,CAAA,gBAAA,CAAA,CAAA,CAAA,CACHC,UADG,CAAA,gBAAA,CAAA,CAAA,CAAA,CAErB,MAAO,CACLE,cAAc,CAAE,CACdC,SAAS,CAAE,QAAA,CAAA,SAAA,EAAA,CAAA,MAAMH,CAAAA,UAAU,CAAhB,IAAgB,CAAhB,CADG,CAAA,CAEdI,UAAU,CAAE,QAAA,CAAA,UAAA,EAAA,CAAA,MAAMJ,CAAAA,UAAU,CAAhB,KAAgB,CAAhB,CAHT,CACW,CADX,CAKLD,SAAS,CALX,SAAO,CAAP,CAFF,CAAA,CAWA,GAAMM,CAAAA,QAAQ,CAARA,QAAAA,CAAAA,QAAAA,EAAiB,CAAA,GAAA,CAAA,gBAAA,CACWJ,MAAAA,CAAAA,OAAAA,CAAAA,QAAAA,CADX,KACWA,CADX,CAAA,gBAAA,CAAA,CAAA,EAAA,eAAA,CAAA,OAAA,EAAA,gBAAA,CAAA,CAAA,CAAA,CACdK,SADc,CAAA,gBAAA,CAAA,CAAA,CAAA,CACHC,UADG,CAAA,gBAAA,CAAA,CAAA,CAAA,CAErB,MAAO,CACLC,UAAU,CAAE,CACVC,OAAO,CAAE,QAAA,CAAA,OAAA,EAAA,CAAA,MAAMF,CAAAA,UAAU,CAAhB,IAAgB,CAAhB,CADC,CAAA,CAEVG,MAAM,CAAE,QAAA,CAAA,MAAA,EAAA,CAAA,MAAMH,CAAAA,UAAU,CAAhB,KAAgB,CAAhB,CAHL,CACO,CADP,CAKLD,SAAS,CALX,SAAO,CAAP,CAFF,CAAA,CAWA,GAAMK,CAAAA,YAAY,CAAZA,QAAAA,CAAAA,YAAAA,EAAqB,CAAA,GAAA,CAAA,gBAAA,CACSV,MAAAA,CAAAA,OAAAA,CAAAA,QAAAA,CADT,KACSA,CADT,CAAA,gBAAA,CAAA,CAAA,EAAA,eAAA,CAAA,OAAA,EAAA,gBAAA,CAAA,CAAA,CAAA,CAClBW,SADkB,CAAA,gBAAA,CAAA,CAAA,CAAA,CACPC,YADO,CAAA,gBAAA,CAAA,CAAA,CAAA,CAEzB,MAAO,CACLX,cAAc,CAAE,CACdY,SAAS,CAAE,QAAA,CAAA,SAAA,EAAA,CAAA,MAAMD,CAAAA,YAAY,CAAlB,IAAkB,CAAlB,CADG,CAAA,CAEdE,UAAU,CAAE,QAAA,CAAA,UAAA,EAAA,CAAA,MAAMF,CAAAA,YAAY,CAAlB,KAAkB,CAAlB,CAHT,CACW,CADX,CAKLD,SAAS,CALX,SAAO,CAAP,CAFF,CAAA,CAWA,GAAMI,CAAAA,eAAe,CAAG,CAAA,EAAA,OAAA,CAAA,OAAA,EAAOC,YAAAA,CAAP,SAAA,EACtBC,aAAAA,CADsB,KAAA,CAEtBC,aAAAA,CAFsB,KAAA,CAGtBC,aAAAA,CAHsB,MAAA,CAItBC,aAAAA,CAJsB,OAAA,CAKtBC,aAAAA,CALsB,MAAA,CAMtBC,aAAAA,CANsB,QAAA,CAOtBC,YAAAA,CAPsB,cAAA,CAQtBC,YAAAA,CARsB,YAAA,CAStBC,YAAAA,CATsB,gBAAA,CAUtBC,YAAAA,CAVsB,aAAA,CAWtBC,YAAAA,CAXsB,YAAA,CAYtBC,YAAAA,CAZsB,WAAA,CAatBC,YAAAA,CAbF,YAAwB,CAAxB,CAgBA,GAAMC,CAAAA,SAAS,CAATA,QAAAA,CAAAA,SAAAA,CAAY,IAAZA,CAAY,GAAZA,CAYD,CAVDC,GAAAA,CAAAA,QAUC,CAAA,IAAA,CAVDA,QAAAA,CACAlB,SASC,CAAA,IAAA,CATDA,SADAkB,CAEAjB,UAQC,CAAA,IAAA,CARDA,UAFAiB,CAGA7B,SAOC,CAAA,IAAA,CAPDA,SAHA6B,CAIA5B,UAMC,CAAA,IAAA,CANDA,UAJA4B,CAKAvB,OAKC,CAAA,IAAA,CALDA,OALAuB,CAMAtB,MAIC,CAAA,IAAA,CAJDA,MANAsB,CAOGC,KAGF,CAAA,CAAA,EAAA,yBAAA,CAAA,OAAA,EAAA,IAAA,CAAA,CAAA,UAAA,CAAA,WAAA,CAAA,YAAA,CAAA,WAAA,CAAA,YAAA,CAAA,SAAA,CAAA,QAAA,CAAA,CAVDD,CAUC,GAAA,CAAA,SAAA,CACmClC,QADnC,EAAA,CACKI,cADL,CAAA,SAAA,CAAA,cAAA,CACqBH,SADrB,CAAA,SAAA,CAAA,SAAA,CAAA,GAAA,CAAA,aAAA,CAEmDY,YAFnD,EAAA,CAEqBuB,cAFrB,CAAA,aAAA,CAAA,cAAA,CAEqCtB,SAFrC,CAAA,aAAA,CAAA,SAAA,CAAA,GAAA,CAAA,SAAA,CAG+BP,QAH/B,EAAA,CAGKG,UAHL,CAAA,SAAA,CAAA,UAAA,CAGiBF,SAHjB,CAAA,SAAA,CAAA,SAAA,CAAA,GAAA,CAAA,mBAAA,CAUC,CAAA,EAAA,cAAA,CAAA,kBAAA,EAAA,WAAA,CAVD,KAUC,CAVD,CAKD6B,MALC,CAAA,mBAAA,CAAA,MAAA,CAMDC,QANC,CAAA,mBAAA,CAAA,QAAA,CAODC,MAPC,CAAA,mBAAA,CAAA,MAAA,CAQDC,aARC,CAAA,mBAAA,CAAA,aAAA,CASEC,UATF,CAAA,CAAA,EAAA,yBAAA,CAAA,OAAA,EAAA,mBAAA,CAAA,CAAA,QAAA,CAAA,UAAA,CAAA,QAAA,CAAA,eAAA,CAAA,CAAA,CAAA,GAAA,CAAA,aAAA,CAWyD,CAAA,EAAA,OAAA,CAXzD,YAWyD,GAXzD,CAWKC,cAXL,CAAA,aAAA,CAAA,cAAA,CAWiCC,cAXjC,CAAA,aAAA,CAAA,UAAA,CAaH,MACE,CAAA,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,eAAA,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAA,CACE,GAAG,CADL,GAAA,CAEE,SAAS,CAAE,CAAA,EAAA,MAAA,CAAA,oBAAA,EAAA,SAAA,CAAgCP,cAAc,CAF3D,SAEa,CAFb,CAGE,UAAU,CAAE,CAAA,EAAA,MAAA,CAAA,oBAAA,EAAA,UAAA,CAAiCA,cAAc,CAH7D,UAGc,CAHd,CAKE,SAAS,CAAE,CAAA,EAAA,MAAA,CAAA,oBAAA,EAAA,SAAA,CAAgChC,cAAc,CAL3D,SAKa,CALb,CAOE,UAAU,CAAE,CAAA,EAAA,MAAA,CAAA,oBAAA,EAAA,UAAA,CAAiCA,cAAc,CAP7D,UAOc,CAPd,CASE,OAAO,CAAE,CAAA,EAAA,MAAA,CAAA,oBAAA,EACP,CAAA,EAAA,MAAA,CAAA,oBAAA,EAAA,OAAA,CAA8BM,UAAU,CADjC,OACP,CADO,CAEPiC,cAAc,CAXlB,OASW,CATX,CAcE,MAAM,CAAE,CAAA,EAAA,MAAA,CAAA,oBAAA,EACN,CAAA,EAAA,MAAA,CAAA,oBAAA,EAAA,MAAA,CAA6BjC,UAAU,CADjC,MACN,CADM,CAENiC,cAAc,CAhBlB,MAcU,CAdV,CAAA,CAAA,UAAA,CAmBO1C,SAAS,EAnBhB,MAAA,CAoBOO,SAAS,EApBhB,MAAA,CAqBOkC,cAAc,EArBrB,aAAA,CAsBO5B,SAAS,EAtBhB,QAAA,CAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAwBG,MAAA,CAAA,QAAA,GAAA,UAAA,CAAA,QAAA,CAEGoB,QAAQ,CAAC,CACPpB,SAAS,CADF,SAAA,CAEPb,SAAS,CAFF,SAAA,CAGPO,SAAS,CA9BnB,SA2BiB,CAAD,CA1Bd,CADF,CAzBF,CAAA,C,aA6De,CAAA,EAAA,MAAA,CAAA,IAAA,EAAK,CAAA,EAAA,MAAA,CAAA,UAAA,EAAL,SAAK,CAAL,C","sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport { Pressable as RNPressable } from 'react-native';\nimport styled from 'styled-components/native';\nimport { composeEventHandlers } from '../../../utils';\nimport { border, color, flexbox, layout, position, space } from 'styled-system';\nimport type { IPressableProps } from './types';\nimport {\n  customBackground,\n  customBorder,\n  customExtra,\n  customLayout,\n  customOutline,\n  customPosition,\n  customShadow,\n} from '../../../utils/customProps';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useFocusRing } from '@react-native-aria/focus';\n\nconst useHover = () => {\n  const [isHovered, setHovered] = React.useState(false);\n  return {\n    pressableProps: {\n      onHoverIn: () => setHovered(true),\n      onHoverOut: () => setHovered(false),\n    },\n    isHovered,\n  };\n};\n\nconst useFocus = () => {\n  const [isFocused, setFocused] = React.useState(false);\n  return {\n    focusProps: {\n      onFocus: () => setFocused(true),\n      onBlur: () => setFocused(false),\n    },\n    isFocused,\n  };\n};\n\nconst useIsPressed = () => {\n  const [isPressed, setIsPressed] = React.useState(false);\n  return {\n    pressableProps: {\n      onPressIn: () => setIsPressed(true),\n      onPressOut: () => setIsPressed(false),\n    },\n    isPressed,\n  };\n};\n\nconst StyledPressable = styled(RNPressable)<IPressableProps>(\n  color,\n  space,\n  layout,\n  flexbox,\n  border,\n  position,\n  customPosition,\n  customBorder,\n  customBackground,\n  customOutline,\n  customShadow,\n  customExtra,\n  customLayout\n);\n\nconst Pressable = (\n  {\n    children,\n    onPressIn,\n    onPressOut,\n    onHoverIn,\n    onHoverOut,\n    onFocus,\n    onBlur,\n    ...props\n  }: IPressableProps,\n  ref: any\n) => {\n  const { pressableProps, isHovered } = useHover();\n  const { pressableProps: isPressedProps, isPressed } = useIsPressed();\n  const { focusProps, isFocused } = useFocus();\n  const {\n    _hover,\n    _pressed,\n    _focus,\n    _focusVisible,\n    ...themeProps\n  } = usePropsResolution('Pressable', props);\n  const { isFocusVisible, focusProps: focusRingProps }: any = useFocusRing();\n  // TODO : Replace Render props with Context Hook\n  return (\n    <StyledPressable\n      ref={ref}\n      onPressIn={composeEventHandlers(onPressIn, isPressedProps.onPressIn)}\n      onPressOut={composeEventHandlers(onPressOut, isPressedProps.onPressOut)}\n      // @ts-ignore - web only\n      onHoverIn={composeEventHandlers(onHoverIn, pressableProps.onHoverIn)}\n      // @ts-ignore - web only\n      onHoverOut={composeEventHandlers(onHoverOut, pressableProps.onHoverOut)}\n      // @ts-ignore - web only\n      onFocus={composeEventHandlers(\n        composeEventHandlers(onFocus, focusProps.onFocus),\n        focusRingProps.onFocus\n      )}\n      // @ts-ignore - web only\n      onBlur={composeEventHandlers(\n        composeEventHandlers(onBlur, focusProps.onBlur),\n        focusRingProps.onBlur\n      )}\n      {...themeProps}\n      {...(isHovered && _hover)}\n      {...(isFocused && _focus)}\n      {...(isFocusVisible && _focusVisible)}\n      {...(isPressed && _pressed)}\n    >\n      {typeof children !== 'function'\n        ? children\n        : children({\n            isPressed,\n            isHovered,\n            isFocused,\n          })}\n    </StyledPressable>\n  );\n};\n\nexport default memo(forwardRef(Pressable));\n"]},"metadata":{},"sourceType":"script"}