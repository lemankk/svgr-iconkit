{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{useControlledState}from\"@react-stately/utils\";export function useOverlayTriggerState(props){var _useControlledState=useControlledState(props.isOpen,props.defaultOpen||false,props.onOpenChange),_useControlledState2=_slicedToArray(_useControlledState,2),isOpen=_useControlledState2[0],setOpen=_useControlledState2[1];return{isOpen:isOpen,open:function open(){setOpen(true);},close:function close(){setOpen(false);},toggle:function toggle(){setOpen(!isOpen);}};}","map":{"version":3,"sources":["packages/@react-stately/overlays/src/useOverlayTriggerState.ts"],"names":["useControlledState","props","isOpen","open","setOpen","close","toggle"],"mappings":"4HA8BO,SAAA,CAAA,sBAAA,CAAA,KAAA,CAAkF,CACvF,wBAAwBA,kBAAkB,CAACC,KAAK,CAAN,MAAA,CAAeA,KAAK,CAALA,WAAAA,EAAf,KAAA,CAA2CA,KAAK,CAA1F,YAA0C,CAA1C,4DAAI,MAAJ,yBAAI,OAAJ,yBAEA,MAAO,CACLC,MADK,CACLA,MADK,CAELC,IAFK,gBAEE,CACLC,OAAO,CAAPA,IAAO,CAAPA,CAHG,CAAA,CAKLC,KALK,iBAKG,CACND,OAAO,CAAPA,KAAO,CAAPA,CANG,CAAA,CAQLE,MARK,kBAQI,CACPF,OAAO,CAAC,CAARA,MAAO,CAAPA,CACD,CAVI,CAAP,CAYD","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {OverlayTriggerProps} from '@react-types/overlays';\nimport {useControlledState} from '@react-stately/utils';\n\nexport interface OverlayTriggerState {\n  /** Whether the overlay is currently open. */\n  readonly isOpen: boolean,\n  /** Opens the overlay. */\n  open(): void,\n  /** Closes the overlay. */\n  close(): void,\n  /** Toggles the overlay's visibility. */\n  toggle(): void\n}\n\n/**\n * Manages state for an overlay trigger. Tracks whether the overlay is open, and provides\n * methods to toggle this state.\n */\nexport function useOverlayTriggerState(props: OverlayTriggerProps): OverlayTriggerState  {\n  let [isOpen, setOpen] = useControlledState(props.isOpen, props.defaultOpen || false, props.onOpenChange);\n\n  return {\n    isOpen,\n    open() {\n      setOpen(true);\n    },\n    close() {\n      setOpen(false);\n    },\n    toggle() {\n      setOpen(!isOpen);\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}