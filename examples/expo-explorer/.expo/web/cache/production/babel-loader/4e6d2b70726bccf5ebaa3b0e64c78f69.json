{"ast":null,"code":"import{useEffect}from\"react\";import{useSingleSelectListState}from\"@react-stately/list\";export function useTabsState(props){var state=useSingleSelectListState(props);useEffect(function(){if(state.selectionManager.isEmpty||!state.collection.getItem(state.selectedKey)){state.selectionManager.replaceSelection(state.collection.getFirstKey());}},[state.selectionManager,state.selectedKey,state.collection]);return state;}","map":{"version":3,"sources":["packages/@react-stately/tabs/src/useTabsState.ts"],"names":["state","useSingleSelectListState","useEffect"],"mappings":"6FAkBO,SAAA,CAAA,YAAA,CAAA,KAAA,CAA2E,CAChF,GAAIA,CAAAA,KAAK,CAAGC,wBAAwB,CAApC,KAAoC,CAApC,CAEAC,SAAS,CAAC,UAAM,CAEd,GAAIF,KAAK,CAALA,gBAAAA,CAAAA,OAAAA,EAAkC,CAACA,KAAK,CAALA,UAAAA,CAAAA,OAAAA,CAAyBA,KAAK,CAArE,WAAuCA,CAAvC,CAAoF,CAClFA,KAAK,CAALA,gBAAAA,CAAAA,gBAAAA,CAAwCA,KAAK,CAALA,UAAAA,CAAxCA,WAAwCA,EAAxCA,EACD,CAJM,CAAA,CAKN,CAACA,KAAK,CAAN,gBAAA,CAAyBA,KAAK,CAA9B,WAAA,CAA4CA,KAAK,CALpDE,UAKG,CALM,CAATA,CAOA,MAAA,CAAA,KAAA,CACD","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {SingleSelectListState, useSingleSelectListState} from '@react-stately/list';\nimport {TabsProps} from '@react-types/tabs';\nimport {useEffect} from 'react';\n\nexport interface TabsState<T> extends SingleSelectListState<T> {}\n\nexport function useTabsState<T extends object>(props: TabsProps<T>): TabsState<T> {\n  let state = useSingleSelectListState<T>(props);\n\n  useEffect(() => {\n    // Ensure a tab is always selected (in case no selected key was specified or if selected item was deleted from collection)\n    if (state.selectionManager.isEmpty || !state.collection.getItem(state.selectedKey)) {\n      state.selectionManager.replaceSelection(state.collection.getFirstKey());\n    }\n  }, [state.selectionManager, state.selectedKey, state.collection]);\n\n  return state;\n}\n"]},"metadata":{},"sourceType":"module"}