{"ast":null,"code":"import I18nManager from\"react-native-web/dist/exports/I18nManager\";export var attachEventHandlersOnRef=function attachEventHandlersOnRef(props,ref){if(ref&&ref.current){for(var key in props){if(key.startsWith('on')){ref.current[key.toLowerCase()]=props[key];}}}};export var getLabel=function getLabel(props){var _props$accessibilityL;var label=(_props$accessibilityL=props.accessibilityLabel)!==null&&_props$accessibilityL!==void 0?_props$accessibilityL:props['aria-label'];if(!label){label=typeof props.label==='string'?props.label:undefined;}return label;};export*from\"./ariaToAccessibilityMap\";export{useId,useLayoutEffect,mergeIds,mergeProps}from'@react-aria/utils';export{SSRProvider,useIsSSR}from'@react-aria/ssr';export var isRTL=function isRTL(){if(I18nManager.isRTL!==undefined){return I18nManager.isRTL;}if(I18nManager.getConstants){return I18nManager.getConstants().isRTL;}};","map":{"version":3,"sources":["index.ts"],"names":["attachEventHandlersOnRef","ref","key","props","getLabel","label","isRTL","I18nManager"],"mappings":"mEAEA,MAAO,IAAMA,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,CAAA,KAAA,CAAA,GAAA,CAA0B,CAChE,GAAIC,GAAG,EAAIA,GAAG,CAAd,OAAA,CAAwB,CACtB,IAAK,GAAL,CAAA,GAAA,GAAA,CAAA,KAAA,CAAuB,CACrB,GAAIC,GAAG,CAAHA,UAAAA,CAAJ,IAAIA,CAAJ,CAA0B,CACxBD,GAAG,CAAHA,OAAAA,CAAYC,GAAG,CAAfD,WAAYC,EAAZD,EAAiCE,KAAK,CAAtCF,GAAsC,CAAtCA,CACD,CACF,CACF,CAPI,CAAA,CAUP,MAAO,IAAMG,CAAAA,QAAQ,CAAID,QAAZC,CAAAA,QAAYD,CAAAA,KAAD,CAAgB,CAAA,GAAA,CAAA,qBAAA,CACtC,GAAIE,CAAAA,KAAK,CAAA,CAAA,qBAAA,CAAGF,KAAK,CAAR,kBAAA,IAAA,IAAA,EAAA,qBAAA,GAAA,IAAA,EAAA,CAAA,qBAAA,CAA+BA,KAAK,CAA7C,YAA6C,CAA7C,CAEA,GAAI,CAAJ,KAAA,CAAY,CACVE,KAAK,CAAG,MAAOF,CAAAA,KAAK,CAAZ,KAAA,GAAA,QAAA,CAAkCA,KAAK,CAAvC,KAAA,CAARE,SAAAA,CACD,CAED,MAAA,CAAA,KAAA,CAPK,CAAA,CAUP,sCACA,OAAA,KAAA,CAAA,eAAA,CAAA,QAAA,CAAA,UAAA,KAAA,mBAAA,CAMA,OAAA,WAAA,CAAA,QAAA,KAAA,iBAAA,CAEA,MAAO,IAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CAEzB,GAAIC,WAAW,CAAXA,KAAAA,GAAJ,SAAA,CAAqC,CACnC,MAAOA,CAAAA,WAAW,CAAlB,KAAA,CAHuB,CAOzB,GAAIA,WAAW,CAAf,YAAA,CAA8B,CAE5B,MAAOA,CAAAA,WAAW,CAAXA,YAAAA,GAAP,KAAA,CACD,CAVI,CAAA","sourcesContent":["import { I18nManager } from 'react-native';\n\nexport const attachEventHandlersOnRef = (props: any, ref: any) => {\n  if (ref && ref.current) {\n    for (let key in props) {\n      if (key.startsWith('on')) {\n        ref.current[key.toLowerCase()] = props[key];\n      }\n    }\n  }\n};\n\nexport const getLabel = (props: any) => {\n  let label = props.accessibilityLabel ?? props['aria-label'];\n\n  if (!label) {\n    label = typeof props.label === 'string' ? props.label : undefined;\n  }\n\n  return label;\n};\n\nexport * from './ariaToAccessibilityMap';\nexport {\n  useId,\n  useLayoutEffect,\n  mergeIds,\n  mergeProps,\n} from '@react-aria/utils';\nexport { SSRProvider, useIsSSR } from '@react-aria/ssr';\n\nexport const isRTL = () => {\n  // To support previous RN versions. Newer versions use below getConstants()\n  if (I18nManager.isRTL !== undefined) {\n    return I18nManager.isRTL;\n  }\n\n  // @ts-ignore - RN web only\n  if (I18nManager.getConstants) {\n    // @ts-ignore - RN web only\n    return I18nManager.getConstants().isRTL;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}