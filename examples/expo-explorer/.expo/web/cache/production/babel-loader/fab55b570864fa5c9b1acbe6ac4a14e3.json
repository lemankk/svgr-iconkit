{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{useState}from\"react\";import{useOverlayTriggerState}from\"@react-stately/overlays\";import _babelRuntimeHelpersEsmExtends from\"@babel/runtime/helpers/esm/extends\";export function useMenuTriggerState(props){var overlayTriggerState=useOverlayTriggerState(props);var _useState=useState(null),_useState2=_slicedToArray(_useState,2),focusStrategy=_useState2[0],setFocusStrategy=_useState2[1];return _babelRuntimeHelpersEsmExtends({focusStrategy:focusStrategy},overlayTriggerState,{open:function open(focusStrategy){if(focusStrategy===void 0){focusStrategy=null;}setFocusStrategy(focusStrategy);overlayTriggerState.open();},toggle:function toggle(focusStrategy){if(focusStrategy===void 0){focusStrategy=null;}setFocusStrategy(focusStrategy);overlayTriggerState.toggle();}});}","map":{"version":3,"sources":["packages/@react-stately/menu/src/useMenuTriggerState.ts"],"names":["overlayTriggerState","useOverlayTriggerState","useState","focusStrategy","open","setFocusStrategy","toggle"],"mappings":"8OAgCO,SAAA,CAAA,mBAAA,CAAA,KAAA,CAAyE,CAC9E,GAAIA,CAAAA,mBAAmB,CAAGC,sBAAsB,CAAhD,KAAgD,CAAhD,CACA,cAAwCC,QAAQ,CAAhD,IAAgD,CAAhD,wCAAI,aAAJ,eAAI,gBAAJ,eAEA,MAAA,CAAA,8BAAA,CAAA,CACEC,aAAAA,CAAAA,aADF,CAAA,CAAA,mBAAA,CAAA,CAGEC,IAHF,eAGM,aAHN,CAG4C,CAAA,GAArCD,aAAqC,GAAA,IAAA,EAAA,CAAA,CAArCA,aAAqC,CAAN,IAA/BA,CAAqC,CACxCE,gBAAgB,CAAhBA,aAAgB,CAAhBA,CACAL,mBAAmB,CAAnBA,IAAAA,GALJ,CAAA,CAOEM,MAPF,iBAOQ,aAPR,CAO8C,CAAA,GAArCH,aAAqC,GAAA,IAAA,EAAA,CAAA,CAArCA,aAAqC,CAAN,IAA/BA,CAAqC,CAC1CE,gBAAgB,CAAhBA,aAAgB,CAAhBA,CACAL,mBAAmB,CAAnBA,MAAAA,GACD,CAVH,CAAA,CAAA,CAYD","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusStrategy} from '@react-types/shared';\nimport {MenuTriggerProps} from '@react-types/menu';\nimport {OverlayTriggerState, useOverlayTriggerState} from '@react-stately/overlays';\nimport {useState} from 'react';\n\nexport interface MenuTriggerState extends OverlayTriggerState {\n  /** Controls which item will be auto focused when the menu opens. */\n  readonly focusStrategy: FocusStrategy,\n\n  /** Opens the menu. */\n  open(focusStrategy?: FocusStrategy | null): void,\n\n  /** Toggles the menu. */\n  toggle(focusStrategy?: FocusStrategy | null): void\n}\n\n/**\n * Manages state for a menu trigger. Tracks whether the menu is currently open,\n * and controls which item will receive focus when it opens.\n */\nexport function useMenuTriggerState(props: MenuTriggerProps): MenuTriggerState  {\n  let overlayTriggerState = useOverlayTriggerState(props);\n  let [focusStrategy, setFocusStrategy] = useState<FocusStrategy>(null);\n\n  return {\n    focusStrategy,\n    ...overlayTriggerState,\n    open(focusStrategy: FocusStrategy = null) {\n      setFocusStrategy(focusStrategy);\n      overlayTriggerState.open();\n    },\n    toggle(focusStrategy: FocusStrategy = null) {\n      setFocusStrategy(focusStrategy);\n      overlayTriggerState.toggle();\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}