{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";var _excluded=[\"groupProps\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{clamp,mergeProps,useGlobalListeners}from'@react-aria/utils';import{getSliderThumbId,sliderIds}from\"./utils\";import{useRef}from'react';import{setInteractionModality}from'@react-aria/interactions';import{useLabel}from'@react-aria/label';import{mapDomPropsToRN,isRTL}from'@react-native-aria/utils';import{useMove}from\"./useMove\";function useSliderWeb(props,state,trackLayout){var _labelProps$id;var _useLabel=useLabel(props),labelProps=_useLabel.labelProps,fieldProps=_useLabel.fieldProps;var isVertical=props.orientation==='vertical';sliderIds.set(state,(_labelProps$id=labelProps.id)!==null&&_labelProps$id!==void 0?_labelProps$id:fieldProps.id);var direction=isRTL()?'rtl':undefined;var _useGlobalListeners=useGlobalListeners(),addGlobalListener=_useGlobalListeners.addGlobalListener,removeGlobalListener=_useGlobalListeners.removeGlobalListener;var realTimeTrackDraggingIndex=useRef(null);var stateRef=useRef(null);stateRef.current=state;var reverseX=direction==='rtl';var currentPosition=useRef(null);var _useMove=useMove({onMoveStart:function onMoveStart(){currentPosition.current=null;},onMove:function onMove(_ref){var deltaX=_ref.deltaX,deltaY=_ref.deltaY;var size=isVertical?trackLayout.height:trackLayout.width;if(currentPosition.current==null){currentPosition.current=stateRef.current.getThumbPercent(realTimeTrackDraggingIndex.current)*size;}var delta=isVertical?deltaY:deltaX;if(isVertical||reverseX){delta=-delta;}currentPosition.current+=delta;if(realTimeTrackDraggingIndex.current!=null){var percent=clamp(currentPosition.current/size,0,1);stateRef.current.setThumbPercent(realTimeTrackDraggingIndex.current,percent);}},onMoveEnd:function onMoveEnd(){if(realTimeTrackDraggingIndex.current!=null){stateRef.current.setThumbDragging(realTimeTrackDraggingIndex.current,false);realTimeTrackDraggingIndex.current=null;}}}),moveProps=_useMove.moveProps;var currentPointer=useRef(undefined);var onDownTrack=function onDownTrack(e,id,clientX,clientY){if(!props.isDisabled&&state.values.every(function(_,i){return!state.isThumbDragging(i);})){var size=isVertical?trackLayout.height:trackLayout.width;var trackPosition=trackLayout[isVertical?'top':'left'];var clickPosition=isVertical?clientY:clientX;var offset=clickPosition-trackPosition;var percent=offset/size;if(direction==='rtl'||isVertical){percent=1-percent;}var value=state.getPercentValue(percent);var closestThumb;var split=state.values.findIndex(function(v){return value-v<0;});if(split===0){closestThumb=split;}else if(split===-1){closestThumb=state.values.length-1;}else{var lastLeft=state.values[split-1];var firstRight=state.values[split];if(Math.abs(lastLeft-value)<Math.abs(firstRight-value)){closestThumb=split-1;}else{closestThumb=split;}}if(closestThumb>=0&&state.isThumbEditable(closestThumb)){e.preventDefault();realTimeTrackDraggingIndex.current=closestThumb;state.setFocusedThumb(closestThumb);currentPointer.current=id;state.setThumbDragging(realTimeTrackDraggingIndex.current,true);state.setThumbValue(closestThumb,value);addGlobalListener(window,'mouseup',onUpTrack,false);addGlobalListener(window,'touchend',onUpTrack,false);addGlobalListener(window,'pointerup',onUpTrack,false);}else{realTimeTrackDraggingIndex.current=null;}}};var onUpTrack=function onUpTrack(e){var _e$pointerId,_e$changedTouches;var id=(_e$pointerId=e.pointerId)!==null&&_e$pointerId!==void 0?_e$pointerId:(_e$changedTouches=e.changedTouches)===null||_e$changedTouches===void 0?void 0:_e$changedTouches[0].identifier;if(id===currentPointer.current){if(realTimeTrackDraggingIndex.current!=null){state.setThumbDragging(realTimeTrackDraggingIndex.current,false);realTimeTrackDraggingIndex.current=null;}removeGlobalListener(window,'mouseup',onUpTrack,false);removeGlobalListener(window,'touchend',onUpTrack,false);removeGlobalListener(window,'pointerup',onUpTrack,false);}};if(labelProps.htmlFor){delete labelProps.htmlFor;labelProps.onClick=function(){var _document$getElementB;(_document$getElementB=document.getElementById(getSliderThumbId(state,0)))===null||_document$getElementB===void 0?void 0:_document$getElementB.focus();setInteractionModality('keyboard');};}return{labelProps:labelProps,groupProps:_objectSpread({role:'group'},fieldProps),trackProps:mergeProps({onMouseDown:function onMouseDown(e){if(e.button!==0||e.altKey||e.ctrlKey||e.metaKey){return;}onDownTrack(e,undefined,e.clientX,e.clientY);},onPointerDown:function onPointerDown(e){if(e.pointerType==='mouse'&&(e.button!==0||e.altKey||e.ctrlKey||e.metaKey)){return;}onDownTrack(e,e.pointerId,e.clientX,e.clientY);},onTouchStart:function onTouchStart(e){onDownTrack(e,e.changedTouches[0].identifier,e.changedTouches[0].clientX,e.changedTouches[0].clientY);}},moveProps),outputProps:{'htmlFor':state.values.map(function(_,index){return getSliderThumbId(state,index);}).join(' '),'aria-live':'off'}};}export var useSlider=function useSlider(props,state,ref){var _useSliderWeb=useSliderWeb(props,state,ref),webGroupProps=_useSliderWeb.groupProps,rest=_objectWithoutProperties(_useSliderWeb,_excluded);var groupProps=mapDomPropsToRN(webGroupProps);var labelProps=mapDomPropsToRN(rest.labelProps);return _objectSpread(_objectSpread({groupProps:groupProps},rest),{},{labelProps:labelProps});};","map":{"version":3,"sources":["useSlider.web.ts"],"names":["fieldProps","useLabel","isVertical","props","sliderIds","labelProps","direction","isRTL","removeGlobalListener","useGlobalListeners","realTimeTrackDraggingIndex","useRef","stateRef","reverseX","currentPosition","moveProps","useMove","onMoveStart","onMove","deltaY","size","trackLayout","delta","percent","clamp","onMoveEnd","currentPointer","onDownTrack","state","trackPosition","clickPosition","offset","value","split","v","closestThumb","lastLeft","firstRight","Math","e","addGlobalListener","onUpTrack","id","getSliderThumbId","setInteractionModality","groupProps","role","trackProps","mergeProps","onMouseDown","onPointerDown","onTouchStart","outputProps","useSlider","rest","useSliderWeb","mapDomPropsToRN"],"mappings":"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","sourcesContent":["import { AriaSliderProps } from '@react-types/slider';\nimport { clamp, mergeProps, useGlobalListeners } from '@react-aria/utils';\nimport { getSliderThumbId, sliderIds } from './utils';\nimport React, { useRef } from 'react';\nimport { setInteractionModality } from '@react-aria/interactions';\nimport { SliderState } from '@react-stately/slider';\nimport { useLabel } from '@react-aria/label';\nimport { mapDomPropsToRN, isRTL } from '@react-native-aria/utils';\nimport { useMove } from './useMove';\n\ninterface SliderAria {\n  /** Props for the label element. */\n  labelProps: any;\n\n  /** Props for the root element of the slider component; groups slider inputs. */\n  groupProps: any;\n\n  /** Props for the track element. */\n  trackProps: any;\n\n  /** Props for the output element, displaying the value of the slider thumbs. */\n  outputProps: any;\n}\n\nfunction useSliderWeb(\n  props: AriaSliderProps,\n  state: SliderState,\n  trackLayout: {\n    height: number;\n    width: number;\n    top: number;\n    left: number;\n    x: number;\n    y: number;\n  }\n): SliderAria {\n  let { labelProps, fieldProps } = useLabel(props);\n\n  let isVertical = props.orientation === 'vertical';\n\n  // Attach id of the label to the state so it can be accessed by useSliderThumb.\n  sliderIds.set(state, labelProps.id ?? fieldProps.id);\n\n  const direction = isRTL() ? 'rtl' : undefined;\n\n  let { addGlobalListener, removeGlobalListener } = useGlobalListeners();\n\n  // When the user clicks or drags the track, we want the motion to set and drag the\n  // closest thumb.  Hence we also need to install useMove() on the track element.\n  // Here, we keep track of which index is the \"closest\" to the drag start point.\n  // It is set onMouseDown/onTouchDown; see trackProps below.\n  const realTimeTrackDraggingIndex = useRef<number | null>(null);\n\n  const stateRef = useRef<SliderState>(null);\n  stateRef.current = state;\n  const reverseX = direction === 'rtl';\n  const currentPosition = useRef<number>(null);\n  const { moveProps } = useMove({\n    onMoveStart() {\n      currentPosition.current = null;\n    },\n    onMove({ deltaX, deltaY }) {\n      let size = isVertical ? trackLayout.height : trackLayout.width;\n\n      if (currentPosition.current == null) {\n        currentPosition.current =\n          stateRef.current.getThumbPercent(realTimeTrackDraggingIndex.current) *\n          size;\n      }\n\n      let delta = isVertical ? deltaY : deltaX;\n      if (isVertical || reverseX) {\n        delta = -delta;\n      }\n\n      currentPosition.current += delta;\n\n      if (realTimeTrackDraggingIndex.current != null) {\n        const percent = clamp(currentPosition.current / size, 0, 1);\n        stateRef.current.setThumbPercent(\n          realTimeTrackDraggingIndex.current,\n          percent\n        );\n      }\n    },\n    onMoveEnd() {\n      if (realTimeTrackDraggingIndex.current != null) {\n        stateRef.current.setThumbDragging(\n          realTimeTrackDraggingIndex.current,\n          false\n        );\n        realTimeTrackDraggingIndex.current = null;\n      }\n    },\n  });\n\n  let currentPointer = useRef<number | null | undefined>(undefined);\n  let onDownTrack = (\n    e: React.UIEvent,\n    id: number,\n    clientX: number,\n    clientY: number\n  ) => {\n    // We only trigger track-dragging if the user clicks on the track itself and nothing is currently being dragged.\n    if (\n      !props.isDisabled &&\n      state.values.every((_, i) => !state.isThumbDragging(i))\n    ) {\n      let size = isVertical ? trackLayout.height : trackLayout.width;\n      // Find the closest thumb\n      const trackPosition = trackLayout[isVertical ? 'top' : 'left'];\n      const clickPosition = isVertical ? clientY : clientX;\n      const offset = clickPosition - trackPosition;\n      let percent = offset / size;\n      if (direction === 'rtl' || isVertical) {\n        percent = 1 - percent;\n      }\n      let value = state.getPercentValue(percent);\n\n      // to find the closet thumb we split the array based on the first thumb position to the \"right/end\" of the click.\n      let closestThumb;\n      let split = state.values.findIndex((v) => value - v < 0);\n      if (split === 0) {\n        // If the index is zero then the closetThumb is the first one\n        closestThumb = split;\n      } else if (split === -1) {\n        // If no index is found they've clicked past all the thumbs\n        closestThumb = state.values.length - 1;\n      } else {\n        let lastLeft = state.values[split - 1];\n        let firstRight = state.values[split];\n        // Pick the last left/start thumb, unless they are stacked on top of each other, then pick the right/end one\n        if (Math.abs(lastLeft - value) < Math.abs(firstRight - value)) {\n          closestThumb = split - 1;\n        } else {\n          closestThumb = split;\n        }\n      }\n\n      // Confirm that the found closest thumb is editable, not disabled, and move it\n      if (closestThumb >= 0 && state.isThumbEditable(closestThumb)) {\n        // Don't unfocus anything\n        e.preventDefault();\n\n        realTimeTrackDraggingIndex.current = closestThumb;\n        state.setFocusedThumb(closestThumb);\n        currentPointer.current = id;\n\n        state.setThumbDragging(realTimeTrackDraggingIndex.current, true);\n        state.setThumbValue(closestThumb, value);\n\n        addGlobalListener(window, 'mouseup', onUpTrack, false);\n        addGlobalListener(window, 'touchend', onUpTrack, false);\n        addGlobalListener(window, 'pointerup', onUpTrack, false);\n      } else {\n        realTimeTrackDraggingIndex.current = null;\n      }\n    }\n  };\n\n  let onUpTrack = (e) => {\n    let id = e.pointerId ?? e.changedTouches?.[0].identifier;\n    if (id === currentPointer.current) {\n      if (realTimeTrackDraggingIndex.current != null) {\n        state.setThumbDragging(realTimeTrackDraggingIndex.current, false);\n        realTimeTrackDraggingIndex.current = null;\n      }\n\n      removeGlobalListener(window, 'mouseup', onUpTrack, false);\n      removeGlobalListener(window, 'touchend', onUpTrack, false);\n      removeGlobalListener(window, 'pointerup', onUpTrack, false);\n    }\n  };\n\n  if (labelProps.htmlFor) {\n    // Ideally the `for` attribute should point to the first thumb, but VoiceOver on iOS\n    // causes this to override the `aria-labelledby` on the thumb. This causes the first\n    // thumb to only be announced as the slider label rather than its individual name as well.\n    // See https://bugs.webkit.org/show_bug.cgi?id=172464.\n    delete labelProps.htmlFor;\n    labelProps.onClick = () => {\n      // Safari does not focus <input type=\"range\"> elements when clicking on an associated <label>,\n      // so do it manually. In addition, make sure we show the focus ring.\n      document.getElementById(getSliderThumbId(state, 0))?.focus();\n      setInteractionModality('keyboard');\n    };\n  }\n\n  return {\n    labelProps,\n    // The root element of the Slider will have role=\"group\" to group together\n    // all the thumb inputs in the Slider.  The label of the Slider will\n    // be used to label the group.\n    groupProps: {\n      role: 'group',\n      ...fieldProps,\n    },\n    trackProps: mergeProps(\n      {\n        onMouseDown(e: React.MouseEvent<HTMLElement>) {\n          if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey) {\n            return;\n          }\n          onDownTrack(e, undefined, e.clientX, e.clientY);\n        },\n        onPointerDown(e: React.PointerEvent<HTMLElement>) {\n          if (\n            e.pointerType === 'mouse' &&\n            (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey)\n          ) {\n            return;\n          }\n          onDownTrack(e, e.pointerId, e.clientX, e.clientY);\n        },\n        onTouchStart(e: React.TouchEvent<HTMLElement>) {\n          onDownTrack(\n            e,\n            e.changedTouches[0].identifier,\n            e.changedTouches[0].clientX,\n            e.changedTouches[0].clientY\n          );\n        },\n      },\n      moveProps\n    ),\n    outputProps: {\n      'htmlFor': state.values\n        .map((_, index) => getSliderThumbId(state, index))\n        .join(' '),\n      'aria-live': 'off',\n    },\n  };\n}\n\nexport const useSlider = (props: any, state: any, ref: any) => {\n  let { groupProps: webGroupProps, ...rest } = useSliderWeb(props, state, ref);\n  let groupProps = mapDomPropsToRN(webGroupProps);\n  let labelProps = mapDomPropsToRN(rest.labelProps);\n  return { groupProps, ...rest, labelProps };\n};\n"]},"metadata":{},"sourceType":"module"}