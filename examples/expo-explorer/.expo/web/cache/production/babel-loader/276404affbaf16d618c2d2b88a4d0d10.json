{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _react=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");var _native=_interopRequireDefault(require(\"styled-components/native\"));var _styledSystem=require(\"styled-system\");var _customProps=require(\"../../../utils/customProps\");var _Text=_interopRequireDefault(require(\"../Text\"));var _useThemeProps=require(\"../../../hooks/useThemeProps\");var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/primitives/Image/index.tsx\";var StyledImage=(0,_native.default)(_reactNative.Image)(_styledSystem.color,_styledSystem.space,_styledSystem.layout,_styledSystem.flexbox,_styledSystem.border,_styledSystem.position,_customProps.customPosition,_customProps.customBorder,_customProps.customBackground,_customProps.customOutline,_customProps.customShadow,_customProps.customExtra,_customProps.customLayout);var Image=function Image(_ref,ref){var source=_ref.source,props=(0,_objectWithoutProperties2.default)(_ref,[\"source\"]);var _usePropsResolution=(0,_useThemeProps.usePropsResolution)('Image',props),alt=_usePropsResolution.alt,fallbackSource=_usePropsResolution.fallbackSource,ignoreFallback=_usePropsResolution.ignoreFallback,_alt=_usePropsResolution._alt,newProps=(0,_objectWithoutProperties2.default)(_usePropsResolution,[\"alt\",\"fallbackSource\",\"ignoreFallback\",\"_alt\"]);var _useState=(0,_react.useState)(source),_useState2=(0,_slicedToArray2.default)(_useState,2),renderedSource=_useState2[0],setSource=_useState2[1];var _useState3=(0,_react.useState)(false),_useState4=(0,_slicedToArray2.default)(_useState3,2),alternate=_useState4[0],setAlternate=_useState4[1];_react.default.useEffect(function(){setAlternate(false);setSource(source);},[source]);var onImageLoadError=function onImageLoadError(event){console.warn(event.nativeEvent.error);if(!ignoreFallback&&fallbackSource&&fallbackSource!==renderedSource){setSource(fallbackSource);}else{setAlternate(true);}};if(!alt){console.warn('Please pass alt prop to Image component');}if(alternate){return _react.default.createElement(_Text.default,(0,_extends2.default)({},_alt,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:68,columnNumber:12}}),alt);}return _react.default.createElement(StyledImage,(0,_extends2.default)({source:renderedSource,accessibilityLabel:alt,alt:alt},newProps,{onError:props.onError?props.onError:onImageLoadError,ref:ref,__self:_this,__source:{fileName:_jsxFileName,lineNumber:71,columnNumber:5}}));};var _default=(0,_react.memo)((0,_react.forwardRef)(Image));exports.default=_default;","map":{"version":3,"sources":["index.tsx"],"names":["StyledImage","RNImage","color","space","layout","flexbox","border","position","customPosition","customBorder","customBackground","customOutline","customShadow","customExtra","customLayout","Image","source","props","alt","fallbackSource","ignoreFallback","_alt","newProps","renderedSource","setSource","alternate","setAlternate","React","onImageLoadError","console","event"],"mappings":"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","sourcesContent":["import React, { useState, memo, forwardRef } from 'react';\nimport { Image as RNImage } from 'react-native';\nimport styled from 'styled-components/native';\nimport { border, color, flexbox, layout, space, position } from 'styled-system';\nimport {\n  customBorder,\n  customBackground,\n  customOutline,\n  customLayout,\n  customExtra,\n  customShadow,\n  customPosition,\n} from '../../../utils/customProps';\nimport Text from '../Text';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type { IImageProps } from './types';\n\nconst StyledImage = styled(RNImage)<IImageProps>(\n  color,\n  space,\n  layout,\n  flexbox,\n  border,\n  position,\n  customPosition,\n  customBorder,\n  customBackground,\n  customOutline,\n  customShadow,\n  customExtra,\n  customLayout\n);\n\nconst Image = ({ source, ...props }: IImageProps, ref: any) => {\n  const {\n    alt,\n    fallbackSource,\n    ignoreFallback,\n    _alt,\n    ...newProps\n  } = usePropsResolution('Image', props);\n  const [renderedSource, setSource] = useState(source);\n  const [alternate, setAlternate] = useState(false);\n\n  React.useEffect(() => {\n    setAlternate(false);\n    setSource(source);\n  }, [source]);\n\n  const onImageLoadError = (event: any) => {\n    console.warn(event.nativeEvent.error);\n    if (\n      !ignoreFallback &&\n      fallbackSource &&\n      fallbackSource !== renderedSource\n    ) {\n      setSource(fallbackSource);\n    } else {\n      setAlternate(true);\n    }\n  };\n\n  if (!alt) {\n    console.warn('Please pass alt prop to Image component');\n  }\n\n  if (alternate) {\n    return <Text {..._alt}>{alt}</Text>;\n  }\n  return (\n    <StyledImage\n      source={renderedSource}\n      accessibilityLabel={alt}\n      alt={alt}\n      {...newProps}\n      onError={props.onError ? props.onError : onImageLoadError}\n      ref={ref}\n    />\n  );\n};\n\nexport default memo(forwardRef(Image));\nexport type { IImageProps };\n"]},"metadata":{},"sourceType":"script"}