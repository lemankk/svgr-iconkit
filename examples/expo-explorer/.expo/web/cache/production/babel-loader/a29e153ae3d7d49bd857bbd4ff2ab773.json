{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _react=_interopRequireDefault(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");var _Box=_interopRequireDefault(require(\"../../primitives/Box\"));var _Context=require(\"./Context\");var _hooks=require(\"../../../hooks\");var _utils=require(\"../../../utils\");var _interactions=require(\"@react-native-aria/interactions\");var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/Accordion/AccordionSummary.tsx\";var AccordionSummary=function AccordionSummary(_ref2,ref){var children=_ref2.children,props=(0,_objectWithoutProperties2.default)(_ref2,[\"children\"]);var _React$useContext=_react.default.useContext(_Context.AccordionItemContext),index=_React$useContext.index,isOpen=_React$useContext.isOpen,isDisabled=_React$useContext.isDisabled,onOpen=_React$useContext.onOpen,onClose=_React$useContext.onClose;var _useThemeProps=(0,_hooks.useThemeProps)('AccordionSummary',props),_hover=_useThemeProps._hover,_expanded=_useThemeProps._expanded,_disabled=_useThemeProps._disabled,themedProps=(0,_objectWithoutProperties2.default)(_useThemeProps,[\"_hover\",\"_expanded\",\"_disabled\"]);var pressHandler=function pressHandler(){isOpen?onClose&&onClose():onOpen&&onOpen();};var _ref=_react.default.useRef(null);var _useHover=(0,_interactions.useHover)({},_ref),isHovered=_useHover.isHovered;return _react.default.createElement(_reactNative.TouchableOpacity,{activeOpacity:0.2,disabled:isDisabled,onPress:pressHandler,accessible:true,accessibilityRole:\"checkbox\",ref:(0,_utils.mergeRefs)([ref,_ref]),__self:_this,__source:{fileName:_jsxFileName,lineNumber:37,columnNumber:5}},_react.default.createElement(_Box.default,(0,_extends2.default)({display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\",alignItems:\"center\"},themedProps,isHovered&&_hover,isOpen&&_expanded,isDisabled&&_disabled,!index&&{borderTopColor:'transparent'},_reactNative.Platform.OS==='web'?{disabled:isDisabled,cursor:isDisabled?'not-allowed':'auto'}:{},{__self:_this,__source:{fileName:_jsxFileName,lineNumber:45,columnNumber:7}}),children));};var _default=_react.default.memo(_react.default.forwardRef(AccordionSummary));exports.default=_default;","map":{"version":3,"sources":["AccordionSummary.tsx"],"names":["AccordionSummary","children","props","index","isOpen","isDisabled","onOpen","onClose","React","AccordionItemContext","_hover","_expanded","_disabled","themedProps","pressHandler","_ref","isHovered","borderTopColor","Platform","disabled","cursor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { TouchableOpacity, Platform } from 'react-native';\nimport Box from '../../primitives/Box';\nimport type {\n  IAccordionSummaryProps,\n  IAccordionItemContextProps,\n} from './types';\nimport { AccordionItemContext } from './Context';\nimport { useThemeProps } from '../../../hooks';\nimport { mergeRefs } from '../../../utils';\nimport { useHover } from '@react-native-aria/interactions';\n\nconst AccordionSummary = (\n  { children, ...props }: IAccordionSummaryProps,\n  ref: any\n) => {\n  const {\n    index,\n    isOpen,\n    isDisabled,\n    onOpen,\n    onClose,\n  }: IAccordionItemContextProps = React.useContext(AccordionItemContext);\n\n  const { _hover, _expanded, _disabled, ...themedProps } = useThemeProps(\n    'AccordionSummary',\n    props\n  );\n  const pressHandler = () => {\n    isOpen ? onClose && onClose() : onOpen && onOpen();\n  };\n\n  const _ref = React.useRef(null);\n  const { isHovered } = useHover({}, _ref);\n\n  return (\n    <TouchableOpacity\n      activeOpacity={0.2}\n      disabled={isDisabled}\n      onPress={pressHandler}\n      accessible\n      accessibilityRole=\"checkbox\"\n      ref={mergeRefs([ref, _ref])}\n    >\n      <Box\n        display=\"flex\"\n        flexDirection=\"row\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        {...themedProps}\n        {...(isHovered && _hover)}\n        {...(isOpen && _expanded)}\n        {...(isDisabled && _disabled)}\n        {...(!index && { borderTopColor: 'transparent' })}\n        {...(Platform.OS === 'web'\n          ? {\n              disabled: isDisabled,\n              cursor: isDisabled ? 'not-allowed' : 'auto',\n            }\n          : {})}\n      >\n        {children}\n      </Box>\n    </TouchableOpacity>\n  );\n};\n\nexport default React.memo(React.forwardRef(AccordionSummary));\n"]},"metadata":{},"sourceType":"script"}