{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.Transition=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _defineProperty2=_interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));var _react=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/Transitions/Transition.tsx\";var transformStylesMap={translateY:true,translateX:true,scale:true,scaleX:true,scaleY:true,rotate:true};var defaultStyles={opacity:1,translateY:0,translateX:0,scale:1,scaleX:1,scaleY:1,rotate:'0deg'};var getAnimatedStyles=function getAnimatedStyles(animateValue){return function(initial,to){var styles={transform:[]};for(var key in initial){if(key==='transition'){continue;}if(key in transformStylesMap){var _styles$transform;(_styles$transform=styles.transform)==null?void 0:_styles$transform.push((0,_defineProperty2.default)({},key,animateValue.interpolate({inputRange:[0,1],outputRange:[initial[key],to[key]]})));}else{styles[key]=animateValue.interpolate({inputRange:[0,1],outputRange:[initial[key],to[key]]});}}return styles;};};var defaultTransitionConfig={type:'timing',useNativeDriver:true,duration:250,delay:0};var Transition=(0,_react.forwardRef)(function(_ref,ref){var children=_ref.children,onTransitionComplete=_ref.onTransitionComplete,_ref$visible=_ref.visible,visible=_ref$visible===void 0?false:_ref$visible,initial=_ref.initial,animate=_ref.animate,exit=_ref.exit,style=_ref.style,as=_ref.as,rest=(0,_objectWithoutProperties2.default)(_ref,[\"children\",\"onTransitionComplete\",\"visible\",\"initial\",\"animate\",\"exit\",\"style\",\"as\"]);var animateValue=_react.default.useRef(new _reactNative.Animated.Value(0)).current;var Component=_react.default.useMemo(function(){if(as){return _reactNative.Animated.createAnimatedComponent(as);}return _reactNative.Animated.View;},[as]);var _React$useState=_react.default.useState(visible?'entering':'exited'),_React$useState2=(0,_slicedToArray2.default)(_React$useState,2),animationState=_React$useState2[0],setAnimationState=_React$useState2[1];var prevVisible=_react.default.useRef(visible);_react.default.useEffect(function startEntryTransition(){var _animate;var entryTransition=(0,_extends2.default)({},defaultTransitionConfig,(_animate=animate)==null?void 0:_animate.transition);if(visible){var _entryTransition$type;_reactNative.Animated.sequence([_reactNative.Animated.delay(entryTransition.delay),_reactNative.Animated[(_entryTransition$type=entryTransition.type)!=null?_entryTransition$type:'timing'](animateValue,(0,_extends2.default)({toValue:1,useNativeDriver:true},entryTransition))]).start(function(){setAnimationState('entered');onTransitionComplete&&onTransitionComplete('entered');});}},[visible,onTransitionComplete,animateValue,animate]);_react.default.useEffect(function(){if(prevVisible.current!==visible&&!visible){setAnimationState('exiting');}prevVisible.current=visible;},[visible]);_react.default.useEffect(function startExitTransition(){var exitTransition=(0,_extends2.default)({},defaultTransitionConfig,exit==null?void 0:exit.transition);if(animationState==='exiting'){var _exitTransition$type;_reactNative.Animated.sequence([_reactNative.Animated.delay(exitTransition.delay),_reactNative.Animated[(_exitTransition$type=exitTransition.type)!=null?_exitTransition$type:'timing'](animateValue,(0,_extends2.default)({toValue:0,useNativeDriver:true},exitTransition))]).start(function(){setAnimationState('exited');onTransitionComplete&&onTransitionComplete('exited');});}},[exit,onTransitionComplete,setAnimationState,animationState,animateValue]);initial=animationState==='exiting'&&exit?(0,_extends2.default)({},defaultStyles,exit):(0,_extends2.default)({},defaultStyles,initial);animate=(0,_extends2.default)({},defaultStyles,animate);var styles=_react.default.useMemo(function(){return[getAnimatedStyles(animateValue)(initial,animate),style];},[animateValue,initial,animate,style]);return _react.default.createElement(Component,(0,_extends2.default)({pointerEvents:\"box-none\",needsOffscreenAlphaCompositing:true,style:styles,ref:ref},rest,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:179,columnNumber:7}}),children);});exports.Transition=Transition;","map":{"version":3,"sources":["Transition.tsx"],"names":["transformStylesMap","translateY","translateX","scale","scaleX","scaleY","rotate","defaultStyles","opacity","getAnimatedStyles","styles","transform","key","animateValue","inputRange","outputRange","initial","to","defaultTransitionConfig","type","useNativeDriver","duration","delay","Transition","children","onTransitionComplete","visible","animate","exit","style","as","rest","React","Animated","Component","animationState","setAnimationState","prevVisible","entryTransition","toValue","exitTransition"],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\nimport { Animated } from 'react-native';\nimport type {\n  ISupportedTransitions,\n  ITransitionConfig,\n  ITransitionProps,\n} from './types';\n\nconst transformStylesMap = {\n  translateY: true,\n  translateX: true,\n  scale: true,\n  scaleX: true,\n  scaleY: true,\n  rotate: true,\n};\n\nconst defaultStyles = {\n  opacity: 1,\n  translateY: 0,\n  translateX: 0,\n  scale: 1,\n  scaleX: 1,\n  scaleY: 1,\n  rotate: '0deg',\n};\n\nconst getAnimatedStyles = (animateValue: any) => (\n  initial: ISupportedTransitions,\n  to: ISupportedTransitions\n) => {\n  const styles: any = {\n    transform: [],\n  };\n\n  for (let key in initial) {\n    if (key === 'transition') {\n      continue;\n    }\n\n    if (key in transformStylesMap) {\n      styles.transform?.push({\n        [key]: animateValue.interpolate({\n          inputRange: [0, 1],\n          outputRange: [(initial as any)[key], (to as any)[key]],\n        }),\n      } as any);\n    } else {\n      styles[key] = animateValue.interpolate({\n        inputRange: [0, 1],\n        outputRange: [(initial as any)[key], (to as any)[key]],\n      });\n    }\n  }\n\n  return styles;\n};\n\nconst defaultTransitionConfig: ITransitionConfig = {\n  type: 'timing',\n  useNativeDriver: true,\n  duration: 250,\n  delay: 0,\n};\n\nexport const Transition = forwardRef(\n  (\n    {\n      children,\n      onTransitionComplete,\n      visible = false,\n      initial,\n      animate,\n      exit,\n      style,\n      as,\n      ...rest\n    }: ITransitionProps,\n    ref: any\n  ) => {\n    const animateValue = React.useRef(new Animated.Value(0)).current;\n\n    const Component = React.useMemo(() => {\n      if (as) {\n        return Animated.createAnimatedComponent(as);\n      }\n      return Animated.View;\n    }, [as]);\n\n    const [animationState, setAnimationState] = React.useState(\n      visible ? 'entering' : 'exited'\n    );\n\n    const prevVisible = React.useRef(visible);\n\n    React.useEffect(\n      function startEntryTransition() {\n        const entryTransition = {\n          ...defaultTransitionConfig,\n          ...animate?.transition,\n        };\n\n        if (visible) {\n          Animated.sequence([\n            // @ts-ignore - delay is present in defaultTransitionConfig\n            Animated.delay(entryTransition.delay),\n            Animated[entryTransition.type ?? 'timing'](animateValue, {\n              toValue: 1,\n              useNativeDriver: true,\n              ...entryTransition,\n            }),\n          ]).start(() => {\n            setAnimationState('entered');\n            onTransitionComplete && onTransitionComplete('entered');\n          });\n        }\n      },\n      [visible, onTransitionComplete, animateValue, animate]\n    );\n\n    React.useEffect(() => {\n      // Exit request\n      if (prevVisible.current !== visible && !visible) {\n        setAnimationState('exiting');\n      }\n      prevVisible.current = visible;\n    }, [visible]);\n\n    React.useEffect(\n      function startExitTransition() {\n        const exitTransition = {\n          ...defaultTransitionConfig,\n          ...exit?.transition,\n        };\n\n        if (animationState === 'exiting') {\n          Animated.sequence([\n            // @ts-ignore - delay is present in defaultTransitionConfig\n            Animated.delay(exitTransition.delay),\n            Animated[exitTransition.type ?? 'timing'](animateValue, {\n              toValue: 0,\n              useNativeDriver: true,\n              ...exitTransition,\n            }),\n          ]).start(() => {\n            setAnimationState('exited');\n            onTransitionComplete && onTransitionComplete('exited');\n          });\n        }\n      },\n      [\n        exit,\n        onTransitionComplete,\n        setAnimationState,\n        animationState,\n        animateValue,\n      ]\n    );\n\n    // If exit animation is present and state is exiting, we replace 'initial' with 'exit' animation\n    initial =\n      animationState === 'exiting' && exit\n        ? { ...defaultStyles, ...exit }\n        : { ...defaultStyles, ...initial };\n\n    animate = { ...defaultStyles, ...animate };\n\n    const styles = React.useMemo(() => {\n      return [\n        getAnimatedStyles(animateValue)(\n          initial as ISupportedTransitions,\n          animate as ISupportedTransitions\n        ),\n        style,\n      ];\n    }, [animateValue, initial, animate, style]);\n\n    return (\n      <Component\n        pointerEvents=\"box-none\"\n        // https://github.com/facebook/react-native/issues/23090#issuecomment-710803743\n        needsOffscreenAlphaCompositing\n        style={styles}\n        ref={ref}\n        {...rest}\n      >\n        {children}\n      </Component>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"script"}