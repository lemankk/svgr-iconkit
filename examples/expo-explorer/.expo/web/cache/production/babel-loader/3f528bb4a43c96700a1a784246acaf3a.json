{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=exports.Input=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _tools=require(\"../tools\");var _reactNative=require(\"react-native-web/dist/index\");var baseStyle=function baseStyle(props){var primary=props.theme.colors.primary;var focusRing=_reactNative.Platform.OS==='web'?{boxShadow:props.variant!=='underlined'?primary[400]+\" 0px 0px 0px 1px\":primary[400]+\" 0px 1px 0px 0px\",zIndex:1}:{};return{px:4,py:2,borderRadius:'lg',color:(0,_tools.mode)('black','white')(props),placeholderTextColor:(0,_tools.mode)('muted.400','muted.500')(props),background:'transparent',borderColor:(0,_tools.mode)('muted.200','muted.600')(props),_disabled:{opacity:0.8,bg:(0,_tools.mode)('muted.100','muted.700')(props)},_hover:{borderColor:(0,_tools.mode)('muted.300','muted.500')(props)},_invalid:{borderColor:(0,_tools.mode)('error.600','error.200')(props)},_focus:{style:(0,_extends2.default)({},focusRing),borderColor:'primary.400'},_android:{p:3,_focus:{borderColor:'primary.400'}},_ios:{px:4,py:3,_focus:{borderColor:'primary.400'}},_web:{outlineWidth:0,lineHeight:6}};};function roundedStyle(){return{borderRadius:'pill',borderWidth:1};}function outlineStyle(){return{borderWidth:1};}function filledStyle(props){return{bg:props.bg||(0,_tools.mode)('muted.200','muted.600')(props),borderWidth:1,borderColor:'transparent',_hover:{bg:(0,_tools.mode)('muted.300','muted.500')(props)}};}function unstyledStyle(){return{borderWidth:0};}function underlinedStyle(){return{borderRadius:0,borderBottomWidth:1};}var variants={outline:outlineStyle,underlined:underlinedStyle,rounded:roundedStyle,filled:filledStyle,unstyled:unstyledStyle};var sizes={'2xl':{fontSize:'2xl'},'xl':{fontSize:'xl'},'lg':{fontSize:'lg'},'md':{fontSize:'md'},'sm':{fontSize:'sm'},'xs':{fontSize:'xs'}};var defaultProps={size:'md',variant:'outline'};var Input={baseStyle:baseStyle,defaultProps:defaultProps,variants:variants,sizes:sizes};exports.Input=Input;var _default={};exports.default=_default;","map":{"version":3,"sources":["input.ts"],"names":["baseStyle","primary","props","focusRing","Platform","boxShadow","zIndex","px","py","borderRadius","color","placeholderTextColor","background","borderColor","_disabled","opacity","bg","_hover","_invalid","_focus","style","_android","p","_ios","_web","outlineWidth","lineHeight","borderWidth","borderBottomWidth","variants","outline","underlined","rounded","filled","unstyled","sizes","fontSize","defaultProps","size","variant","Input"],"mappings":"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","sourcesContent":["import { mode } from '../tools';\nimport { Platform } from 'react-native';\n\nconst baseStyle = (props: Record<string, any>) => {\n  const { primary } = props.theme.colors;\n  // Todo: Resolve boxShadow Color or Provide some alternatiove prop for user to change focusRing color\n  // Todo: Update to support similar focusRing on iOS , Android and Web\n  const focusRing =\n    Platform.OS === 'web'\n      ? {\n          boxShadow:\n            props.variant !== 'underlined'\n              ? `${primary[400]} 0px 0px 0px 1px`\n              : `${primary[400]} 0px 1px 0px 0px`,\n          zIndex: 1,\n        }\n      : {\n          // boxShadow: `${useToken('colors', ['primary.400'])} 0px 0px 0px 1px`,\n        };\n\n  return {\n    px: 4,\n    py: 2,\n    borderRadius: 'lg',\n    color: mode('black', 'white')(props),\n    placeholderTextColor: mode('muted.400', 'muted.500')(props),\n    background: 'transparent',\n    borderColor: mode('muted.200', 'muted.600')(props),\n    _disabled: {\n      opacity: 0.8,\n      bg: mode('muted.100', 'muted.700')(props),\n    },\n    _hover: {\n      borderColor: mode('muted.300', 'muted.500')(props),\n    },\n    _invalid: {\n      borderColor: mode('error.600', 'error.200')(props),\n    },\n    _focus: {\n      style: { ...focusRing },\n      borderColor: 'primary.400',\n    },\n    _android: {\n      p: 3,\n      _focus: {\n        borderColor: 'primary.400',\n      },\n    },\n    _ios: {\n      px: 4,\n      py: 3,\n      _focus: {\n        borderColor: 'primary.400',\n      },\n    },\n    _web: {\n      outlineWidth: 0,\n      lineHeight: 6, // Todo: Move to _web inside size so that sm and xs don't have this much height\n    },\n  };\n};\n\nfunction roundedStyle() {\n  return {\n    borderRadius: 'pill',\n    borderWidth: 1,\n  };\n}\nfunction outlineStyle() {\n  return {\n    borderWidth: 1,\n  };\n}\nfunction filledStyle(props: Record<string, any>) {\n  return {\n    bg: props.bg || mode('muted.200', 'muted.600')(props),\n    borderWidth: 1,\n    borderColor: 'transparent',\n    _hover: {\n      bg: mode('muted.300', 'muted.500')(props),\n    },\n  };\n}\nfunction unstyledStyle() {\n  return {\n    borderWidth: 0,\n  };\n}\nfunction underlinedStyle() {\n  return {\n    borderRadius: 0,\n    borderBottomWidth: 1,\n  };\n}\n\nconst variants = {\n  outline: outlineStyle,\n  underlined: underlinedStyle,\n  rounded: roundedStyle,\n  filled: filledStyle,\n  unstyled: unstyledStyle,\n};\n\nconst sizes = {\n  '2xl': { fontSize: '2xl' },\n  'xl': { fontSize: 'xl' },\n  'lg': { fontSize: 'lg' },\n  'md': { fontSize: 'md' },\n  'sm': { fontSize: 'sm' },\n  'xs': { fontSize: 'xs' },\n};\n\nconst defaultProps = {\n  size: 'md',\n  variant: 'outline',\n};\n\n// Input\nexport const Input = {\n  baseStyle,\n  defaultProps,\n  variants,\n  sizes,\n};\n\nexport default {};\n"]},"metadata":{},"sourceType":"script"}