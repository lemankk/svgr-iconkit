{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _react=_interopRequireWildcard(require(\"react\"));var _hooks=require(\"../../../hooks\");var _native=_interopRequireDefault(require(\"styled-components/native\"));var _styledSystem=require(\"styled-system\");var _customProps=require(\"../../../utils/customProps\");var _nbSvg=require(\"./nbSvg\");var _Icons=require(\"./Icons\");var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/primitives/Icon/SVGIcon.tsx\";var SVG=(0,_native.default)(_nbSvg.Svg)(_styledSystem.color,_styledSystem.space,_styledSystem.layout,_styledSystem.flexbox,_styledSystem.border,_styledSystem.typography,_styledSystem.position,_customProps.customPosition,_customProps.customBorder,_customProps.customBackground,_customProps.customOutline,_customProps.customShadow,_customProps.customExtra,_customProps.customLayout,_customProps.customTypography);var SVGIcon=function SVGIcon(_ref,ref){var children=_ref.children,props=(0,_objectWithoutProperties2.default)(_ref,[\"children\"]);var _usePropsResolution=(0,_hooks.usePropsResolution)('Icon',props),focusable=_usePropsResolution.focusable,stroke=_usePropsResolution.stroke,color=_usePropsResolution.color,size=_usePropsResolution.size,resolvedProps=(0,_objectWithoutProperties2.default)(_usePropsResolution,[\"focusable\",\"stroke\",\"color\",\"size\"]);var strokeHex=(0,_hooks.useToken)('colors',stroke||'');var colorHex=(0,_hooks.useToken)('colors',color||'');return _react.default.createElement(SVG,(0,_extends2.default)({},resolvedProps,{size:size,color:colorHex,stroke:strokeHex,focusable:focusable,accessibilityRole:\"image\",ref:ref,__self:_this,__source:{fileName:_jsxFileName,lineNumber:57,columnNumber:5}}),_react.default.Children.count(children)>0?_react.default.createElement(_nbSvg.G,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:78,columnNumber:9}},_react.default.Children.map(children,function(child,i){var _child$key;return _react.default.createElement(ChildPath,(0,_extends2.default)({key:(_child$key=child==null?void 0:child.key)!=null?_child$key:i,element:child},child==null?void 0:child.props,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:80,columnNumber:13}}));})):_react.default.createElement(_Icons.QuestionOutlineIcon,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:88,columnNumber:9}}));};var ChildPath=function ChildPath(_ref2){var element=_ref2.element,fill=_ref2.fill,pathStroke=_ref2.stroke;var pathStrokeColor=(0,_hooks.useToken)('colors',pathStroke||'');var fillColor=(0,_hooks.useToken)('colors',fill||'');if(!element){return null;}return _react.default.cloneElement(element,{fill:fillColor?fillColor:'currentColor',stroke:pathStrokeColor});};var _default=(0,_react.memo)((0,_react.forwardRef)(SVGIcon));exports.default=_default;","map":{"version":3,"sources":["SVGIcon.tsx"],"names":["SVG","Svg","color","space","layout","flexbox","border","typography","position","customPosition","customBorder","customBackground","customOutline","customShadow","customExtra","customLayout","customTypography","SVGIcon","children","props","focusable","stroke","size","resolvedProps","strokeHex","colorHex","React","child","ChildPath","element","fill","pathStroke","pathStrokeColor","fillColor"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { useToken, usePropsResolution } from '../../../hooks';\nimport styled from 'styled-components/native';\nimport {\n  border,\n  color,\n  flexbox,\n  layout,\n  space,\n  typography,\n  position,\n} from 'styled-system';\nimport {\n  customBorder,\n  customBackground,\n  customOutline,\n  customLayout,\n  customExtra,\n  customShadow,\n  customTypography,\n  customPosition,\n} from '../../../utils/customProps';\nimport { Svg, G } from './nbSvg';\nimport type { IIconProps } from './types';\nimport { QuestionOutlineIcon } from './Icons';\n\nconst SVG = styled(Svg)<IIconProps>(\n  color,\n  space,\n  layout,\n  flexbox,\n  border,\n  typography,\n  position,\n  customPosition,\n  customBorder,\n  customBackground,\n  customOutline,\n  customShadow,\n  customExtra,\n  customLayout,\n  customTypography\n);\n\nconst SVGIcon = ({ children, ...props }: IIconProps, ref: any) => {\n  const {\n    focusable,\n    stroke,\n    color,\n    size,\n    ...resolvedProps\n  } = usePropsResolution('Icon', props);\n  const strokeHex = useToken('colors', stroke || '');\n  const colorHex = useToken('colors', color || '');\n\n  return (\n    <SVG\n      {...resolvedProps}\n      // height={\n      //   newProps.size\n      //     ? parseInt(newProps.size, 10)\n      //     : parseInt(newProps.height, 10)\n      // }\n      // width={\n      //   newProps.size\n      //     ? parseInt(newProps.size, 10)\n      //     : parseInt(newProps.width, 10)\n      // }\n      size={size}\n      color={colorHex}\n      stroke={strokeHex}\n      focusable={focusable}\n      accessibilityRole=\"image\"\n      // style={style}\n      ref={ref}\n    >\n      {React.Children.count(children) > 0 ? (\n        <G>\n          {React.Children.map(children, (child, i) => (\n            <ChildPath\n              key={child?.key ?? i}\n              element={child}\n              {...child?.props}\n            />\n          ))}\n        </G>\n      ) : (\n        <QuestionOutlineIcon />\n      )}\n    </SVG>\n  );\n};\nconst ChildPath = ({ element, fill, stroke: pathStroke }: any) => {\n  const pathStrokeColor = useToken('colors', pathStroke || '');\n  const fillColor = useToken('colors', fill || '');\n\n  if (!element) {\n    return null;\n  }\n\n  return React.cloneElement(element, {\n    fill: fillColor ? fillColor : 'currentColor',\n    stroke: pathStrokeColor,\n  });\n};\nexport default memo(forwardRef(SVGIcon));\n"]},"metadata":{},"sourceType":"script"}