{"ast":null,"code":"Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _tools=require(\"../tools\");var defaultProps={colorScheme:'primary',size:'sm',rounded:'full',min:0,max:100,value:0,isIndeterminate:false};function baseStyle(props){var colorScheme=(0,_tools.getColorScheme)(props);return{innerBg:(0,_tools.mode)(colorScheme+\".600\",colorScheme+\".500\")(props),bg:(0,_tools.mode)(colorScheme+\".200\",colorScheme+\".800\")(props)};}var sizes={'xs':{height:1},'sm':{height:2},'md':{height:3},'lg':{height:4},'xl':{height:5},'2xl':{height:6}};var _default={baseStyle:baseStyle,defaultProps:defaultProps,sizes:sizes};exports.default=_default;","map":{"version":3,"sources":["progress.ts"],"names":["defaultProps","colorScheme","size","rounded","min","max","value","isIndeterminate","innerBg","bg","sizes","height","baseStyle"],"mappings":"gFAAA,GAAA,CAAA,MAAA,CAAA,OAAA,YAAA,CAEA,GAAMA,CAAAA,YAAY,CAAG,CACnBC,WAAW,CADQ,SAAA,CAEnBC,IAAI,CAFe,IAAA,CAGnBC,OAAO,CAHY,MAAA,CAInBC,GAAG,CAJgB,CAAA,CAKnBC,GAAG,CALgB,GAAA,CAMnBC,KAAK,CANc,CAAA,CAOnBC,eAAe,CAPjB,KAAqB,CAArB,CAUA,QAAA,CAAA,SAAA,CAAA,KAAA,CAA+C,CAC7C,GAAMN,CAAAA,WAAW,CAAG,CAAA,EAAA,MAAA,CAAA,cAAA,EAApB,KAAoB,CAApB,CACA,MAAO,CACLO,OAAO,CAAE,CAAA,EAAA,MAAA,CAAA,IAAA,EAAQP,WAAR,CAAA,MAAA,CAA8BA,WAA9B,CAAA,MAAA,EADJ,KACI,CADJ,CAELQ,EAAE,CAAE,CAAA,EAAA,MAAA,CAAA,IAAA,EAAQR,WAAR,CAAA,MAAA,CAA8BA,WAA9B,CAAA,MAAA,EAFN,KAEM,CAFC,CAAP,CAMF,IAAMS,CAAAA,KAAK,CAAG,CACZ,KAAM,CACJC,MAAM,CAFI,CACN,CADM,CAIZ,KAAM,CACJA,MAAM,CALI,CAIN,CAJM,CAOZ,KAAM,CACJA,MAAM,CARI,CAON,CAPM,CAUZ,KAAM,CACJA,MAAM,CAXI,CAUN,CAVM,CAaZ,KAAM,CACJA,MAAM,CAdI,CAaN,CAbM,CAgBZ,MAAO,CACLA,MAAM,CAjBV,CAgBS,CAhBK,CAAd,C,aAqBe,CACbC,SAAS,CADI,SAAA,CAEbZ,YAAY,CAFC,YAAA,CAGbU,KAAK,CAHQ,KAAA,C","sourcesContent":["import { mode, getColorScheme } from '../tools';\n\nconst defaultProps = {\n  colorScheme: 'primary',\n  size: 'sm',\n  rounded: 'full',\n  min: 0,\n  max: 100,\n  value: 0,\n  isIndeterminate: false,\n};\n\nfunction baseStyle(props: Record<string, any>) {\n  const colorScheme = getColorScheme(props);\n  return {\n    innerBg: mode(`${colorScheme}.600`, `${colorScheme}.500`)(props),\n    bg: mode(`${colorScheme}.200`, `${colorScheme}.800`)(props),\n  };\n}\n\nconst sizes = {\n  'xs': {\n    height: 1,\n  },\n  'sm': {\n    height: 2,\n  },\n  'md': {\n    height: 3,\n  },\n  'lg': {\n    height: 4,\n  },\n  'xl': {\n    height: 5,\n  },\n  '2xl': {\n    height: 6,\n  },\n};\n\nexport default {\n  baseStyle,\n  defaultProps,\n  sizes,\n};\n"]},"metadata":{},"sourceType":"script"}