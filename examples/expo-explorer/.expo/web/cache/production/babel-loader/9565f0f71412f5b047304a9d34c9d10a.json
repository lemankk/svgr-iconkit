{"ast":null,"code":"Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _tools=require(\"../tools\");var _reactNative=require(\"react-native-web/dist/index\");var baseStyle=function baseStyle(props){var onTrackColor=props.onTrackColor,offTrackColor=props.offTrackColor,onThumbColor=props.onThumbColor,offThumbColor=props.offThumbColor;var colorScheme=(0,_tools.getColorScheme)(props);return{offTrackColor:offTrackColor!=null?offTrackColor:(0,_tools.mode)(_reactNative.Platform.OS!=='ios'?'gray.400':'gray.200',_reactNative.Platform.OS!=='ios'?'gray.700':'gray.600')(props),onTrackColor:onTrackColor!=null?onTrackColor:(0,_tools.mode)(_reactNative.Platform.OS!=='ios'?colorScheme+\".300\":colorScheme+\".500\",_reactNative.Platform.OS!=='ios'?colorScheme+\".700\":colorScheme+\".500\")(props),onThumbColor:onThumbColor!=null?onThumbColor:(0,_tools.mode)(_reactNative.Platform.OS!=='ios'?colorScheme+\".600\":'white',_reactNative.Platform.OS!=='ios'?colorScheme+\".500\":'white')(props),offThumbColor:offThumbColor!=null?offThumbColor:(0,_tools.mode)(_reactNative.Platform.OS!=='ios'?'gray.100':'white',_reactNative.Platform.OS!=='ios'?'gray.200':'white')(props)};};var sizes={sm:{style:{transform:[{scale:0.75}]}},md:{},lg:{style:{transform:[{scale:1.25}]},margin:1}};var defaultProps={size:'md',colorScheme:'primary'};var _default={baseStyle:baseStyle,sizes:sizes,defaultProps:defaultProps};exports.default=_default;","map":{"version":3,"sources":["switch.ts"],"names":["baseStyle","onTrackColor","offTrackColor","onThumbColor","offThumbColor","props","colorScheme","Platform","sizes","sm","style","transform","scale","md","lg","margin","defaultProps","size"],"mappings":"gFAAA,GAAA,CAAA,MAAA,CAAA,OAAA,YAAA,C,wDAGA,GAAMA,CAAAA,SAAS,CAATA,QAAAA,CAAAA,SAAAA,CAAY,KAAZA,CAA4C,CAAA,GAC1CC,CAAAA,YAD0C,CACmBI,KADnB,CAAA,YAAA,CAC5BH,aAD4B,CACmBG,KADnB,CAAA,aAAA,CACbF,YADa,CACmBE,KADnB,CAAA,YAAA,CACCD,aADD,CACmBC,KADnB,CAAA,aAAA,CAEhD,GAAIC,CAAAA,WAAW,CAAG,CAAA,EAAA,MAAA,CAAA,cAAA,EAAlB,KAAkB,CAAlB,CAEA,MAAO,CACLJ,aAAa,CACXA,aADW,EAAA,IACXA,CADW,aACXA,CACA,CAAA,EAAA,MAAA,CAAA,IAAA,EACEK,YAAAA,CAAAA,QAAAA,CAAAA,EAAAA,GAAAA,KAAAA,CAAAA,UAAAA,CADF,UAAA,CAEEA,YAAAA,CAAAA,QAAAA,CAAAA,EAAAA,GAAAA,KAAAA,CAAAA,UAAAA,CAFF,UAAA,EAHG,KAGH,CAHG,CAOLN,YAAY,CACVA,YADU,EAAA,IACVA,CADU,YACVA,CACA,CAAA,EAAA,MAAA,CAAA,IAAA,EACEM,YAAAA,CAAAA,QAAAA,CAAAA,EAAAA,GAAAA,KAAAA,CAA2BD,WAA3BC,CAAAA,MAAAA,CAAkDD,WAAlDC,CADF,MAAA,CAEEA,YAAAA,CAAAA,QAAAA,CAAAA,EAAAA,GAAAA,KAAAA,CAA2BD,WAA3BC,CAAAA,MAAAA,CAAkDD,WAAlDC,CAFF,MAAA,EATG,KASH,CATG,CAaLJ,YAAY,CACVA,YADU,EAAA,IACVA,CADU,YACVA,CACA,CAAA,EAAA,MAAA,CAAA,IAAA,EACEI,YAAAA,CAAAA,QAAAA,CAAAA,EAAAA,GAAAA,KAAAA,CAA2BD,WAA3BC,CAAAA,MAAAA,CADF,OAAA,CAEEA,YAAAA,CAAAA,QAAAA,CAAAA,EAAAA,GAAAA,KAAAA,CAA2BD,WAA3BC,CAAAA,MAAAA,CAFF,OAAA,EAfG,KAeH,CAfG,CAmBLH,aAAa,CACXA,aADW,EAAA,IACXA,CADW,aACXA,CACA,CAAA,EAAA,MAAA,CAAA,IAAA,EACEG,YAAAA,CAAAA,QAAAA,CAAAA,EAAAA,GAAAA,KAAAA,CAAAA,UAAAA,CADF,OAAA,CAEEA,YAAAA,CAAAA,QAAAA,CAAAA,EAAAA,GAAAA,KAAAA,CAAAA,UAAAA,CAFF,OAAA,EArBJ,KAqBI,CArBG,CAAP,CAJF,CAAA,CAgCA,GAAMC,CAAAA,KAAK,CAAG,CACZC,EAAE,CAAE,CACFC,KAAK,CAAE,CACLC,SAAS,CAAE,CAAC,CAAEC,KAAK,CAHX,IAGI,CAAD,CADN,CADL,CADQ,CAMZC,EAAE,CANU,EAAA,CAOZC,EAAE,CAAE,CACFJ,KAAK,CAAE,CACLC,SAAS,CAAE,CAAC,CAAEC,KAAK,CAFnB,IAEY,CAAD,CADN,CADL,CAIFG,MAAM,CAXV,CAOM,CAPQ,CAAd,CAeA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,IAAI,CADe,IAAA,CAEnBX,WAAW,CAFb,SAAqB,CAArB,C,aAKe,CACbN,SAAS,CADI,SAAA,CAEbQ,KAAK,CAFQ,KAAA,CAGbQ,YAAY,CAHC,YAAA,C","sourcesContent":["import { mode, getColorScheme } from '../tools';\nimport { Platform } from 'react-native';\n\nconst baseStyle = (props: Record<string, any>) => {\n  let { onTrackColor, offTrackColor, onThumbColor, offThumbColor } = props;\n  let colorScheme = getColorScheme(props);\n\n  return {\n    offTrackColor:\n      offTrackColor ??\n      mode(\n        Platform.OS !== 'ios' ? 'gray.400' : 'gray.200',\n        Platform.OS !== 'ios' ? 'gray.700' : 'gray.600'\n      )(props),\n    onTrackColor:\n      onTrackColor ??\n      mode(\n        Platform.OS !== 'ios' ? `${colorScheme}.300` : `${colorScheme}.500`,\n        Platform.OS !== 'ios' ? `${colorScheme}.700` : `${colorScheme}.500`\n      )(props),\n    onThumbColor:\n      onThumbColor ??\n      mode(\n        Platform.OS !== 'ios' ? `${colorScheme}.600` : 'white',\n        Platform.OS !== 'ios' ? `${colorScheme}.500` : 'white'\n      )(props),\n    offThumbColor:\n      offThumbColor ??\n      mode(\n        Platform.OS !== 'ios' ? 'gray.100' : 'white',\n        Platform.OS !== 'ios' ? 'gray.200' : 'white'\n      )(props),\n  };\n};\n\nconst sizes = {\n  sm: {\n    style: {\n      transform: [{ scale: 0.75 }],\n    },\n  },\n  md: {},\n  lg: {\n    style: {\n      transform: [{ scale: 1.25 }],\n    },\n    margin: 1,\n  },\n};\n\nconst defaultProps = {\n  size: 'md',\n  colorScheme: 'primary',\n};\n\nexport default {\n  baseStyle,\n  sizes,\n  defaultProps,\n};\n"]},"metadata":{},"sourceType":"script"}