{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _react=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");var _Flex=_interopRequireDefault(require(\"../../primitives/Flex\"));var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/Breadcrumb/BreadcrumbItem.tsx\";var BreadcrumbItem=function BreadcrumbItem(props,ref){var children=props.children,isCurrentPage=props.isCurrentPage,_text=props._text,remainingProps=(0,_objectWithoutProperties2.default)(props,[\"children\",\"isCurrentPage\",\"_text\"]);return _react.default.createElement(_Flex.default,(0,_extends2.default)({},remainingProps,{ref:ref,__self:_this,__source:{fileName:_jsxFileName,lineNumber:9,columnNumber:5}}),_react.default.Children.map(children,function(child,index){return _react.default.cloneElement(child,(0,_extends2.default)({'key':\"breadcrumb-item-\"+index,'_text':(0,_extends2.default)({},_text,{fontWeight:isCurrentPage?'bold':undefined})},{isUnderlined:false},remainingProps,{'aria-current':_reactNative.Platform.OS==='web'&&isCurrentPage?'page':undefined}));}));};var _default=_react.default.memo((0,_react.forwardRef)(BreadcrumbItem));exports.default=_default;","map":{"version":3,"sources":["BreadcrumbItem.tsx"],"names":["BreadcrumbItem","children","isCurrentPage","_text","remainingProps","props","React","fontWeight","isUnderlined","Platform"],"mappings":"wbAAA,GAAA,CAAA,MAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,C,wDAEA,GAAA,CAAA,KAAA,CAAA,sBAAA,CAAA,OAAA,yBAAA,CAAA,C,+IAGA,GAAMA,CAAAA,cAAc,CAAdA,QAAAA,CAAAA,cAAAA,CAAiB,KAAjBA,CAAiB,GAAjBA,CAA6D,CAAA,GACzDC,CAAAA,QADyD,CACHI,KADG,CAAA,QAAA,CAC/CH,aAD+C,CACHG,KADG,CAAA,aAAA,CAChCF,KADgC,CACHE,KADG,CAAA,KAAA,CACtBD,cADsB,CAAA,CAAA,EAAA,yBAAA,CAAA,OAAA,EAAA,KAAA,CAAA,CAAA,UAAA,CAAA,eAAA,CAAA,OAAA,CAAA,CAAA,CAEjE,MACE,CAAA,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,KAAA,CAAD,OAAA,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAA,EAAA,CAAA,cAAA,CAAA,CAA0B,GAAG,CAA7B,GAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,CAAA,CAAA,YAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CACGE,MAAAA,CAAAA,OAAAA,CAAAA,QAAAA,CAAAA,GAAAA,CAAAA,QAAAA,CAA6B,SAAA,KAAA,CAAA,KAAA,CAAA,CAAA,MAC5BA,CAAAA,MAAAA,CAAAA,OAAAA,CAAAA,YAAAA,CAAAA,KAAAA,CAAAA,CAAAA,EAAAA,SAAAA,CAAAA,OAAAA,EAAAA,CACE,MAAA,mBADFA,KAAAA,CAEE,QAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAA,EAAA,CAAA,KAAA,CAAA,CAEEC,UAAU,CAAEL,aAAa,CAAA,MAAA,CAJ7BI,SAEE,CAAA,CAFFA,CAAAA,CAMK,CACDE,YAAY,CAPhBF,KAMK,CANLA,CAAAA,cAAAA,CAAAA,CAUE,eACEG,YAAAA,CAAAA,QAAAA,CAAAA,EAAAA,GAAAA,KAAAA,EAAAA,aAAAA,CAAAA,MAAAA,CAZwB,SAC5BH,CAAAA,CAAAA,CAD4B,CAFlC,CAEKA,CADH,CADF,CAFF,CAAA,C,aAuBeA,MAAAA,CAAAA,OAAAA,CAAAA,IAAAA,CAAW,CAAA,EAAA,MAAA,CAAA,UAAA,EAAXA,cAAW,CAAXA,C","sourcesContent":["import React, { forwardRef } from 'react';\nimport { Platform } from 'react-native';\nimport Flex from '../../primitives/Flex';\nimport type { IBreadcrumbItemProps } from './types';\n\nconst BreadcrumbItem = (props: IBreadcrumbItemProps, ref?: any) => {\n  const { children, isCurrentPage, _text, ...remainingProps } = props;\n  return (\n    <Flex {...remainingProps} ref={ref}>\n      {React.Children.map(children, (child: any, index: number) =>\n        React.cloneElement(child, {\n          'key': `breadcrumb-item-${index}`,\n          '_text': {\n            ..._text, //taken out empty _text prop from props\n            fontWeight: isCurrentPage ? 'bold' : undefined,\n          },\n          ...{\n            isUnderlined: false,\n          },\n          ...remainingProps,\n          'aria-current':\n            Platform.OS === 'web' && isCurrentPage ? 'page' : undefined,\n        })\n      )}\n    </Flex>\n  );\n};\n\nexport default React.memo(forwardRef(BreadcrumbItem));\n"]},"metadata":{},"sourceType":"script"}