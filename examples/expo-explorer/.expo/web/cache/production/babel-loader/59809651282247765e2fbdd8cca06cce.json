{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _react=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");var _hooks=require(\"../../../hooks\");var _native=_interopRequireDefault(require(\"styled-components/native\"));var _styledSystem=require(\"styled-system\");var _useThemeProps=require(\"../../../hooks/useThemeProps\");var _customProps=require(\"../../../utils/customProps\");var _interactions=require(\"@react-native-aria/interactions\");var _mergeRefs=require(\"../../../utils/mergeRefs\");var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/primitives/Text/index.tsx\";function useResolvedFontFamily(props){var fontFamily=props.fontFamily,fontStyle=props.fontStyle,fontWeight=props.fontWeight;var _useTheme=(0,_hooks.useTheme)(),fontConfig=_useTheme.fontConfig,fontWeights=_useTheme.fontWeights,fonts=_useTheme.fonts;var fontToken=fonts[fontFamily];if(fontConfig&&fontConfig[fontToken]){var parsedFontWeight=parseInt(fontWeight);var fontWeightNumber=Number.isNaN(parsedFontWeight)?fontWeights[fontWeight]:fontWeight;var fontVariants=fontConfig[fontToken][fontWeightNumber];if(typeof fontVariants==='object'){if(fontVariants[fontStyle])return fontVariants[fontStyle];}else{return fontVariants;}}}var StyledText=(0,_native.default)(_reactNative.Text)(_styledSystem.color,_styledSystem.space,_styledSystem.position,_styledSystem.layout,_styledSystem.flexbox,_styledSystem.border,_styledSystem.typography,_styledSystem.position,_customProps.customPosition,_customProps.customBorder,_customProps.customBackground,_customProps.customOutline,_customProps.customShadow,_customProps.customExtra,_customProps.customLayout,_customProps.customTypography);var Text=function Text(_ref2,ref){var children=_ref2.children,props=(0,_objectWithoutProperties2.default)(_ref2,[\"children\"]);var _usePropsResolution=(0,_useThemeProps.usePropsResolution)('Text',props),isTruncated=_usePropsResolution.isTruncated,noOfLines=_usePropsResolution.noOfLines,bold=_usePropsResolution.bold,italic=_usePropsResolution.italic,sub=_usePropsResolution.sub,highlight=_usePropsResolution.highlight,underline=_usePropsResolution.underline,strikeThrough=_usePropsResolution.strikeThrough,propFontFamily=_usePropsResolution.fontFamily,propFontWeight=_usePropsResolution.fontWeight,propFontStyle=_usePropsResolution.fontStyle,_hover=_usePropsResolution._hover,_usePropsResolution$f=_usePropsResolution.fontSize,fontSize=_usePropsResolution$f===void 0?'md':_usePropsResolution$f,reslovedProps=(0,_objectWithoutProperties2.default)(_usePropsResolution,[\"isTruncated\",\"noOfLines\",\"bold\",\"italic\",\"sub\",\"highlight\",\"underline\",\"strikeThrough\",\"fontFamily\",\"fontWeight\",\"fontStyle\",\"_hover\",\"fontSize\"]);var _ref=(0,_react.useRef)(null);var _useHover=(0,_interactions.useHover)({},_hover?_ref:null),isHovered=_useHover.isHovered;var fontFamily=propFontFamily;var fontStyle=italic?'italic':propFontStyle;var fontWeight=bold?'bold':propFontWeight;var resolvedFontFamily=useResolvedFontFamily({fontFamily:fontFamily,fontWeight:fontWeight,fontStyle:fontStyle});if(resolvedFontFamily){fontFamily=resolvedFontFamily;}return _react.default.createElement(StyledText,(0,_extends2.default)({},reslovedProps,{numberOfLines:noOfLines?noOfLines:isTruncated?1:undefined,fontWeight:bold?'bold':fontWeight,fontStyle:italic?'italic':fontStyle,bg:highlight?'warning.200':reslovedProps.bg,textDecorationLine:underline&&strikeThrough?'underline line-through':underline?'underline':strikeThrough?'line-through':reslovedProps.textDecorationLine,fontSize:sub?10:fontSize,ref:(0,_mergeRefs.mergeRefs)([ref,_ref]),fontFamily:fontFamily},isHovered&&_hover,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:113,columnNumber:5}}),children);};var _default=(0,_react.memo)((0,_react.forwardRef)(Text));exports.default=_default;","map":{"version":3,"sources":["index.tsx"],"names":["fontFamily","fontStyle","fontWeight","props","fontConfig","fontWeights","fonts","fontToken","parsedFontWeight","parseInt","fontWeightNumber","Number","fontVariants","StyledText","NativeText","color","space","position","layout","flexbox","border","typography","customPosition","customBorder","customBackground","customOutline","customShadow","customExtra","customLayout","customTypography","Text","children","isTruncated","noOfLines","bold","italic","sub","highlight","underline","strikeThrough","propFontFamily","propFontWeight","propFontStyle","_hover","fontSize","reslovedProps","_ref","isHovered","resolvedFontFamily","useResolvedFontFamily"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef, useRef } from 'react';\nimport { Text as NativeText } from 'react-native';\nimport { useTheme } from '../../../hooks';\nimport styled from 'styled-components/native';\nimport {\n  color,\n  position,\n  space,\n  typography,\n  layout,\n  flexbox,\n  border,\n} from 'styled-system';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport {\n  customBorder,\n  customBackground,\n  customOutline,\n  customLayout,\n  customExtra,\n  customShadow,\n  customTypography,\n  customPosition,\n} from '../../../utils/customProps';\nimport type { ITextProps } from './types';\nimport { useHover } from '@react-native-aria/interactions';\nimport { mergeRefs } from '../../../utils/mergeRefs';\n\ntype IUseResolvedFontFamily = {\n  fontFamily: string;\n  fontStyle: string;\n  fontWeight: string | number;\n};\n\n// Android doesn't support fontWeight or fontStyle properties. So, we pass fontFamily instead.\nfunction useResolvedFontFamily(props: IUseResolvedFontFamily) {\n  const { fontFamily, fontStyle, fontWeight } = props;\n\n  const { fontConfig, fontWeights, fonts } = useTheme();\n  const fontToken = fonts[fontFamily];\n\n  if (fontConfig && fontConfig[fontToken]) {\n    // fontWeights are also specified using \"400\"\n    const parsedFontWeight = parseInt(fontWeight as any);\n    let fontWeightNumber = Number.isNaN(parsedFontWeight)\n      ? fontWeights[fontWeight]\n      : fontWeight;\n    let fontVariants = fontConfig[fontToken][fontWeightNumber];\n    if (typeof fontVariants === 'object') {\n      if (fontVariants[fontStyle]) return fontVariants[fontStyle];\n    } else {\n      return fontVariants;\n    }\n  }\n}\n\nconst StyledText = styled(NativeText)<ITextProps>(\n  color,\n  space,\n  position,\n  layout,\n  flexbox,\n  border,\n  typography,\n  position,\n  customPosition,\n  customBorder,\n  customBackground,\n  customOutline,\n  customShadow,\n  customExtra,\n  customLayout,\n  customTypography\n);\n\nconst Text = ({ children, ...props }: ITextProps, ref: any) => {\n  const {\n    isTruncated,\n    noOfLines,\n    bold,\n    italic,\n    sub,\n    highlight,\n    underline,\n    strikeThrough,\n    fontFamily: propFontFamily,\n    fontWeight: propFontWeight,\n    fontStyle: propFontStyle,\n    _hover,\n    fontSize = 'md',\n    ...reslovedProps\n  } = usePropsResolution('Text', props);\n\n  const _ref = useRef(null);\n  // TODO: might have to add this condition\n  const { isHovered } = useHover({}, _hover ? _ref : null);\n  // const { isHovered } = useHover({}, _ref);\n  let fontFamily = propFontFamily;\n  let fontStyle = italic ? 'italic' : propFontStyle;\n  let fontWeight = bold ? 'bold' : propFontWeight;\n\n  const resolvedFontFamily = useResolvedFontFamily({\n    fontFamily,\n    fontWeight,\n    fontStyle,\n  });\n\n  if (resolvedFontFamily) {\n    fontFamily = resolvedFontFamily;\n  }\n\n  return (\n    <StyledText\n      {...reslovedProps}\n      numberOfLines={noOfLines ? noOfLines : isTruncated ? 1 : undefined}\n      fontWeight={bold ? 'bold' : fontWeight}\n      fontStyle={italic ? 'italic' : fontStyle}\n      bg={highlight ? 'warning.200' : reslovedProps.bg}\n      textDecorationLine={\n        underline && strikeThrough\n          ? 'underline line-through'\n          : underline\n          ? 'underline'\n          : strikeThrough\n          ? 'line-through'\n          : reslovedProps.textDecorationLine\n      }\n      fontSize={sub ? 10 : fontSize}\n      ref={mergeRefs([ref, _ref])}\n      fontFamily={fontFamily}\n      {...(isHovered && _hover)}\n    >\n      {children}\n    </StyledText>\n  );\n};\n\nexport default memo(forwardRef(Text));\nexport type { ITextProps };\n"]},"metadata":{},"sourceType":"script"}