{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _react=_interopRequireWildcard(require(\"react\"));var _Box=_interopRequireDefault(require(\"../../primitives/Box\"));var _useThemeProps=require(\"../../../hooks/useThemeProps\");var _useFormControl=require(\"./useFormControl\");var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/FormControl/FormControlErrorMessage.tsx\";var FormControlErrorMessage=function FormControlErrorMessage(_ref,ref){var children=_ref.children,_disabled=_ref._disabled,props=(0,_objectWithoutProperties2.default)(_ref,[\"children\",\"_disabled\"]);var themedProps=(0,_useThemeProps.usePropsResolution)('FormControlErrorMessage',props);var formControlContext=(0,_useFormControl.useFormControlContext)();_react.default.useEffect(function(){formControlContext==null?void 0:formControlContext.setHasFeedbackText(true);return function(){formControlContext==null?void 0:formControlContext.setHasFeedbackText(false);};});return formControlContext!=null&&formControlContext.isInvalid?_react.default.createElement(_Box.default,(0,_extends2.default)({_text:{fontSize:'xs',color:'red.400'},nativeID:formControlContext==null?void 0:formControlContext.helpTextId},themedProps,props,(formControlContext==null?void 0:formControlContext.isDisabled)&&_disabled,{ref:ref,__self:_this,__source:{fileName:_jsxFileName,lineNumber:23,columnNumber:5}}),children):null;};var _default=(0,_react.memo)((0,_react.forwardRef)(FormControlErrorMessage));exports.default=_default;","map":{"version":3,"sources":["FormControlErrorMessage.tsx"],"names":["FormControlErrorMessage","children","_disabled","props","themedProps","formControlContext","React","fontSize","color"],"mappings":"wbAAA,GAAA,CAAA,MAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CACA,GAAA,CAAA,IAAA,CAAA,sBAAA,CAAA,OAAA,wBAAA,CAAA,CACA,GAAA,CAAA,cAAA,CAAA,OAAA,gCAAA,CACA,GAAA,CAAA,eAAA,CAAA,OAAA,oBAAA,C,yJAGA,GAAMA,CAAAA,uBAAuB,CAAvBA,QAAAA,CAAAA,uBAAAA,CAA0B,IAA1BA,CAA0B,GAA1BA,CAGD,CAFDC,GAAAA,CAAAA,QAEC,CAAA,IAAA,CAFDA,QAAAA,CAAUC,SAET,CAAA,IAAA,CAFSA,SAAVD,CAAwBE,KAEvB,CAAA,CAAA,EAAA,yBAAA,CAAA,OAAA,EAAA,IAAA,CAAA,CAAA,UAAA,CAAA,WAAA,CAAA,CAFDF,CAGF,GAAMG,CAAAA,WAAW,CAAG,CAAA,EAAA,cAAA,CAAA,kBAAA,EAAA,yBAAA,CAApB,KAAoB,CAApB,CAEA,GAAMC,CAAAA,kBAAkB,CAAG,CAAA,EAAA,eAAA,CAA3B,qBAA2B,GAA3B,CAEAC,MAAAA,CAAAA,OAAAA,CAAAA,SAAAA,CAAgB,UAAM,CACpBD,kBAAkB,EAAlBA,IAAAA,CAAAA,IAAAA,EAAAA,CAAAA,kBAAkB,CAAlBA,kBAAAA,CAAAA,IAAAA,CAAAA,CACA,MAAO,WAAM,CACXA,kBAAkB,EAAlBA,IAAAA,CAAAA,IAAAA,EAAAA,CAAAA,kBAAkB,CAAlBA,kBAAAA,CAAAA,KAAAA,CAAAA,CADF,CAAA,CAFFC,CAAAA,EAOA,MAAOD,CAAAA,kBAAkB,EAAlBA,IAAAA,EAAAA,kBAAkB,CAAlBA,SAAAA,CACL,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,IAAA,CAAD,OAAA,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAA,CACE,KAAK,CAAE,CAAEE,QAAQ,CAAV,IAAA,CAAkBC,KAAK,CADhC,SACS,CADT,CAEE,QAAQ,CAAEH,kBAAF,EAAA,IAAEA,CAAF,IAAA,EAAEA,CAAAA,kBAAkB,CAF9B,UAAA,CAAA,CAAA,WAAA,CAAA,KAAA,CAKO,CAAA,kBAAkB,EAAlB,IAAA,CAAA,IAAA,EAAA,CAAA,kBAAkB,CAAlB,UAAA,GALP,SAAA,CAAA,CAME,GAAG,CANL,GAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CADKA,QACL,CADKA,CAAP,IAAA,CAfF,CAAA,C,aA6Be,CAAA,EAAA,MAAA,CAAA,IAAA,EAAK,CAAA,EAAA,MAAA,CAAA,UAAA,EAAL,uBAAK,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Box from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useFormControlContext } from './useFormControl';\nimport type { IFormControlErrorMessageProps } from './types';\n\nconst FormControlErrorMessage = (\n  { children, _disabled, ...props }: IFormControlErrorMessageProps,\n  ref: any\n) => {\n  const themedProps = usePropsResolution('FormControlErrorMessage', props);\n\n  const formControlContext = useFormControlContext();\n\n  React.useEffect(() => {\n    formControlContext?.setHasFeedbackText(true);\n    return () => {\n      formControlContext?.setHasFeedbackText(false);\n    };\n  });\n\n  return formControlContext?.isInvalid ? (\n    <Box\n      _text={{ fontSize: 'xs', color: 'red.400' }}\n      nativeID={formControlContext?.helpTextId}\n      {...themedProps}\n      {...props}\n      {...(formControlContext?.isDisabled && _disabled)}\n      ref={ref}\n    >\n      {children}\n    </Box>\n  ) : null;\n};\n\nexport default memo(forwardRef(FormControlErrorMessage));\n"]},"metadata":{},"sourceType":"script"}