{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=exports.Item=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _react=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");var _Actionsheet=require(\"../../composites/Actionsheet\");var _Select=require(\"./Select\");var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/primitives/Select/SelectItem.tsx\";var Item=function Item(_ref,ref){var isDisabled=_ref.isDisabled,label=_ref.label,value=_ref.value,props=(0,_objectWithoutProperties2.default)(_ref,[\"isDisabled\",\"label\",\"value\"]);var _React$useContext=_react.default.useContext(_Select.SelectContext),onValueChange=_React$useContext.onValueChange,selectedValue=_React$useContext.selectedValue,_selectedItem=_React$useContext._selectedItem,_item=_React$useContext._item;if(_reactNative.Platform.OS!=='web'){var isSelected=selectedValue===value;return _react.default.createElement(_Actionsheet.Actionsheet.Item,(0,_extends2.default)({ref:ref,onPress:function onPress(){if(!isDisabled){onValueChange(value);}},accessibilityState:{selected:isSelected}},_item,isSelected&&_selectedItem,props,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:21,columnNumber:7}}),label);}else{return _react.default.createElement(\"option\",{ref:ref,label:label,value:value,__self:_this,__source:{fileName:_jsxFileName,lineNumber:37,columnNumber:12}});}};exports.Item=Item;var _default=(0,_react.memo)((0,_react.forwardRef)(Item));exports.default=_default;","map":{"version":3,"sources":["SelectItem.tsx"],"names":["Item","isDisabled","label","value","props","onValueChange","selectedValue","_selectedItem","_item","React","SelectContext","Platform","isSelected","selected"],"mappings":"qcAAA,GAAA,CAAA,MAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,C,wDAGA,GAAA,CAAA,YAAA,CAAA,OAAA,gCAAA,CACA,GAAA,CAAA,OAAA,CAAA,OAAA,YAAA,C,uIAEO,GAAMA,CAAAA,IAAI,CAAJA,QAAAA,CAAAA,IAAAA,CAAO,IAAPA,CAAO,GAAPA,CAGR,CAFDC,GAAAA,CAAAA,UAEC,CAAA,IAAA,CAFDA,UAAAA,CAAYC,KAEX,CAAA,IAAA,CAFWA,KAAZD,CAAmBE,KAElB,CAAA,IAAA,CAFkBA,KAAnBF,CAA6BG,KAE5B,CAAA,CAAA,EAAA,yBAAA,CAAA,OAAA,EAAA,IAAA,CAAA,CAAA,YAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAFDH,CAEC,GAAA,CAAA,iBAAA,CAMCQ,MAAAA,CAAAA,OAAAA,CAAAA,UAAAA,CAAiBC,OAAAA,CANlB,aAMCD,CAND,CAEDJ,aAFC,CAAA,iBAAA,CAAA,aAAA,CAGDC,aAHC,CAAA,iBAAA,CAAA,aAAA,CAIDC,aAJC,CAAA,iBAAA,CAAA,aAAA,CAKDC,KALC,CAAA,iBAAA,CAAA,KAAA,CAOH,GAAIG,YAAAA,CAAAA,QAAAA,CAAAA,EAAAA,GAAJ,KAAA,CAA2B,CACzB,GAAMC,CAAAA,UAAU,CAAGN,aAAa,GAAhC,KAAA,CAEA,MACE,CAAA,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAD,WAAC,CAAD,IAAA,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAA,CACE,GAAG,CADL,GAAA,CAEE,OAAO,CAAE,QAAA,CAAA,OAAA,EAAM,CACb,GAAI,CAAJ,UAAA,CAAiB,CACfD,aAAa,CAAbA,KAAa,CAAbA,CAEH,CANH,CAAA,CAOE,kBAAkB,CAAE,CAAEQ,QAAQ,CAPhC,UAOsB,CAPtB,CAAA,CAAA,KAAA,CASOD,UAAU,EATjB,aAAA,CAAA,KAAA,CAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CADF,KACE,CADF,CAHF,CAAA,IAmBO,CACL,MAAO,CAAA,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,QAAA,CAAA,CAAQ,GAAG,CAAX,GAAA,CAAkB,KAAK,CAAvB,KAAA,CAAgC,KAAK,CAArC,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CAAP,EAAO,CAAA,CAAA,CAAP,CAEH,CAhCM,CAAA,C,+BAkCQ,CAAA,EAAA,MAAA,CAAA,IAAA,EAAK,CAAA,EAAA,MAAA,CAAA,UAAA,EAAL,IAAK,CAAL,C","sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport type { ISelectItemProps } from './types';\nimport { Platform } from 'react-native';\nimport { Actionsheet } from '../../composites/Actionsheet';\nimport { SelectContext } from './Select';\n\nexport const Item = (\n  { isDisabled, label, value, ...props }: ISelectItemProps,\n  ref?: any\n) => {\n  const {\n    onValueChange,\n    selectedValue,\n    _selectedItem,\n    _item,\n  } = React.useContext(SelectContext);\n  if (Platform.OS !== 'web') {\n    const isSelected = selectedValue === value;\n\n    return (\n      <Actionsheet.Item\n        ref={ref}\n        onPress={() => {\n          if (!isDisabled) {\n            onValueChange(value);\n          }\n        }}\n        accessibilityState={{ selected: isSelected }}\n        {..._item}\n        {...(isSelected && _selectedItem)}\n        {...props}\n      >\n        {label}\n      </Actionsheet.Item>\n    );\n  } else {\n    return <option ref={ref} label={label} value={value} />;\n  }\n};\n\nexport default memo(forwardRef(Item));\n"]},"metadata":{},"sourceType":"script"}