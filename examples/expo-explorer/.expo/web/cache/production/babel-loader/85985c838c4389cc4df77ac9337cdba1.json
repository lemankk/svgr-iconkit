{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _react=_interopRequireWildcard(require(\"react\"));var _Box=_interopRequireDefault(require(\"../../primitives/Box\"));var _useThemeProps=require(\"../../../hooks/useThemeProps\");var _useFormControl=require(\"./useFormControl\");var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/FormControl/FormControlHelperText.tsx\";var FormControlHelperText=function FormControlHelperText(_ref,ref){var children=_ref.children,_disabled=_ref._disabled,_invalid=_ref._invalid,props=(0,_objectWithoutProperties2.default)(_ref,[\"children\",\"_disabled\",\"_invalid\"]);var formControlContext=(0,_useFormControl.useFormControlContext)();var themedProps=(0,_useThemeProps.usePropsResolution)('FormControlHelperText',props);_react.default.useEffect(function(){formControlContext==null?void 0:formControlContext.setHasHelpText(true);return function(){formControlContext==null?void 0:formControlContext.setHasHelpText(false);};});return _react.default.createElement(_Box.default,(0,_extends2.default)({},themedProps,{nativeID:formControlContext==null?void 0:formControlContext.feedbackId},props,{ref:ref},(formControlContext==null?void 0:formControlContext.isInvalid)&&_invalid,(formControlContext==null?void 0:formControlContext.isDisabled)&&_disabled,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:23,columnNumber:5}}),children);};var _default=(0,_react.memo)((0,_react.forwardRef)(FormControlHelperText));exports.default=_default;","map":{"version":3,"sources":["FormControlHelperText.tsx"],"names":["FormControlHelperText","children","_disabled","_invalid","props","formControlContext","themedProps","React"],"mappings":"wbAAA,GAAA,CAAA,MAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CACA,GAAA,CAAA,IAAA,CAAA,sBAAA,CAAA,OAAA,wBAAA,CAAA,CACA,GAAA,CAAA,cAAA,CAAA,OAAA,gCAAA,CACA,GAAA,CAAA,eAAA,CAAA,OAAA,oBAAA,C,uJAGA,GAAMA,CAAAA,qBAAqB,CAArBA,QAAAA,CAAAA,qBAAAA,CAAwB,IAAxBA,CAAwB,GAAxBA,CAGD,CAFDC,GAAAA,CAAAA,QAEC,CAAA,IAAA,CAFDA,QAAAA,CAAUC,SAET,CAAA,IAAA,CAFSA,SAAVD,CAAqBE,QAEpB,CAAA,IAAA,CAFoBA,QAArBF,CAAkCG,KAEjC,CAAA,CAAA,EAAA,yBAAA,CAAA,OAAA,EAAA,IAAA,CAAA,CAAA,UAAA,CAAA,WAAA,CAAA,UAAA,CAAA,CAFDH,CAGF,GAAMI,CAAAA,kBAAkB,CAAG,CAAA,EAAA,eAAA,CAA3B,qBAA2B,GAA3B,CAEA,GAAMC,CAAAA,WAAW,CAAG,CAAA,EAAA,cAAA,CAAA,kBAAA,EAAA,uBAAA,CAApB,KAAoB,CAApB,CAEAC,MAAAA,CAAAA,OAAAA,CAAAA,SAAAA,CAAgB,UAAM,CACpBF,kBAAkB,EAAlBA,IAAAA,CAAAA,IAAAA,EAAAA,CAAAA,kBAAkB,CAAlBA,cAAAA,CAAAA,IAAAA,CAAAA,CACA,MAAO,WAAM,CACXA,kBAAkB,EAAlBA,IAAAA,CAAAA,IAAAA,EAAAA,CAAAA,kBAAkB,CAAlBA,cAAAA,CAAAA,KAAAA,CAAAA,CADF,CAAA,CAFFE,CAAAA,EAOA,MACE,CAAA,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,IAAA,CAAD,OAAA,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAA,EAAA,CAAA,WAAA,CAAA,CAEE,QAAQ,CAAEF,kBAAF,EAAA,IAAEA,CAAF,IAAA,EAAEA,CAAAA,kBAAkB,CAF9B,UAAA,CAAA,CAAA,KAAA,CAAA,CAIE,GAAG,CAJL,GAAA,CAAA,CAKO,CAAA,kBAAkB,EAAlB,IAAA,CAAA,IAAA,EAAA,CAAA,kBAAkB,CAAlB,SAAA,GALP,QAAA,CAMO,CAAA,kBAAkB,EAAlB,IAAA,CAAA,IAAA,EAAA,CAAA,kBAAkB,CAAlB,UAAA,GANP,SAAA,CAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CADF,QACE,CADF,CAfF,CAAA,C,aA6Be,CAAA,EAAA,MAAA,CAAA,IAAA,EAAK,CAAA,EAAA,MAAA,CAAA,UAAA,EAAL,qBAAK,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Box from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useFormControlContext } from './useFormControl';\nimport type { IFormControlHelperTextProps } from './types';\n\nconst FormControlHelperText = (\n  { children, _disabled, _invalid, ...props }: IFormControlHelperTextProps,\n  ref: any\n) => {\n  const formControlContext = useFormControlContext();\n\n  const themedProps = usePropsResolution('FormControlHelperText', props);\n\n  React.useEffect(() => {\n    formControlContext?.setHasHelpText(true);\n    return () => {\n      formControlContext?.setHasHelpText(false);\n    };\n  });\n\n  return (\n    <Box\n      {...themedProps}\n      nativeID={formControlContext?.feedbackId}\n      {...props}\n      ref={ref}\n      {...(formControlContext?.isInvalid && _invalid)}\n      {...(formControlContext?.isDisabled && _disabled)}\n    >\n      {children}\n    </Box>\n  );\n};\n\nexport default memo(forwardRef(FormControlHelperText));\n"]},"metadata":{},"sourceType":"script"}