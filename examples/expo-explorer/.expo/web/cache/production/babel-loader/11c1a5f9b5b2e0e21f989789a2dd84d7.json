{"ast":null,"code":"import{usePress}from\"@react-aria/interactions\";import{useFocusable}from\"@react-aria/focus\";import{filterDOMProps,mergeProps}from\"@react-aria/utils\";import _babelRuntimeHelpersEsmExtends from\"@babel/runtime/helpers/esm/extends\";export function useToggle(props,state,ref){var _props$isDisabled=props.isDisabled,isDisabled=_props$isDisabled===void 0?false:_props$isDisabled,isRequired=props.isRequired,isReadOnly=props.isReadOnly,value=props.value,name=props.name,children=props.children,ariaLabel=props['aria-label'],ariaLabelledby=props['aria-labelledby'],_props$validationStat=props.validationState,validationState=_props$validationStat===void 0?'valid':_props$validationStat;var onChange=function onChange(e){e.stopPropagation();state.setSelected(e.target.checked);};var hasChildren=children!=null;var hasAriaLabel=ariaLabel!=null||ariaLabelledby!=null;if(!hasChildren&&!hasAriaLabel){console.warn('If you do not provide children, you must specify an aria-label for accessibility');}var _usePress=usePress({isDisabled:isDisabled}),pressProps=_usePress.pressProps;var _useFocusable=useFocusable(props,ref),focusableProps=_useFocusable.focusableProps;var interactions=mergeProps(pressProps,focusableProps);var domProps=filterDOMProps(props,{labelable:true});return{inputProps:mergeProps(domProps,_babelRuntimeHelpersEsmExtends({'aria-invalid':validationState==='invalid'||undefined,'aria-errormessage':props['aria-errormessage'],'aria-controls':props['aria-controls'],'aria-readonly':isReadOnly||undefined,onChange:onChange,disabled:isDisabled,required:isRequired,value:value,name:name,type:'checkbox'},interactions))};}","map":{"version":3,"sources":["packages/@react-aria/toggle/src/useToggle.ts"],"names":["isDisabled","validationState","onChange","e","state","hasChildren","children","hasAriaLabel","ariaLabel","ariaLabelledby","console","pressProps","usePress","focusableProps","useFocusable","interactions","mergeProps","domProps","filterDOMProps","labelable","inputProps","props","isReadOnly","disabled","required","value","name","type"],"mappings":"yOA6BO,SAAA,CAAA,SAAA,CAAA,KAAA,CAAA,KAAA,CAAA,GAAA,CAAwG,CAC7G,sBAAA,KAAA,CACEA,UADF,CACEA,UADF,4BAAI,KAAJ,mBAAI,UAAJ,CAAA,KAAA,CAAI,UAAJ,CAAI,UAAJ,CAAA,KAAA,CAAI,UAAJ,CAAI,KAAJ,CAAA,KAAA,CAAI,KAAJ,CAAI,IAAJ,CAAA,KAAA,CAAI,IAAJ,CAAI,QAAJ,CAAA,KAAA,CAAI,QAAJ,CAAI,SAAJ,CAAA,KAAA,CAOE,YAPF,EAAI,cAAJ,CAAA,KAAA,CAQE,iBARF,wBAAA,KAAA,CASEC,eATF,CASEA,eATF,gCASoB,OATpB,uBAYA,GAAIC,CAAAA,QAAQ,CAAIC,QAAZD,CAAAA,QAAYC,CAAAA,CAAD,CAAO,CAGpBA,CAAC,CAADA,eAAAA,GACAC,KAAK,CAALA,WAAAA,CAAkBD,CAAC,CAADA,MAAAA,CAAlBC,OAAAA,EAJF,CAAA,CAOA,GAAIC,CAAAA,WAAW,CAAGC,QAAQ,EAA1B,IAAA,CACA,GAAIC,CAAAA,YAAY,CAAGC,SAAS,EAATA,IAAAA,EAAqBC,cAAc,EAAtD,IAAA,CACA,GAAI,CAAA,WAAA,EAAgB,CAApB,YAAA,CAAmC,CACjCC,OAAO,CAAPA,IAAAA,CAAAA,kFAAAA,EAvB2G,CA2B7G,cAAmBE,QAAQ,CAAC,CAC1BZ,UAAAA,CAAAA,UAD0B,CAAD,CAA3B,CAAKW,UAAL,WAAKA,UAAL,CAIA,kBAAuBG,YAAY,CAAA,KAAA,CAAnC,GAAmC,CAAnC,CAAKD,cAAL,eAAKA,cAAL,CACA,GAAIE,CAAAA,YAAY,CAAGC,UAAU,CAAA,UAAA,CAA7B,cAA6B,CAA7B,CACA,GAAIC,CAAAA,QAAQ,CAAGC,cAAc,CAAA,KAAA,CAAQ,CAACC,SAAS,CAAE,IAAZ,CAAR,CAA7B,CAEA,MAAO,CACLC,UAAU,CAAEJ,UAAU,CAAA,QAAA,CAAA,8BAAA,CAAA,CACpB,eAAgBf,eAAe,GAAfA,SAAAA,EADI,SAAA,CAEpB,oBAAqBoB,KAAK,CAFN,mBAEM,CAFN,CAGpB,gBAAiBA,KAAK,CAHF,eAGE,CAHF,CAIpB,gBAAiBC,UAAU,EAJP,SAAA,CAKpBpB,QALoB,CAKpBA,QALoB,CAMpBqB,QAAQ,CANY,UAAA,CAOpBC,QAAQ,CAPY,UAAA,CAQpBC,KARoB,CAQpBA,KARoB,CASpBC,IAToB,CASpBA,IAToB,CAUpBC,IAAI,CAAE,UAVc,CAAA,CAAA,YAAA,CAAA,CADjB,CAAP,CAeD","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaToggleProps} from '@react-types/checkbox';\nimport {filterDOMProps, mergeProps} from '@react-aria/utils';\nimport {InputHTMLAttributes, RefObject} from 'react';\nimport {ToggleState} from '@react-stately/toggle';\nimport {useFocusable} from '@react-aria/focus';\nimport {usePress} from '@react-aria/interactions';\n\nexport interface ToggleAria {\n  /**\n   * Props to be spread on the input element.\n   */\n  inputProps: InputHTMLAttributes<HTMLInputElement>\n}\n\n/**\n * Handles interactions for toggle elements, e.g. Checkboxes and Switches.\n */\nexport function useToggle(props: AriaToggleProps, state: ToggleState, ref: RefObject<HTMLElement>): ToggleAria {\n  let {\n    isDisabled = false,\n    isRequired,\n    isReadOnly,\n    value,\n    name,\n    children,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledby,\n    validationState = 'valid'\n  } = props;\n\n  let onChange = (e) => {\n    // since we spread props on label, onChange will end up there as well as in here.\n    // so we have to stop propagation at the lowest level that we care about\n    e.stopPropagation();\n    state.setSelected(e.target.checked);\n  };\n\n  let hasChildren = children != null;\n  let hasAriaLabel = ariaLabel != null || ariaLabelledby != null;\n  if (!hasChildren && !hasAriaLabel) {\n    console.warn('If you do not provide children, you must specify an aria-label for accessibility');\n  }\n\n  // This handles focusing the input on pointer down, which Safari does not do by default.\n  let {pressProps} = usePress({\n    isDisabled\n  });\n\n  let {focusableProps} = useFocusable(props, ref);\n  let interactions = mergeProps(pressProps, focusableProps);\n  let domProps = filterDOMProps(props, {labelable: true});\n\n  return {\n    inputProps: mergeProps(domProps, {\n      'aria-invalid': validationState === 'invalid' || undefined,\n      'aria-errormessage': props['aria-errormessage'],\n      'aria-controls': props['aria-controls'],\n      'aria-readonly': isReadOnly || undefined,\n      onChange,\n      disabled: isDisabled,\n      required: isRequired,\n      value,\n      name,\n      type: 'checkbox',\n      ...interactions\n    })\n  };\n}\n"]},"metadata":{},"sourceType":"module"}