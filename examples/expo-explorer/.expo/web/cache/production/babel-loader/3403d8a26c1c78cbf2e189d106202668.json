{"ast":null,"code":"Object.defineProperty(exports,\"__esModule\",{value:true});exports.useMenuTypeahead=exports.useMenuOptionItem=exports.useMenuItem=exports.useMenu=exports.useMenuTrigger=void 0;var _focus=require(\"@react-aria/focus\");var _utils=require(\"@react-aria/utils\");var _reactNative=require(\"react-native-web/dist/index\");var useMenuTrigger=function useMenuTrigger(_ref){var handleOpen=_ref.handleOpen,isOpen=_ref.isOpen;var menuTriggerId=(0,_utils.useId)();return{'onKeyDownCapture':function onKeyDownCapture(event){if([' ','Enter','ArrowUp','ArrowDown'].includes(event.key)){event.preventDefault();handleOpen();}},'aria-haspopup':'menu','aria-expanded':isOpen?true:undefined,'nativeID':menuTriggerId};};exports.useMenuTrigger=useMenuTrigger;var useMenu=function useMenu(){var focusManager=(0,_focus.useFocusManager)();var onKeyDown=function onKeyDown(e){switch(e.key){case'ArrowDown':{e.preventDefault();focusManager.focusNext({wrap:true});break;}case'ArrowUp':{e.preventDefault();focusManager.focusPrevious({wrap:true});break;}}};return{onKeyDown:onKeyDown,accessibilityRole:'menu'};};exports.useMenu=useMenu;var useMenuItem=function useMenuItem(_ref2){var textValue=_ref2.textValue,ref=_ref2.ref;return{accessibilityRole:'menuitem',dataSet:{nativebaseMenuItem:textValue},onHoverIn:function onHoverIn(){if(ref.current&&_reactNative.Platform.OS==='web')ref.current.focus();}};};exports.useMenuItem=useMenuItem;var useMenuOptionItem=function useMenuOptionItem(_ref3){var isChecked=_ref3.isChecked,type=_ref3.type;return{accessibilityRole:'menuitem'+(_reactNative.Platform.OS==='web'?type:''),accessibilityState:{checked:isChecked},accessibilityChecked:isChecked};};exports.useMenuOptionItem=useMenuOptionItem;var ITEM_ATTR='data-nativebase-menu-item';var getValue=function getValue(element){var _element$getAttribute;return(_element$getAttribute=element.getAttribute(ITEM_ATTR))!=null?_element$getAttribute:'';};var useMenuTypeahead=function useMenuTypeahead(props){return{onKeyDown:function onKeyDown(event){if(props.onKeyDown){props.onKeyDown(event);}if(event.key.length===1&&!(event.ctrlKey||event.altKey||event.metaKey)){var container=event.currentTarget;var values=Array.from(container.querySelectorAll(\"[\"+ITEM_ATTR+\"]\")).map(getValue);var searchKey=event.key;var foundValue=values.find(function(value){return value.toLowerCase().startsWith(searchKey);});var newItem=container.querySelector(\"[\"+ITEM_ATTR+\"=\\\"\"+foundValue+\"\\\"]\");if(newItem){setTimeout(function(){return newItem.focus();});}}}};};exports.useMenuTypeahead=useMenuTypeahead;","map":{"version":3,"sources":["useMenu.tsx"],"names":["useMenuTrigger","handleOpen","isOpen","menuTriggerId","event","useMenu","focusManager","onKeyDown","e","wrap","accessibilityRole","useMenuItem","textValue","ref","dataSet","nativebaseMenuItem","onHoverIn","Platform","useMenuOptionItem","isChecked","type","accessibilityState","checked","accessibilityChecked","ITEM_ATTR","getValue","element","useMenuTypeahead","props","container","values","Array","searchKey","foundValue","value","newItem","setTimeout"],"mappings":"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","sourcesContent":["import { useFocusManager } from '@react-aria/focus';\nimport { useId } from '@react-aria/utils';\nimport { AccessibilityRole, Platform } from 'react-native';\n\ntype IMenuTriggerProps = {\n  handleOpen: () => void;\n  isOpen: boolean;\n};\n\nexport const useMenuTrigger = ({ handleOpen, isOpen }: IMenuTriggerProps) => {\n  const menuTriggerId = useId();\n  return {\n    'onKeyDownCapture': (event: KeyboardEvent) => {\n      if ([' ', 'Enter', 'ArrowUp', 'ArrowDown'].includes(event.key)) {\n        event.preventDefault();\n        handleOpen();\n      }\n    },\n    'aria-haspopup': 'menu',\n    'aria-expanded': isOpen ? true : undefined,\n    'nativeID': menuTriggerId,\n  };\n};\n\nexport const useMenu = () => {\n  let focusManager = useFocusManager();\n  let onKeyDown = (e: KeyboardEvent) => {\n    switch (e.key) {\n      case 'ArrowDown': {\n        e.preventDefault();\n        focusManager.focusNext({ wrap: true });\n        break;\n      }\n      case 'ArrowUp': {\n        e.preventDefault();\n        focusManager.focusPrevious({ wrap: true });\n        break;\n      }\n    }\n  };\n\n  return {\n    onKeyDown,\n    accessibilityRole: 'menu' as AccessibilityRole,\n  };\n};\n\nexport const useMenuItem = ({\n  textValue,\n  ref,\n}: {\n  textValue: string;\n  ref: any;\n}) => {\n  return {\n    accessibilityRole: 'menuitem' as AccessibilityRole,\n    dataSet: {\n      nativebaseMenuItem: textValue,\n    },\n    onHoverIn: () => {\n      if (ref.current && Platform.OS === 'web') ref.current.focus();\n    },\n  };\n};\n\nexport const useMenuOptionItem = ({\n  isChecked,\n  type,\n}: {\n  isChecked: boolean;\n  type: 'checkbox' | 'radio';\n}) => {\n  return {\n    accessibilityRole: ('menuitem' +\n      (Platform.OS === 'web' ? type : '')) as AccessibilityRole,\n    accessibilityState: {\n      checked: isChecked,\n    },\n    accessibilityChecked: isChecked,\n  };\n};\n\nconst ITEM_ATTR = 'data-nativebase-menu-item';\nconst getValue = (element: Element) => element.getAttribute(ITEM_ATTR) ?? '';\n\nexport const useMenuTypeahead = (props: any): any => {\n  return {\n    onKeyDown(event: KeyboardEvent) {\n      if (props.onKeyDown) {\n        props.onKeyDown(event);\n      }\n\n      if (\n        event.key.length === 1 &&\n        !(event.ctrlKey || event.altKey || event.metaKey)\n      ) {\n        const container = event.currentTarget as HTMLElement;\n        const values = Array.from(\n          container.querySelectorAll(`[${ITEM_ATTR}]`)\n        ).map(getValue);\n\n        const searchKey = event.key;\n\n        const foundValue = values.find((value) =>\n          value.toLowerCase().startsWith(searchKey)\n        );\n        const newItem = container.querySelector(\n          `[${ITEM_ATTR}=\"${foundValue}\"]`\n        );\n\n        if (newItem) {\n          /**\n           * Imperative focus during keydown is risky so we prevent React's batching updates\n           * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n           */\n          setTimeout(() => (newItem as HTMLElement).focus());\n        }\n      }\n    },\n  };\n};\n"]},"metadata":{},"sourceType":"script"}