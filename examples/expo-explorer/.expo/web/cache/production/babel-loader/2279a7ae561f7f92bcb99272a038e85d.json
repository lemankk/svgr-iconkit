{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.getBreadcrumbSeparator=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _react=_interopRequireDefault(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");var _Text=_interopRequireDefault(require(\"../../primitives/Text\"));var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/Breadcrumb/BreadcrumbSeparator.tsx\";var getBreadcrumbSeparator=function getBreadcrumbSeparator(children,separator,props,spacing){var separatorProps={accessibilityRole:_reactNative.Platform.OS==='web'?'presentation':undefined};if(Array.isArray(children)){if(children.length===1){return children;}var separatorElement=separator?typeof separator==='string'?_react.default.createElement(_Text.default,(0,_extends2.default)({},separatorProps,{mx:spacing!=null?spacing:2,__self:_this,__source:{fileName:_jsxFileName,lineNumber:23,columnNumber:9}}),separator):_react.default.cloneElement(separator,(0,_extends2.default)({mx:spacing!=null?spacing:2},separatorProps)):_react.default.createElement(_Text.default,(0,_extends2.default)({mx:spacing!=null?spacing:2},separatorProps,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:33,columnNumber:7}}),'/');var result=[];if(children&&children.length>1){result=children.reduce(function(r,a){return r.concat(a,separatorElement);},[separatorElement]);}result=result.slice(1,-1);return result.map(function(child,index){return _react.default.cloneElement(child,(0,_extends2.default)({_text:(0,_extends2.default)({},props)},props,{key:\"breadcrumb-separator-\"+index}));});}else{return children;}};exports.getBreadcrumbSeparator=getBreadcrumbSeparator;","map":{"version":3,"sources":["BreadcrumbSeparator.tsx"],"names":["getBreadcrumbSeparator","separatorProps","accessibilityRole","Platform","Array","children","separatorElement","separator","spacing","React","mx","result","r","_text","key"],"mappings":"kQAAA,GAAA,CAAA,MAAA,CAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,C,wDAEA,GAAA,CAAA,KAAA,CAAA,sBAAA,CAAA,OAAA,yBAAA,CAAA,C,oJAEO,GAAMA,CAAAA,sBAAsB,CAAtBA,QAAAA,CAAAA,sBAAAA,CAAyB,QAAzBA,CAAyB,SAAzBA,CAAyB,KAAzBA,CAAyB,OAAzBA,CAKR,CACH,GAAIC,CAAAA,cAAc,CAAG,CACnBC,iBAAiB,CAAGC,YAAAA,CAAAA,QAAAA,CAAAA,EAAAA,GAAAA,KAAAA,CAAAA,cAAAA,CADtB,SAAqB,CAArB,CAMA,GAAIC,KAAK,CAALA,OAAAA,CAAJ,QAAIA,CAAJ,CAA6B,CAC3B,GAAIC,QAAQ,CAARA,MAAAA,GAAJ,CAAA,CAA2B,CACzB,MAAA,CAAA,QAAA,CAEF,IAAMC,CAAAA,gBAAgB,CAAGC,SAAS,CAChC,MAAA,CAAA,SAAA,GAAA,QAAA,CACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,KAAA,CAAD,OAAA,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAA,EAAA,CAAA,cAAA,CAAA,CAA0B,EAAE,CAAEC,OAAF,EAAA,IAAEA,CAAF,OAAEA,CAA9B,CAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CADF,SACE,CADF,CAKEC,MAAAA,CAAAA,OAAAA,CAAAA,YAAAA,CAAAA,SAAAA,CAAAA,CAAAA,EAAAA,SAAAA,CAAAA,OAAAA,EAAAA,CACEC,EAAE,CAAEF,OAAF,EAAA,IAAEA,CAAF,OAAEA,CADNC,CAAAA,CAAAA,CAN8B,cAM9BA,CAAAA,CAN8B,CAYhC,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,KAAA,CAAD,OAAA,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAA,CAAM,EAAE,CAAED,OAAF,EAAA,IAAEA,CAAF,OAAEA,CAAV,CAAA,CAAA,CAAA,cAAA,CAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAZF,GAYE,CAZF,CAgBA,GAAIG,CAAAA,MAAW,CAAf,EAAA,CACA,GAAIN,QAAQ,EAAIA,QAAQ,CAARA,MAAAA,CAAhB,CAAA,CAAqC,CACnCM,MAAM,CAAGN,QAAQ,CAARA,MAAAA,CACP,SAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAsBO,CAAAA,CAAC,CAADA,MAAAA,CAAAA,CAAAA,CAAtB,gBAAsBA,CAAtB,CADOP,CAAAA,CAEP,CAFFM,gBAEE,CAFON,CAATM,CAKFA,CAAAA,MAAM,CAAGA,MAAM,CAANA,KAAAA,CAAAA,CAAAA,CAAgB,CAAzBA,CAASA,CAATA,CACA,MAAOA,CAAAA,MAAM,CAANA,GAAAA,CAAW,SAAA,KAAA,CAAA,KAAA,CAA+B,CAC/C,MAAOF,CAAAA,MAAAA,CAAAA,OAAAA,CAAAA,YAAAA,CAAAA,KAAAA,CAAAA,CAAAA,EAAAA,SAAAA,CAAAA,OAAAA,EAAAA,CACLI,KAAK,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAA,EAAA,CADAJ,KACA,CADAA,CAAAA,CAAAA,KAAAA,CAAAA,CAGLK,GAAG,CAAA,wBAHL,KAAOL,CAAAA,CAAAA,CAAP,CADF,CAAOE,CAAP,CA5BF,CAAA,IAmCO,CACL,MAAA,CAAA,QAAA,CAEH,CAlDM,CAAA,C","sourcesContent":["import React from 'react';\nimport { AccessibilityRole, Platform } from 'react-native';\nimport Text from '../../primitives/Text';\n\nexport const getBreadcrumbSeparator = (\n  children: JSX.Element[] | JSX.Element | any,\n  separator: string | JSX.Element | JSX.Element[] | any,\n  props: any,\n  spacing: number | undefined\n) => {\n  let separatorProps = {\n    accessibilityRole: (Platform.OS === 'web'\n      ? 'presentation'\n      : undefined) as AccessibilityRole,\n  };\n\n  if (Array.isArray(children)) {\n    if (children.length === 1) {\n      return children;\n    }\n    const separatorElement = separator ? (\n      typeof separator === 'string' ? (\n        <Text {...separatorProps} mx={spacing ?? 2}>\n          {separator}\n        </Text>\n      ) : (\n        React.cloneElement(separator, {\n          mx: spacing ?? 2,\n          ...separatorProps,\n        })\n      )\n    ) : (\n      <Text mx={spacing ?? 2} {...separatorProps}>\n        {'/'}\n      </Text>\n    );\n    let result: any = [];\n    if (children && children.length > 1) {\n      result = children.reduce(\n        (r: any[], a: any) => r.concat(a, separatorElement),\n        [separatorElement]\n      );\n    }\n    result = result.slice(1, -1);\n    return result.map((child: any, index: number) => {\n      return React.cloneElement(child, {\n        _text: { ...props },\n        ...props,\n        key: `breadcrumb-separator-${index}`,\n      });\n    });\n  } else {\n    return children;\n  }\n};\n"]},"metadata":{},"sourceType":"script"}