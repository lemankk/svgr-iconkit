{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.useContrastText=useContrastText;var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _tinycolor=_interopRequireDefault(require(\"tinycolor2\"));var _useToken3=require(\"./useToken\");var _hooks=require(\"../core/color-mode/hooks\");function useContrastText(bg,color){var _useToken=(0,_useToken3.useToken)('colors',['contrastThreshold','darkText','lightText',bg,color!=null?color:'']),_useToken2=(0,_slicedToArray2.default)(_useToken,5),contrastThreshold=_useToken2[0],trueDarkText=_useToken2[1],trueLightText=_useToken2[2],trueBg=_useToken2[3],trueColor=_useToken2[4];var _useAccessibleColors=(0,_hooks.useAccessibleColors)(),_useAccessibleColors2=(0,_slicedToArray2.default)(_useAccessibleColors,1),accessibleColors=_useAccessibleColors2[0];if(typeof bg!=='string'){return;}var _bg$split=bg.split('.'),_bg$split2=(0,_slicedToArray2.default)(_bg$split,2),bgThemeColorVariant=_bg$split2[0],bgShade=_bg$split2[1];var textColor=!accessibleColors&&bgThemeColorVariant&&themeColorsThresholdShades[bgThemeColorVariant]?getContrastThemeColor(bgThemeColorVariant,bgShade):getAccessibleContrastColor(contrastThreshold,trueDarkText,trueLightText,trueBg,trueColor,bg,color);return textColor;}function getContrastThemeColor(bgThemeColorVariant,bgShade){var shadeThreshold=themeColorsThresholdShades[bgThemeColorVariant];if(bgShade&&shadeThreshold&&(bgShade>=shadeThreshold&&bgThemeColorVariant!=='dark'||bgThemeColorVariant==='dark'&&bgShade<shadeThreshold)){return'lightText';}return'darkText';}function getAccessibleContrastColor(contrastThreshold,trueDarkText,trueLightText,trueBg,trueColor,bg,color){if(typeof trueBg!=='string'){trueBg=bg;}var trueContrastColor;var contrastColorToken;var darkTextConstrast=getContrastRatio(trueBg,trueDarkText);var lightTextConstrast=getContrastRatio(trueBg,trueLightText);if(darkTextConstrast>=contrastThreshold||darkTextConstrast>lightTextConstrast){trueContrastColor=trueDarkText;contrastColorToken='darkText';}else{trueContrastColor=trueLightText;contrastColorToken='lightText';}if(process.env.NODE_ENV!=='production'){var contrast=getContrastRatio(trueBg,trueColor?trueColor:trueContrastColor);if(contrast<3){console.warn([\"NativeBase: The contrast ratio of \"+contrast+\":1 for \"+(color?color:contrastColorToken)+\" on \"+bg,'falls below the WCAG recommended absolute minimum contrast ratio of 3:1.','https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast'].join('\\n'));}}return contrastColorToken;}function getContrastRatio(foreground,background){var lumA=(0,_tinycolor.default)(foreground).getLuminance();var lumB=(0,_tinycolor.default)(background).getLuminance();return(Math.max(lumA,lumB)+0.05)/(Math.min(lumA,lumB)+0.05);}var themeColorsThresholdShades={rose:900,pink:900,fuchsia:800,purple:700,violet:600,indigo:500,blue:400,lightBlue:400,cyan:300,teal:300,emerald:300,green:400,lime:600,yellow:800,amber:900,orange:900,red:900,warmGray:500,trueGray:500,gray:500,coolGray:500,blueGray:500,dark:500,danger:900,error:900,success:400,warning:900,muted:500,primary:500,info:400,secondary:500,light:500};","map":{"version":3,"sources":["useContrastText.ts"],"names":["contrastThreshold","trueDarkText","trueLightText","trueBg","trueColor","color","accessibleColors","bgThemeColorVariant","bgShade","bg","textColor","themeColorsThresholdShades","getContrastThemeColor","getAccessibleContrastColor","shadeThreshold","darkTextConstrast","getContrastRatio","lightTextConstrast","trueContrastColor","contrastColorToken","process","contrast","console","lumA","lumB","Math","rose","pink","fuchsia","purple","violet","indigo","blue","lightBlue","cyan","teal","emerald","green","lime","yellow","amber","orange","red","warmGray","trueGray","gray","coolGray","blueGray","dark","danger","error","success","warning","muted","primary","info","secondary","light"],"mappings":"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","sourcesContent":["import Color from 'tinycolor2';\nimport { useToken } from './useToken';\nimport { useAccessibleColors } from '../core/color-mode/hooks';\n\nexport function useContrastText(bg: string, color?: string) {\n  let [\n    contrastThreshold,\n    trueDarkText,\n    trueLightText,\n    trueBg,\n    trueColor,\n  ] = useToken('colors', [\n    'contrastThreshold',\n    'darkText',\n    'lightText',\n    bg,\n    color ?? '',\n  ]);\n\n  let [accessibleColors] = useAccessibleColors();\n\n  if (typeof bg !== 'string') {\n    return;\n  }\n\n  const [bgThemeColorVariant, bgShade] = bg.split('.');\n\n  const textColor =\n    !accessibleColors &&\n    bgThemeColorVariant &&\n    themeColorsThresholdShades[bgThemeColorVariant]\n      ? getContrastThemeColor(bgThemeColorVariant, bgShade)\n      : getAccessibleContrastColor(\n          contrastThreshold,\n          trueDarkText,\n          trueLightText,\n          trueBg,\n          trueColor,\n          bg,\n          color\n        );\n\n  return textColor;\n}\n\nfunction getContrastThemeColor(bgThemeColorVariant: string, bgShade: string) {\n  let shadeThreshold = themeColorsThresholdShades[bgThemeColorVariant];\n  if (\n    bgShade &&\n    shadeThreshold &&\n    ((bgShade >= shadeThreshold && bgThemeColorVariant !== 'dark') ||\n      (bgThemeColorVariant === 'dark' && bgShade < shadeThreshold))\n  ) {\n    return 'lightText';\n  }\n  return 'darkText';\n}\nfunction getAccessibleContrastColor(\n  contrastThreshold: number,\n  trueDarkText: string,\n  trueLightText: string,\n  trueBg: string,\n  trueColor: string,\n  bg: string,\n  color?: string\n) {\n  if (typeof trueBg !== 'string') {\n    trueBg = bg;\n  }\n  let trueContrastColor;\n  let contrastColorToken;\n  let darkTextConstrast = getContrastRatio(trueBg, trueDarkText);\n  let lightTextConstrast = getContrastRatio(trueBg, trueLightText);\n\n  if (\n    darkTextConstrast >= contrastThreshold ||\n    darkTextConstrast > lightTextConstrast\n  ) {\n    trueContrastColor = trueDarkText;\n    contrastColorToken = 'darkText';\n  } else {\n    trueContrastColor = trueLightText;\n    contrastColorToken = 'lightText';\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    const contrast = getContrastRatio(\n      trueBg,\n      trueColor ? trueColor : trueContrastColor\n    );\n    if (contrast < 3) {\n      console.warn(\n        [\n          `NativeBase: The contrast ratio of ${contrast}:1 for ${\n            color ? color : contrastColorToken\n          } on ${bg}`,\n          'falls below the WCAG recommended absolute minimum contrast ratio of 3:1.',\n          'https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast',\n        ].join('\\n')\n      );\n    }\n  }\n  return contrastColorToken;\n}\nfunction getContrastRatio(foreground: string, background: string) {\n  const lumA = Color(foreground).getLuminance();\n  const lumB = Color(background).getLuminance();\n  return (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);\n}\n\nconst themeColorsThresholdShades: any = {\n  rose: 900,\n  pink: 900,\n  fuchsia: 800,\n  purple: 700,\n  violet: 600,\n  indigo: 500,\n  blue: 400,\n  lightBlue: 400,\n  cyan: 300,\n  teal: 300,\n  emerald: 300,\n  green: 400,\n  lime: 600,\n  yellow: 800,\n  amber: 900,\n  orange: 900,\n  red: 900,\n  warmGray: 500,\n  trueGray: 500,\n  gray: 500,\n  coolGray: 500,\n  blueGray: 500,\n  dark: 500,\n  danger: 900,\n  error: 900,\n  success: 400,\n  warning: 900,\n  muted: 500,\n  primary: 500,\n  info: 400,\n  secondary: 500,\n  light: 500,\n};\n"]},"metadata":{},"sourceType":"script"}