{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.PopoverContent=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _hooks=require(\"../../../hooks\");var _react=_interopRequireDefault(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");var _Popper=require(\"../Popper\");var _PopoverContext=require(\"./PopoverContext\");var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/Popover/PopoverContent.tsx\";var PopoverContent=_react.default.forwardRef(function(props,ref){var _ref,_ref2,_props$bgColor;var _React$useContext=_react.default.useContext(_PopoverContext.PopoverContext),onClose=_React$useContext.onClose,initialFocusRef=_React$useContext.initialFocusRef,finalFocusRef=_React$useContext.finalFocusRef,popoverContentId=_React$useContext.popoverContentId,headerMounted=_React$useContext.headerMounted,bodyMounted=_React$useContext.bodyMounted,bodyId=_React$useContext.bodyId,headerId=_React$useContext.headerId;var newProps=(0,_hooks.usePropsResolution)('PopoverContent',props);var arrowDefaultColor=(_ref=(_ref2=(_props$bgColor=props.bgColor)!=null?_props$bgColor:props.bg)!=null?_ref2:props.backgroundColor)!=null?_ref:newProps.backgroundColor;var color=(0,_hooks.useToken)('colors',arrowDefaultColor);_react.default.useEffect(function(){var finalFocusRefCurrentVal=finalFocusRef==null?void 0:finalFocusRef.current;if(initialFocusRef&&initialFocusRef.current){initialFocusRef.current.focus();}return function(){if(finalFocusRefCurrentVal){finalFocusRefCurrentVal.focus();}};},[finalFocusRef,initialFocusRef]);(0,_hooks.useKeyboardDismissable)({enabled:true,callback:onClose});var arrowElement=null;var restChildren=[];_react.default.Children.forEach(props.children,function(child){if(child.type.displayName==='PopperArrow'){var _child$props$color;arrowElement=_react.default.cloneElement(child,{backgroundColor:(_child$props$color=child.props.color)!=null?_child$props$color:color});}else{restChildren.push(child);}});var accessibilityProps=_reactNative.Platform.OS==='web'?{'accessibilityRole':'dialog','aria-labelledby':headerMounted?headerId:undefined,'aria-describedby':bodyMounted?bodyId:undefined}:{};return _react.default.createElement(_Popper.Popper.Content,(0,_extends2.default)({nativeID:popoverContentId},accessibilityProps,newProps,props,{ref:ref,__self:_this,__source:{fileName:_jsxFileName,lineNumber:73,columnNumber:7}}),arrowElement,restChildren);});exports.PopoverContent=PopoverContent;PopoverContent.displayName='PopoverContent';","map":{"version":3,"sources":["PopoverContent.tsx"],"names":["PopoverContent","React","onClose","initialFocusRef","finalFocusRef","popoverContentId","headerMounted","bodyMounted","bodyId","headerId","PopoverContext","newProps","arrowDefaultColor","props","color","finalFocusRefCurrentVal","enabled","callback","arrowElement","restChildren","child","backgroundColor","accessibilityProps","Platform"],"mappings":"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","sourcesContent":["import {\n  useKeyboardDismissable,\n  usePropsResolution,\n  useToken,\n} from '../../../hooks';\nimport React from 'react';\nimport { Platform } from 'react-native';\nimport type { IPopoverContentProps } from './types';\nimport { Popper } from '../Popper';\nimport { PopoverContext } from './PopoverContext';\n\nexport const PopoverContent = React.forwardRef(\n  (props: IPopoverContentProps, ref: any) => {\n    const {\n      onClose,\n      initialFocusRef,\n      finalFocusRef,\n      popoverContentId,\n      headerMounted,\n      bodyMounted,\n      bodyId,\n      headerId,\n    } = React.useContext(PopoverContext);\n    let newProps = usePropsResolution('PopoverContent', props);\n\n    const arrowDefaultColor =\n      props.bgColor ??\n      props.bg ??\n      props.backgroundColor ??\n      newProps.backgroundColor;\n    const color = useToken('colors', arrowDefaultColor);\n\n    React.useEffect(() => {\n      let finalFocusRefCurrentVal = finalFocusRef?.current;\n      if (initialFocusRef && initialFocusRef.current) {\n        initialFocusRef.current.focus();\n      }\n\n      return () => {\n        if (finalFocusRefCurrentVal) {\n          finalFocusRefCurrentVal.focus();\n        }\n      };\n    }, [finalFocusRef, initialFocusRef]);\n\n    useKeyboardDismissable({\n      enabled: true,\n      callback: onClose,\n    });\n\n    let arrowElement = null;\n    let restChildren: any = [];\n    React.Children.forEach(props.children, (child) => {\n      if (child.type.displayName === 'PopperArrow') {\n        arrowElement = React.cloneElement(child, {\n          backgroundColor: child.props.color ?? color,\n        });\n      } else {\n        restChildren.push(child);\n      }\n    });\n\n    const accessibilityProps =\n      Platform.OS === 'web'\n        ? ({\n            'accessibilityRole': 'dialog',\n            'aria-labelledby': headerMounted ? headerId : undefined,\n            'aria-describedby': bodyMounted ? bodyId : undefined,\n          } as any)\n        : {};\n\n    return (\n      <Popper.Content\n        nativeID={popoverContentId}\n        {...accessibilityProps}\n        {...newProps}\n        {...props}\n        ref={ref}\n      >\n        {arrowElement}\n        {restChildren}\n      </Popper.Content>\n    );\n  }\n);\n\nPopoverContent.displayName = 'PopoverContent';\n"]},"metadata":{},"sourceType":"script"}