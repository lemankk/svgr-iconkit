{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.useThemeProps=useThemeProps;var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _lodash=_interopRequireDefault(require(\"lodash.get\"));var _lodash2=_interopRequireDefault(require(\"lodash.omit\"));var _reactNative=require(\"react-native-web/dist/index\");var _useNativeBase2=require(\"./../useNativeBase\");var _tools=require(\"./../../theme/tools/\");var _filterShadowProps=require(\"./../../utils/filterShadowProps\");var _utils=require(\"./utils\");var filterAndCalculateProps=function filterAndCalculateProps(theme,colorModeProps,componentTheme,propsReceived,windowWidth){var _extractInObject=(0,_tools.extractInObject)(propsReceived,['children','style','onPress','icon','onOpen','onClose']),_extractInObject2=(0,_slicedToArray2.default)(_extractInObject,2),ignoredProps=_extractInObject2[0],props=_extractInObject2[1];var newProps=(0,_utils.calculateProps)(theme,colorModeProps,componentTheme,props,windowWidth);var mergedProps=(0,_filterShadowProps.filterShadowProps)(newProps,ignoredProps,_reactNative.Platform.OS);return(0,_tools.omitUndefined)(mergedProps);};function useThemeProps(component,propsReceived){var _useWindowDimensions;var _useNativeBase=(0,_useNativeBase2.useNativeBase)(),theme=_useNativeBase.theme,colorModeProps=(0,_objectWithoutProperties2.default)(_useNativeBase,[\"theme\"]);var componentTheme=(0,_lodash.default)(theme,\"components.\"+component);var windowWidth=(_useWindowDimensions=(0,_reactNative.useWindowDimensions)())==null?void 0:_useWindowDimensions.width;return filterAndCalculateProps((0,_lodash2.default)(theme,['components']),colorModeProps,componentTheme,propsReceived,windowWidth);}","map":{"version":3,"sources":["useProps.tsx"],"names":["filterAndCalculateProps","ignoredProps","props","newProps","mergedProps","Platform","theme","colorModeProps","componentTheme","windowWidth"],"mappings":"4XAAA,GAAA,CAAA,OAAA,CAAA,sBAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA,CACA,GAAA,CAAA,QAAA,CAAA,sBAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA,C,wDAEA,GAAA,CAAA,eAAA,CAAA,OAAA,sBAAA,CACA,GAAA,CAAA,MAAA,CAAA,OAAA,wBAAA,CACA,GAAA,CAAA,kBAAA,CAAA,OAAA,mCAAA,CACA,GAAA,CAAA,MAAA,CAAA,OAAA,WAAA,CAEA,GAAMA,CAAAA,uBAAuB,CAAvBA,QAAAA,CAAAA,uBAAAA,CAA0B,KAA1BA,CAA0B,cAA1BA,CAA0B,cAA1BA,CAA0B,aAA1BA,CAA0B,WAA1BA,CAMD,CAAA,GAAA,CAAA,gBAAA,CAIyB,CAAA,EAAA,MAAA,CAAA,eAAA,EAAA,aAAA,CAA+B,CAAA,UAAA,CAAA,OAAA,CAAA,SAAA,CAAA,MAAA,CAAA,QAAA,CAJxD,SAIwD,CAA/B,CAJzB,CAAA,iBAAA,CAAA,CAAA,EAAA,eAAA,CAAA,OAAA,EAAA,gBAAA,CAAA,CAAA,CAAA,CAIEC,YAJF,CAAA,iBAAA,CAAA,CAAA,CAAA,CAIgBC,KAJhB,CAAA,iBAAA,CAAA,CAAA,CAAA,CAYH,GAAIC,CAAAA,QAAQ,CAAG,CAAA,EAAA,MAAA,CAAA,cAAA,EAAA,KAAA,CAAA,cAAA,CAAA,cAAA,CAAA,KAAA,CAAf,WAAe,CAAf,CAOA,GAAIC,CAAAA,WAAW,CAAG,CAAA,EAAA,kBAAA,CAAA,iBAAA,EAAA,QAAA,CAAA,YAAA,CAA0CC,YAAAA,CAAAA,QAAAA,CAA5D,EAAkB,CAAlB,CACA,MAAO,CAAA,EAAA,MAAA,CAAA,aAAA,EAAP,WAAO,CAAP,CA1BF,CAAA,CA6BO,QAAA,CAAA,aAAA,CAAA,SAAA,CAAA,aAAA,CAA8D,CAAA,GAAA,CAAA,oBAAA,CAAA,GAAA,CAAA,cAAA,CAC9B,CAAA,EAAA,eAAA,CAD8B,aAC9B,GAD8B,CAC3DC,KAD2D,CAAA,cAAA,CAAA,KAAA,CACjDC,cADiD,CAAA,CAAA,EAAA,yBAAA,CAAA,OAAA,EAAA,cAAA,CAAA,CAAA,OAAA,CAAA,CAAA,CAInE,GAAMC,CAAAA,cAAc,CAAG,CAAA,EAAA,OAAA,CAAA,OAAA,EAAA,KAAA,CAAA,cAAvB,SAAuB,CAAvB,CAEA,GAAMC,CAAAA,WAAW,CAAA,CAAA,oBAAA,CAAG,CAAA,EAAA,YAAA,CAAH,mBAAG,GAAH,GAAA,IAAA,CAAA,IAAA,EAAA,CAAG,oBAAA,CAApB,KAAA,CAGA,MAAOT,CAAAA,uBAAuB,CAC5B,CAAA,EAAA,QAAA,CAAA,OAAA,EAAA,KAAA,CAAY,CADgB,YAChB,CAAZ,CAD4B,CAAA,cAAA,CAAA,cAAA,CAAA,aAAA,CAA9B,WAA8B,CAA9B,CAOD","sourcesContent":["import get from 'lodash.get';\nimport omit from 'lodash.omit';\nimport { useWindowDimensions, Platform } from 'react-native';\nimport { useNativeBase } from './../useNativeBase';\nimport { omitUndefined, extractInObject } from './../../theme/tools/';\nimport { filterShadowProps } from './../../utils/filterShadowProps';\nimport { calculateProps } from './utils';\n\nconst filterAndCalculateProps = (\n  theme: any,\n  colorModeProps: any,\n  componentTheme: any,\n  propsReceived: any,\n  windowWidth: any\n) => {\n  // Extracting out children and style, as they do not contribute in props calculation\n  // This is done as these props are passed as it is later in the development\n  // Required as some of these will trigger cyclic computation which may lead to error\n  let [ignoredProps, props] = extractInObject(propsReceived, [\n    'children',\n    'style',\n    'onPress',\n    'icon',\n    'onOpen',\n    'onClose',\n  ]);\n  let newProps = calculateProps(\n    theme,\n    colorModeProps,\n    componentTheme,\n    props,\n    windowWidth\n  );\n  let mergedProps = filterShadowProps(newProps, ignoredProps, Platform.OS);\n  return omitUndefined(mergedProps);\n};\n\nexport function useThemeProps(component: string, propsReceived: any) {\n  const { theme, ...colorModeProps } = useNativeBase();\n  // console.log('THEME = ', theme);\n\n  const componentTheme = get(theme, `components.${component}`);\n  // console.log('COMPONENT THEME = ', componentTheme);\n  const windowWidth = useWindowDimensions()?.width;\n\n  // To pass the component theme props and component props seperately\n  return filterAndCalculateProps(\n    omit(theme, ['components']),\n    colorModeProps,\n    componentTheme,\n    propsReceived,\n    windowWidth\n  );\n}\n"]},"metadata":{},"sourceType":"script"}