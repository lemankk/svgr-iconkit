{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import{useLocale,useCollator}from\"@react-aria/i18n\";import{focusWithoutScrolling,isMac,mergeProps}from\"@react-aria/utils\";import{focusSafely,getFocusableTreeWalker}from\"@react-aria/focus\";import{useEffect,useRef,useMemo}from\"react\";import _babelRuntimeHelpersEsmExtends from\"@babel/runtime/helpers/esm/extends\";export function useTypeSelect(options){var keyboardDelegate=options.keyboardDelegate,selectionManager=options.selectionManager,onTypeSelect=options.onTypeSelect;var state=useRef({search:'',timeout:null}).current;var onKeyDown=function onKeyDown(e){var character=$c78d7fa5f7d5832f9b4f97b33a679865$var$getStringForKey(e.key);if(!character||e.ctrlKey||e.metaKey){return;}if(character===' '&&state.search.trim().length>0){e.preventDefault();if(!('continuePropagation'in e)){e.stopPropagation();}}state.search+=character;var key=keyboardDelegate.getKeyForSearch(state.search,selectionManager.focusedKey);if(key==null){key=keyboardDelegate.getKeyForSearch(state.search);}if(key!=null){selectionManager.setFocusedKey(key);if(onTypeSelect){onTypeSelect(key);}}clearTimeout(state.timeout);state.timeout=setTimeout(function(){state.search='';},500);};return{typeSelectProps:{onKeyDownCapture:keyboardDelegate.getKeyForSearch?onKeyDown:null}};}function $c78d7fa5f7d5832f9b4f97b33a679865$var$getStringForKey(key){if(key.length===1||!/^[A-Z]/i.test(key)){return key;}return'';}function $a9b9aa71af07c56ab1d89ca45381f4b$var$isCtrlKeyPressed(e){if(isMac()){return e.metaKey;}return e.ctrlKey;}export function useSelectableCollection(options){var manager=options.selectionManager,delegate=options.keyboardDelegate,ref=options.ref,_options$autoFocus=options.autoFocus,autoFocus=_options$autoFocus===void 0?false:_options$autoFocus,_options$shouldFocusW=options.shouldFocusWrap,shouldFocusWrap=_options$shouldFocusW===void 0?false:_options$shouldFocusW,_options$disallowEmpt=options.disallowEmptySelection,disallowEmptySelection=_options$disallowEmpt===void 0?false:_options$disallowEmpt,_options$disallowSele=options.disallowSelectAll,disallowSelectAll=_options$disallowSele===void 0?false:_options$disallowSele,_options$selectOnFocu=options.selectOnFocus,selectOnFocus=_options$selectOnFocu===void 0?false:_options$selectOnFocu,_options$disallowType=options.disallowTypeAhead,disallowTypeAhead=_options$disallowType===void 0?false:_options$disallowType,shouldUseVirtualFocus=options.shouldUseVirtualFocus,_options$allowsTabNav=options.allowsTabNavigation,allowsTabNavigation=_options$allowsTabNav===void 0?false:_options$allowsTabNav;var _useLocale=useLocale(),direction=_useLocale.direction;var onKeyDown=function onKeyDown(e){if(e.altKey||!ref.current.contains(e.target)){return;}var navigateToKey=function navigateToKey(key,childFocus){if(key!=null){manager.setFocusedKey(key,childFocus);if(e.shiftKey&&manager.selectionMode==='multiple'){manager.extendSelection(key);}else if(selectOnFocus){manager.replaceSelection(key);}}};switch(e.key){case'ArrowDown':{if(delegate.getKeyBelow){e.preventDefault();var nextKey=manager.focusedKey!=null?delegate.getKeyBelow(manager.focusedKey):delegate.getFirstKey==null?void 0:delegate.getFirstKey();if(nextKey==null&&shouldFocusWrap){nextKey=delegate.getFirstKey==null?void 0:delegate.getFirstKey(manager.focusedKey);}navigateToKey(nextKey);}break;}case'ArrowUp':{if(delegate.getKeyAbove){e.preventDefault();var _nextKey=manager.focusedKey!=null?delegate.getKeyAbove(manager.focusedKey):delegate.getLastKey==null?void 0:delegate.getLastKey();if(_nextKey==null&&shouldFocusWrap){_nextKey=delegate.getLastKey==null?void 0:delegate.getLastKey(manager.focusedKey);}navigateToKey(_nextKey);}break;}case'ArrowLeft':{if(delegate.getKeyLeftOf){e.preventDefault();var _nextKey2=delegate.getKeyLeftOf(manager.focusedKey);navigateToKey(_nextKey2,direction==='rtl'?'first':'last');}break;}case'ArrowRight':{if(delegate.getKeyRightOf){e.preventDefault();var _nextKey3=delegate.getKeyRightOf(manager.focusedKey);navigateToKey(_nextKey3,direction==='rtl'?'last':'first');}break;}case'Home':if(delegate.getFirstKey){e.preventDefault();var firstKey=delegate.getFirstKey(manager.focusedKey,$a9b9aa71af07c56ab1d89ca45381f4b$var$isCtrlKeyPressed(e));manager.setFocusedKey(firstKey);if($a9b9aa71af07c56ab1d89ca45381f4b$var$isCtrlKeyPressed(e)&&e.shiftKey&&manager.selectionMode==='multiple'){manager.extendSelection(firstKey);}else if(selectOnFocus){manager.replaceSelection(firstKey);}}break;case'End':if(delegate.getLastKey){e.preventDefault();var lastKey=delegate.getLastKey(manager.focusedKey,$a9b9aa71af07c56ab1d89ca45381f4b$var$isCtrlKeyPressed(e));manager.setFocusedKey(lastKey);if($a9b9aa71af07c56ab1d89ca45381f4b$var$isCtrlKeyPressed(e)&&e.shiftKey&&manager.selectionMode==='multiple'){manager.extendSelection(lastKey);}else if(selectOnFocus){manager.replaceSelection(lastKey);}}break;case'PageDown':if(delegate.getKeyPageBelow){e.preventDefault();var _nextKey4=delegate.getKeyPageBelow(manager.focusedKey);navigateToKey(_nextKey4);}break;case'PageUp':if(delegate.getKeyPageAbove){e.preventDefault();var _nextKey5=delegate.getKeyPageAbove(manager.focusedKey);navigateToKey(_nextKey5);}break;case'a':if($a9b9aa71af07c56ab1d89ca45381f4b$var$isCtrlKeyPressed(e)&&manager.selectionMode==='multiple'&&disallowSelectAll!==true){e.preventDefault();manager.selectAll();}break;case'Escape':e.preventDefault();if(!disallowEmptySelection){manager.clearSelection();}break;case'Tab':{if(!allowsTabNavigation){if(e.shiftKey){ref.current.focus();}else{var walker=getFocusableTreeWalker(ref.current,{tabbable:true});var next;var last;do{last=walker.lastChild();if(last){next=last;}}while(last);if(next&&!next.contains(document.activeElement)){focusWithoutScrolling(next);}}break;}}}};var onFocus=function onFocus(e){if(manager.isFocused){if(!e.currentTarget.contains(e.target)){manager.setFocused(false);}return;}if(!e.currentTarget.contains(e.target)){return;}manager.setFocused(true);if(manager.focusedKey==null){var relatedTarget=e.relatedTarget;if(relatedTarget&&e.currentTarget.compareDocumentPosition(relatedTarget)&Node.DOCUMENT_POSITION_FOLLOWING){var _manager$lastSelected;manager.setFocusedKey((_manager$lastSelected=manager.lastSelectedKey)!=null?_manager$lastSelected:delegate.getLastKey());}else{var _manager$firstSelecte;manager.setFocusedKey((_manager$firstSelecte=manager.firstSelectedKey)!=null?_manager$firstSelecte:delegate.getFirstKey());}}};var onBlur=function onBlur(e){if(!e.currentTarget.contains(e.relatedTarget)){manager.setFocused(false);}};useEffect(function(){if(autoFocus){var focusedKey=null;if(autoFocus==='first'){focusedKey=delegate.getFirstKey();}if(autoFocus==='last'){focusedKey=delegate.getLastKey();}var selectedKeys=manager.selectedKeys;if(selectedKeys.size){focusedKey=selectedKeys.values().next().value;}manager.setFocused(true);manager.setFocusedKey(focusedKey);if(focusedKey==null&&!shouldUseVirtualFocus){focusSafely(ref.current);}}},[]);var handlers={onKeyDown:onKeyDown,onFocus:onFocus,onBlur:onBlur,onMouseDown:function onMouseDown(e){if(e.currentTarget.contains(e.target)){e.preventDefault();}}};var _useTypeSelect=useTypeSelect({keyboardDelegate:delegate,selectionManager:manager}),typeSelectProps=_useTypeSelect.typeSelectProps;if(!disallowTypeAhead){handlers=mergeProps(typeSelectProps,handlers);}var tabIndex;if(!shouldUseVirtualFocus){tabIndex=manager.focusedKey==null?0:-1;}return{collectionProps:_babelRuntimeHelpersEsmExtends({},handlers,{tabIndex:tabIndex})};}export function useSelectableItem(options){var manager=options.selectionManager,key=options.key,ref=options.ref,shouldSelectOnPressUp=options.shouldSelectOnPressUp,isVirtualized=options.isVirtualized,shouldUseVirtualFocus=options.shouldUseVirtualFocus,focus=options.focus;var onSelect=function onSelect(e){return manager.select(key,e);};var isFocused=key===manager.focusedKey;useEffect(function(){if(isFocused&&manager.isFocused&&!shouldUseVirtualFocus&&document.activeElement!==ref.current){if(focus){focus();}else{focusSafely(ref.current);}}},[ref,isFocused,manager.focusedKey,manager.childFocusStrategy,manager.isFocused,shouldUseVirtualFocus]);var itemProps={};if(!shouldUseVirtualFocus){itemProps={tabIndex:isFocused?0:-1,onFocus:function onFocus(e){if(e.target===ref.current){manager.setFocusedKey(key);}}};}if(shouldSelectOnPressUp){itemProps.onPressStart=function(e){if(e.pointerType==='keyboard'){onSelect(e);}};itemProps.onPressUp=function(e){if(e.pointerType!=='keyboard'){onSelect(e);}};}else{itemProps.onPressStart=function(e){if(e.pointerType!=='touch'){onSelect(e);}};itemProps.onPress=function(e){if(e.pointerType==='touch'){onSelect(e);}};}if(!isVirtualized){itemProps['data-key']=key;}return{itemProps:itemProps};}export var ListKeyboardDelegate=function(){function ListKeyboardDelegate(collection,disabledKeys,ref,collator){_classCallCheck(this,ListKeyboardDelegate);this.collection=void 0;this.disabledKeys=void 0;this.ref=void 0;this.collator=void 0;this.collection=collection;this.disabledKeys=disabledKeys;this.ref=ref;this.collator=collator;}_createClass(ListKeyboardDelegate,[{key:\"getKeyBelow\",value:function getKeyBelow(key){key=this.collection.getKeyAfter(key);while(key!=null){var item=this.collection.getItem(key);if(item.type==='item'&&!this.disabledKeys.has(key)){return key;}key=this.collection.getKeyAfter(key);}}},{key:\"getKeyAbove\",value:function getKeyAbove(key){key=this.collection.getKeyBefore(key);while(key!=null){var item=this.collection.getItem(key);if(item.type==='item'&&!this.disabledKeys.has(key)){return key;}key=this.collection.getKeyBefore(key);}}},{key:\"getFirstKey\",value:function getFirstKey(){var key=this.collection.getFirstKey();while(key!=null){var item=this.collection.getItem(key);if(item.type==='item'&&!this.disabledKeys.has(key)){return key;}key=this.collection.getKeyAfter(key);}}},{key:\"getLastKey\",value:function getLastKey(){var key=this.collection.getLastKey();while(key!=null){var item=this.collection.getItem(key);if(item.type==='item'&&!this.disabledKeys.has(key)){return key;}key=this.collection.getKeyBefore(key);}}},{key:\"getItem\",value:function getItem(key){return this.ref.current.querySelector(\"[data-key=\\\"\"+key+\"\\\"]\");}},{key:\"getKeyPageAbove\",value:function getKeyPageAbove(key){var menu=this.ref.current;var item=this.getItem(key);if(!item){return null;}var pageY=Math.max(0,item.offsetTop+item.offsetHeight-menu.offsetHeight);while(item&&item.offsetTop>pageY){key=this.getKeyAbove(key);item=this.getItem(key);}return key;}},{key:\"getKeyPageBelow\",value:function getKeyPageBelow(key){var menu=this.ref.current;var item=this.getItem(key);if(!item){return null;}var pageY=Math.min(menu.scrollHeight,item.offsetTop-item.offsetHeight+menu.offsetHeight);while(item&&item.offsetTop<pageY){key=this.getKeyBelow(key);item=this.getItem(key);}return key;}},{key:\"getKeyForSearch\",value:function getKeyForSearch(search,fromKey){if(!this.collator){return null;}var collection=this.collection;var key=fromKey||this.getFirstKey();while(key!=null){var item=collection.getItem(key);var substring=item.textValue.slice(0,search.length);if(item.textValue&&this.collator.compare(substring,search)===0){return key;}key=this.getKeyBelow(key);}return null;}}]);return ListKeyboardDelegate;}();export function useSelectableList(props){var selectionManager=props.selectionManager,collection=props.collection,disabledKeys=props.disabledKeys,ref=props.ref,keyboardDelegate=props.keyboardDelegate,autoFocus=props.autoFocus,shouldFocusWrap=props.shouldFocusWrap,isVirtualized=props.isVirtualized,disallowEmptySelection=props.disallowEmptySelection,_props$selectOnFocus=props.selectOnFocus,selectOnFocus=_props$selectOnFocus===void 0?false:_props$selectOnFocus,disallowTypeAhead=props.disallowTypeAhead,shouldUseVirtualFocus=props.shouldUseVirtualFocus,allowsTabNavigation=props.allowsTabNavigation;var collator=useCollator({usage:'search',sensitivity:'base'});var delegate=useMemo(function(){return keyboardDelegate||new ListKeyboardDelegate(collection,disabledKeys,ref,collator);},[keyboardDelegate,collection,disabledKeys,ref,collator]);useEffect(function(){if(!isVirtualized&&selectionManager.focusedKey&&ref!=null&&ref.current){var element=ref.current.querySelector(\"[data-key=\\\"\"+selectionManager.focusedKey+\"\\\"]\");if(element){$a09ba753e08b703267f2392f7fc8e96$var$scrollIntoView(ref.current,element);}}},[isVirtualized,ref,selectionManager.focusedKey]);var _useSelectableCollect=useSelectableCollection({ref:ref,selectionManager:selectionManager,keyboardDelegate:delegate,autoFocus:autoFocus,shouldFocusWrap:shouldFocusWrap,disallowEmptySelection:disallowEmptySelection,selectOnFocus:selectOnFocus,disallowTypeAhead:disallowTypeAhead,shouldUseVirtualFocus:shouldUseVirtualFocus,allowsTabNavigation:allowsTabNavigation}),collectionProps=_useSelectableCollect.collectionProps;return{listProps:collectionProps};}function $a09ba753e08b703267f2392f7fc8e96$var$scrollIntoView(scrollView,element){var offsetX=$a09ba753e08b703267f2392f7fc8e96$var$relativeOffset(scrollView,element,'left');var offsetY=$a09ba753e08b703267f2392f7fc8e96$var$relativeOffset(scrollView,element,'top');var width=element.offsetWidth;var height=element.offsetHeight;var x=scrollView.scrollLeft;var y=scrollView.scrollTop;var maxX=x+scrollView.offsetWidth;var maxY=y+scrollView.offsetHeight;if(offsetX<=x){x=offsetX;}else if(offsetX+width>maxX){x+=offsetX+width-maxX;}if(offsetY<=y){y=offsetY;}else if(offsetY+height>maxY){y+=offsetY+height-maxY;}scrollView.scrollLeft=x;scrollView.scrollTop=y;}function $a09ba753e08b703267f2392f7fc8e96$var$relativeOffset(ancestor,child,axis){var prop=axis==='left'?'offsetLeft':'offsetTop';var sum=0;while(child.offsetParent){sum+=child[prop];if(child.offsetParent===ancestor){break;}else if(child.offsetParent.contains(ancestor)){sum-=ancestor[prop];break;}child=child.offsetParent;}return sum;}","map":{"version":3,"sources":["packages/@react-aria/selection/src/useTypeSelect.ts","packages/@react-aria/selection/src/useSelectableCollection.ts","packages/@react-aria/selection/src/useSelectableItem.ts","packages/@react-aria/selection/src/ListKeyboardDelegate.ts","packages/@react-aria/selection/src/useSelectableList.ts"],"names":["onTypeSelect","state","search","timeout","onKeyDown","e","character","getStringForKey","key","keyboardDelegate","selectionManager","clearTimeout","setTimeout","typeSelectProps","onKeyDownCapture","isMac","autoFocus","shouldFocusWrap","disallowEmptySelection","disallowSelectAll","selectOnFocus","disallowTypeAhead","allowsTabNavigation","direction","useLocale","ref","navigateToKey","manager","delegate","nextKey","firstKey","isCtrlKeyPressed","lastKey","walker","getFocusableTreeWalker","tabbable","last","next","document","focusWithoutScrolling","onFocus","relatedTarget","Node","onBlur","useEffect","focusedKey","selectedKeys","focusSafely","handlers","onMouseDown","mergeProps","tabIndex","collectionProps","focus","onSelect","isFocused","itemProps","collection","disabledKeys","collator","constructor","getKeyBelow","item","getKeyAbove","getFirstKey","getLastKey","getKeyPageAbove","menu","pageY","Math","getKeyPageBelow","getKeyForSearch","fromKey","substring","useCollator","usage","sensitivity","useMemo","element","scrollIntoView","shouldUseVirtualFocus","listProps","offsetX","relativeOffset","offsetY","width","height","x","scrollView","y","maxX","maxY","prop","axis","sum","child","ancestor"],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {HTMLAttributes, Key, KeyboardEvent, useRef} from 'react';\nimport {KeyboardDelegate} from '@react-types/shared';\nimport {MultipleSelectionManager} from '@react-stately/selection';\n\ninterface TypeSelectOptions {\n  /**\n   * A delegate that returns collection item keys with respect to visual layout.\n   */\n  keyboardDelegate: KeyboardDelegate,\n  /**\n   * An interface for reading and updating multiple selection state.\n   */\n  selectionManager: MultipleSelectionManager,\n  /**\n   * Called when an item is focused by typing.\n   */\n  onTypeSelect?: (key: Key) => void\n}\n\ninterface TypeSelectAria {\n  /**\n   * Props to be spread on the owner of the options.\n   */\n  typeSelectProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Handles typeahead interactions with collections.\n */\nexport function useTypeSelect(options: TypeSelectOptions): TypeSelectAria {\n  let {keyboardDelegate, selectionManager, onTypeSelect} = options;\n  let state = useRef({\n    search: '',\n    timeout: null\n  }).current;\n\n  let onKeyDown = (e: KeyboardEvent) => {\n    let character = getStringForKey(e.key);\n    if (!character || e.ctrlKey || e.metaKey) {\n      return;\n    }\n\n    // Do not propagate the Spacebar event if it's meant to be part of the search.\n    // When we time out, the search term becomes empty, hence the check on length.\n    // Trimming is to account for the case of pressing the Spacebar more than once,\n    // which should cycle through the selection/deselection of the focused item.\n    if (character === ' ' && state.search.trim().length > 0) {\n      e.preventDefault();\n      if (!('continuePropagation' in e)) {\n        e.stopPropagation();\n      }\n    }\n\n    state.search += character;\n\n    // Use the delegate to find a key to focus.\n    // Prioritize items after the currently focused item, falling back to searching the whole list.\n    let key = keyboardDelegate.getKeyForSearch(state.search, selectionManager.focusedKey);\n\n    // If no key found, search from the top.\n    if (key == null) {\n      key = keyboardDelegate.getKeyForSearch(state.search);\n    }\n\n    if (key != null) {\n      selectionManager.setFocusedKey(key);\n      if (onTypeSelect) {\n        onTypeSelect(key);\n      }\n    }\n\n    clearTimeout(state.timeout);\n    state.timeout = setTimeout(() => {\n      state.search = '';\n    }, 500);\n  };\n\n  return {\n    typeSelectProps: {\n      // Using a capturing listener to catch the keydown event before\n      // other hooks in order to handle the Spacebar event.\n      onKeyDownCapture: keyboardDelegate.getKeyForSearch ? onKeyDown : null\n    }\n  };\n}\n\nfunction getStringForKey(key: string) {\n  // If the key is of length 1, it is an ASCII value.\n  // Otherwise, if there are no ASCII characters in the key name,\n  // it is a Unicode character.\n  // See https://www.w3.org/TR/uievents-key/\n  if (key.length === 1 || !/^[A-Z]/i.test(key)) {\n    return key;\n  }\n\n  return '';\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusEvent, HTMLAttributes, Key, KeyboardEvent, RefObject, useEffect} from 'react';\nimport {focusSafely, getFocusableTreeWalker} from '@react-aria/focus';\nimport {FocusStrategy, KeyboardDelegate} from '@react-types/shared';\nimport {focusWithoutScrolling, isMac, mergeProps} from '@react-aria/utils';\nimport {MultipleSelectionManager} from '@react-stately/selection';\nimport {useLocale} from '@react-aria/i18n';\nimport {useTypeSelect} from './useTypeSelect';\n\nfunction isCtrlKeyPressed(e: KeyboardEvent) {\n  if (isMac()) {\n    return e.metaKey;\n  }\n\n  return e.ctrlKey;\n}\n\ninterface SelectableCollectionOptions {\n  /**\n   * An interface for reading and updating multiple selection state.\n   */\n  selectionManager: MultipleSelectionManager,\n  /**\n   * A delegate object that implements behavior for keyboard focus movement.\n   */\n  keyboardDelegate: KeyboardDelegate,\n  /**\n   * The ref attached to the element representing the collection.\n   */\n  ref: RefObject<HTMLElement>,\n  /**\n   * Whether the collection or one of its items should be automatically focused upon render.\n   * @default false\n   */\n  autoFocus?: boolean | FocusStrategy,\n  /**\n   * Whether focus should wrap around when the end/start is reached.\n   * @default false\n   */\n  shouldFocusWrap?: boolean,\n  /**\n   * Whether the collection allows empty selection.\n   * @default false\n   */\n  disallowEmptySelection?: boolean,\n  /**\n   * Whether the collection allows the user to select all items via keyboard shortcut.\n   * @default false\n   */\n  disallowSelectAll?: boolean,\n  /**\n   * Whether selection should occur automatically on focus.\n   * @default false\n   */\n  selectOnFocus?: boolean,\n  /**\n   * Whether typeahead is disabled.\n   * @default false\n   */\n  disallowTypeAhead?: boolean,\n  /**\n   * Whether the collection items should use virtual focus instead of being focused directly.\n   */\n  shouldUseVirtualFocus?: boolean,\n  /**\n   * Whether navigation through tab key is enabled.\n   */\n  allowsTabNavigation?: boolean\n}\n\ninterface SelectableCollectionAria {\n  /** Props for the collection element. */\n  collectionProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Handles interactions with selectable collections.\n */\nexport function useSelectableCollection(options: SelectableCollectionOptions): SelectableCollectionAria {\n  let {\n    selectionManager: manager,\n    keyboardDelegate: delegate,\n    ref,\n    autoFocus = false,\n    shouldFocusWrap = false,\n    disallowEmptySelection = false,\n    disallowSelectAll = false,\n    selectOnFocus = false,\n    disallowTypeAhead = false,\n    shouldUseVirtualFocus,\n    allowsTabNavigation = false\n  } = options;\n  let {direction} = useLocale();\n\n  let onKeyDown = (e: KeyboardEvent) => {\n    // Let child element (e.g. menu button) handle the event if the Alt key is pressed.\n    // Keyboard events bubble through portals. Don't handle keyboard events\n    // for elements outside the collection (e.g. menus).\n    if (e.altKey || !ref.current.contains(e.target as HTMLElement)) {\n      return;\n    }\n\n    const navigateToKey = (key: Key | undefined, childFocus?: FocusStrategy) => {\n      if (key != null) {\n        manager.setFocusedKey(key, childFocus);\n\n        if (e.shiftKey && manager.selectionMode === 'multiple') {\n          manager.extendSelection(key);\n        } else if (selectOnFocus) {\n          manager.replaceSelection(key);\n        }\n      }\n    };\n\n    switch (e.key) {\n      case 'ArrowDown': {\n        if (delegate.getKeyBelow) {\n          e.preventDefault();\n          let nextKey = manager.focusedKey != null\n              ? delegate.getKeyBelow(manager.focusedKey)\n              : delegate.getFirstKey?.();\n          if (nextKey == null && shouldFocusWrap) {\n            nextKey = delegate.getFirstKey?.(manager.focusedKey);\n          }\n          navigateToKey(nextKey);\n        }\n        break;\n      }\n      case 'ArrowUp': {\n        if (delegate.getKeyAbove) {\n          e.preventDefault();\n          let nextKey = manager.focusedKey != null\n              ? delegate.getKeyAbove(manager.focusedKey)\n              : delegate.getLastKey?.();\n          if (nextKey == null && shouldFocusWrap) {\n            nextKey = delegate.getLastKey?.(manager.focusedKey);\n          }\n          navigateToKey(nextKey);\n        }\n        break;\n      }\n      case 'ArrowLeft': {\n        if (delegate.getKeyLeftOf) {\n          e.preventDefault();\n          let nextKey = delegate.getKeyLeftOf(manager.focusedKey);\n          navigateToKey(nextKey, direction === 'rtl' ? 'first' : 'last');\n        }\n        break;\n      }\n      case 'ArrowRight': {\n        if (delegate.getKeyRightOf) {\n          e.preventDefault();\n          let nextKey = delegate.getKeyRightOf(manager.focusedKey);\n          navigateToKey(nextKey, direction === 'rtl' ? 'last' : 'first');\n        }\n        break;\n      }\n      case 'Home':\n        if (delegate.getFirstKey) {\n          e.preventDefault();\n          let firstKey = delegate.getFirstKey(manager.focusedKey, isCtrlKeyPressed(e));\n          manager.setFocusedKey(firstKey);\n          if (isCtrlKeyPressed(e) && e.shiftKey && manager.selectionMode === 'multiple') {\n            manager.extendSelection(firstKey);\n          } else if (selectOnFocus) {\n            manager.replaceSelection(firstKey);\n          }\n        }\n        break;\n      case 'End':\n        if (delegate.getLastKey) {\n          e.preventDefault();\n          let lastKey = delegate.getLastKey(manager.focusedKey, isCtrlKeyPressed(e));\n          manager.setFocusedKey(lastKey);\n          if (isCtrlKeyPressed(e) && e.shiftKey && manager.selectionMode === 'multiple') {\n            manager.extendSelection(lastKey);\n          } else if (selectOnFocus) {\n            manager.replaceSelection(lastKey);\n          }\n        }\n        break;\n      case 'PageDown':\n        if (delegate.getKeyPageBelow) {\n          e.preventDefault();\n          let nextKey = delegate.getKeyPageBelow(manager.focusedKey);\n          navigateToKey(nextKey);\n        }\n        break;\n      case 'PageUp':\n        if (delegate.getKeyPageAbove) {\n          e.preventDefault();\n          let nextKey = delegate.getKeyPageAbove(manager.focusedKey);\n          navigateToKey(nextKey);\n        }\n        break;\n      case 'a':\n        if (isCtrlKeyPressed(e) && manager.selectionMode === 'multiple' && disallowSelectAll !== true) {\n          e.preventDefault();\n          manager.selectAll();\n        }\n        break;\n      case 'Escape':\n        e.preventDefault();\n        if (!disallowEmptySelection) {\n          manager.clearSelection();\n        }\n        break;\n      case 'Tab': {\n        if (!allowsTabNavigation) {\n          // There may be elements that are \"tabbable\" inside a collection (e.g. in a grid cell).\n          // However, collections should be treated as a single tab stop, with arrow key navigation internally.\n          // We don't control the rendering of these, so we can't override the tabIndex to prevent tabbing.\n          // Instead, we handle the Tab key, and move focus manually to the first/last tabbable element\n          // in the collection, so that the browser default behavior will apply starting from that element\n          // rather than the currently focused one.\n          if (e.shiftKey) {\n            ref.current.focus();\n          } else {\n            let walker = getFocusableTreeWalker(ref.current, {tabbable: true});\n            let next: HTMLElement;\n            let last: HTMLElement;\n            do {\n              last = walker.lastChild() as HTMLElement;\n              if (last) {\n                next = last;\n              }\n            } while (last);\n\n            if (next && !next.contains(document.activeElement)) {\n              focusWithoutScrolling(next);\n            }\n          }\n          break;\n        }\n      }\n    }\n  };\n\n  let onFocus = (e: FocusEvent) => {\n    if (manager.isFocused) {\n      // If a focus event bubbled through a portal, reset focus state.\n      if (!e.currentTarget.contains(e.target)) {\n        manager.setFocused(false);\n      }\n\n      return;\n    }\n\n    // Focus events can bubble through portals. Ignore these events.\n    if (!e.currentTarget.contains(e.target)) {\n      return;\n    }\n\n    manager.setFocused(true);\n\n    if (manager.focusedKey == null) {\n      // If the user hasn't yet interacted with the collection, there will be no focusedKey set.\n      // Attempt to detect whether the user is tabbing forward or backward into the collection\n      // and either focus the first or last item accordingly.\n      let relatedTarget = e.relatedTarget as Element;\n      if (relatedTarget && (e.currentTarget.compareDocumentPosition(relatedTarget) & Node.DOCUMENT_POSITION_FOLLOWING)) {\n        manager.setFocusedKey(manager.lastSelectedKey ?? delegate.getLastKey());\n      } else {\n        manager.setFocusedKey(manager.firstSelectedKey ?? delegate.getFirstKey());\n      }\n    }\n  };\n\n  let onBlur = (e) => {\n    // Don't set blurred and then focused again if moving focus within the collection.\n    if (!e.currentTarget.contains(e.relatedTarget as HTMLElement)) {\n      manager.setFocused(false);\n    }\n  };\n\n  useEffect(() => {\n    if (autoFocus) {\n      let focusedKey = null;\n\n      // Check focus strategy to determine which item to focus\n      if (autoFocus === 'first') {\n        focusedKey = delegate.getFirstKey();\n      } if (autoFocus === 'last') {\n        focusedKey = delegate.getLastKey();\n      }\n\n      // If there are any selected keys, make the first one the new focus target\n      let selectedKeys = manager.selectedKeys;\n      if (selectedKeys.size) {\n        focusedKey = selectedKeys.values().next().value;\n      }\n\n      manager.setFocused(true);\n      manager.setFocusedKey(focusedKey);\n\n      // If no default focus key is selected, focus the collection itself.\n      if (focusedKey == null && !shouldUseVirtualFocus) {\n        focusSafely(ref.current);\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let handlers = {\n    onKeyDown,\n    onFocus,\n    onBlur,\n    onMouseDown(e) {\n      // Ignore events that bubbled through portals.\n      if (e.currentTarget.contains(e.target)) {\n        // Prevent focus going to the collection when clicking on the scrollbar.\n        e.preventDefault();\n      }\n    }\n  };\n\n  let {typeSelectProps} = useTypeSelect({\n    keyboardDelegate: delegate,\n    selectionManager: manager\n  });\n\n  if (!disallowTypeAhead) {\n    handlers = mergeProps(typeSelectProps, handlers);\n  }\n\n  // If nothing is focused within the collection, make the collection itself tabbable.\n  // This will be marshalled to either the first or last item depending on where focus came from.\n  // If using virtual focus, don't set a tabIndex at all so that VoiceOver on iOS 14 doesn't try\n  // to move real DOM focus to the element anyway.\n  let tabIndex: number;\n  if (!shouldUseVirtualFocus) {\n    tabIndex = manager.focusedKey == null ? 0 : -1;\n  }\n\n  return {\n    collectionProps: {\n      ...handlers,\n      tabIndex\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {focusSafely} from '@react-aria/focus';\nimport {HTMLAttributes, Key, RefObject, useEffect} from 'react';\nimport {MultipleSelectionManager} from '@react-stately/selection';\nimport {PressEvent} from '@react-types/shared';\nimport {PressProps} from '@react-aria/interactions';\n\ninterface SelectableItemOptions {\n  /**\n   * An interface for reading and updating multiple selection state.\n   */\n  selectionManager: MultipleSelectionManager,\n  /**\n   * A unique key for the item.\n   */\n  key: Key,\n  /**\n   * Ref to the item.\n   */\n  ref: RefObject<HTMLElement>,\n  /**\n   * By default, selection occurs on pointer down. This can be strange if selecting an\n   * item causes the UI to disappear immediately (e.g. menus).\n   */\n  shouldSelectOnPressUp?: boolean,\n  /**\n   * Whether the option is contained in a virtual scroller.\n   */\n  isVirtualized?: boolean,\n  /**\n   * Function to focus the item.\n   */\n  focus?: () => void,\n  /**\n   * Whether the option should use virtual focus instead of being focused directly.\n   */\n  shouldUseVirtualFocus?: boolean\n}\n\ninterface SelectableItemAria {\n  /**\n   * Props to be spread on the item root node.\n   */\n  itemProps: HTMLAttributes<HTMLElement> & PressProps\n}\n\n/**\n * Handles interactions with an item in a selectable collection.\n */\nexport function useSelectableItem(options: SelectableItemOptions): SelectableItemAria {\n  let {\n    selectionManager: manager,\n    key,\n    ref,\n    shouldSelectOnPressUp,\n    isVirtualized,\n    shouldUseVirtualFocus,\n    focus\n  } = options;\n\n  let onSelect = (e: PressEvent | PointerEvent) => manager.select(key, e);\n\n  // Focus the associated DOM node when this item becomes the focusedKey\n  let isFocused = key === manager.focusedKey;\n  useEffect(() => {\n    if (isFocused && manager.isFocused && !shouldUseVirtualFocus && document.activeElement !== ref.current) {\n      if (focus) {\n        focus();\n      } else {\n        focusSafely(ref.current);\n      }\n    }\n  }, [ref, isFocused, manager.focusedKey, manager.childFocusStrategy, manager.isFocused, shouldUseVirtualFocus]);\n\n  // Set tabIndex to 0 if the element is focused, or -1 otherwise so that only the last focused\n  // item is tabbable.  If using virtual focus, don't set a tabIndex at all so that VoiceOver\n  // on iOS 14 doesn't try to move real DOM focus to the item anyway.\n  let itemProps: SelectableItemAria['itemProps'] = {};\n  if (!shouldUseVirtualFocus) {\n    itemProps = {\n      tabIndex: isFocused ? 0 : -1,\n      onFocus(e) {\n        if (e.target === ref.current) {\n          manager.setFocusedKey(key);\n        }\n      }\n    };\n  }\n\n  // By default, selection occurs on pointer down. This can be strange if selecting an\n  // item causes the UI to disappear immediately (e.g. menus).\n  // If shouldSelectOnPressUp is true, we use onPressUp instead of onPressStart.\n  // onPress requires a pointer down event on the same element as pointer up. For menus,\n  // we want to be able to have the pointer down on the trigger that opens the menu and\n  // the pointer up on the menu item rather than requiring a separate press.\n  // For keyboard events, selection still occurs on key down.\n  if (shouldSelectOnPressUp) {\n    itemProps.onPressStart = (e) => {\n      if (e.pointerType === 'keyboard') {\n        onSelect(e);\n      }\n    };\n\n    itemProps.onPressUp = (e) => {\n      if (e.pointerType !== 'keyboard') {\n        onSelect(e);\n      }\n    };\n  } else {\n    // On touch, it feels strange to select on touch down, so we special case this.\n    itemProps.onPressStart = (e) => {\n      if (e.pointerType !== 'touch') {\n        onSelect(e);\n      }\n    };\n\n    itemProps.onPress = (e) => {\n      if (e.pointerType === 'touch') {\n        onSelect(e);\n      }\n    };\n  }\n\n  if (!isVirtualized) {\n    itemProps['data-key'] = key;\n  }\n\n  return {\n    itemProps\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Collection, KeyboardDelegate, Node} from '@react-types/shared';\nimport {Key, RefObject} from 'react';\n\nexport class ListKeyboardDelegate<T> implements KeyboardDelegate {\n  private collection: Collection<Node<T>>;\n  private disabledKeys: Set<Key>;\n  private ref: RefObject<HTMLElement>;\n  private collator: Intl.Collator;\n\n  constructor(collection: Collection<Node<T>>, disabledKeys: Set<Key>, ref: RefObject<HTMLElement>, collator?: Intl.Collator) {\n    this.collection = collection;\n    this.disabledKeys = disabledKeys;\n    this.ref = ref;\n    this.collator = collator;\n  }\n\n  getKeyBelow(key: Key) {\n    key = this.collection.getKeyAfter(key);\n    while (key != null) {\n      let item = this.collection.getItem(key);\n      if (item.type === 'item' && !this.disabledKeys.has(key)) {\n        return key;\n      }\n\n      key = this.collection.getKeyAfter(key);\n    }\n  }\n\n  getKeyAbove(key: Key) {\n    key = this.collection.getKeyBefore(key);\n    while (key != null) {\n      let item = this.collection.getItem(key);\n      if (item.type === 'item' && !this.disabledKeys.has(key)) {\n        return key;\n      }\n\n      key = this.collection.getKeyBefore(key);\n    }\n  }\n\n  getFirstKey() {\n    let key = this.collection.getFirstKey();\n    while (key != null) {\n      let item = this.collection.getItem(key);\n      if (item.type === 'item' && !this.disabledKeys.has(key)) {\n        return key;\n      }\n\n      key = this.collection.getKeyAfter(key);\n    }\n  }\n\n  getLastKey() {\n    let key = this.collection.getLastKey();\n    while (key != null) {\n      let item = this.collection.getItem(key);\n      if (item.type === 'item' && !this.disabledKeys.has(key)) {\n        return key;\n      }\n\n      key = this.collection.getKeyBefore(key);\n    }\n  }\n\n  private getItem(key: Key): HTMLElement {\n    return this.ref.current.querySelector(`[data-key=\"${key}\"]`);\n  }\n\n  getKeyPageAbove(key: Key) {\n    let menu = this.ref.current;\n    let item = this.getItem(key);\n    if (!item) {\n      return null;\n    }\n\n    let pageY = Math.max(0, item.offsetTop + item.offsetHeight - menu.offsetHeight);\n\n    while (item && item.offsetTop > pageY) {\n      key = this.getKeyAbove(key);\n      item = this.getItem(key);\n    }\n\n    return key;\n  }\n\n  getKeyPageBelow(key: Key) {\n    let menu = this.ref.current;\n    let item = this.getItem(key);\n    if (!item) {\n      return null;\n    }\n\n    let pageY = Math.min(menu.scrollHeight, item.offsetTop - item.offsetHeight + menu.offsetHeight);\n\n    while (item && item.offsetTop < pageY) {\n      key = this.getKeyBelow(key);\n      item = this.getItem(key);\n    }\n\n    return key;\n  }\n\n  getKeyForSearch(search: string, fromKey?: Key) {\n    if (!this.collator) {\n      return null;\n    }\n\n    let collection = this.collection;\n    let key = fromKey || this.getFirstKey();\n    while (key != null) {\n      let item = collection.getItem(key);\n      let substring = item.textValue.slice(0, search.length);\n      if (item.textValue && this.collator.compare(substring, search) === 0) {\n        return key;\n      }\n\n      key = this.getKeyBelow(key);\n    }\n\n    return null;\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Collection, FocusStrategy, KeyboardDelegate, Node} from '@react-types/shared';\nimport {HTMLAttributes, Key, RefObject, useEffect, useMemo} from 'react';\nimport {ListKeyboardDelegate} from './ListKeyboardDelegate';\nimport {MultipleSelectionManager} from '@react-stately/selection';\nimport {useCollator} from '@react-aria/i18n';\nimport {useSelectableCollection} from './useSelectableCollection';\n\ninterface SelectableListOptions {\n  /**\n   * An interface for reading and updating multiple selection state.\n   */\n  selectionManager: MultipleSelectionManager,\n  /**\n   * State of the collection.\n   */\n  collection: Collection<Node<unknown>>,\n  /**\n   * The item keys that are disabled. These items cannot be selected, focused, or otherwise interacted with.\n   */\n  disabledKeys: Set<Key>,\n  /**\n   * A ref to the item.\n   */\n  ref?: RefObject<HTMLElement>,\n  /**\n   * A delegate that returns collection item keys with respect to visual layout.\n   */\n  keyboardDelegate?: KeyboardDelegate,\n  /**\n   * Whether the collection or one of its items should be automatically focused upon render.\n   * @default false\n   */\n  autoFocus?: boolean | FocusStrategy,\n  /**\n   * Whether focus should wrap around when the end/start is reached.\n   * @default false\n   */\n  shouldFocusWrap?: boolean,\n  /**\n   * Whether the option is contained in a virtual scroller.\n   */\n  isVirtualized?: boolean,\n  /**\n   * Whether the collection allows empty selection.\n   * @default false\n   */\n  disallowEmptySelection?: boolean,\n  /**\n   * Whether selection should occur automatically on focus.\n   * @default false\n   */\n  selectOnFocus?: boolean,\n  /**\n   * Whether typeahead is disabled.\n   * @default false\n   */\n  disallowTypeAhead?: boolean,\n  /**\n   * Whether the collection items should use virtual focus instead of being focused directly.\n   */\n  shouldUseVirtualFocus?: boolean,\n  /**\n   * Whether navigation through tab key is enabled.\n   */\n  allowsTabNavigation?: boolean\n}\n\ninterface SelectableListAria {\n  /**\n   * Props for the option element.\n   */\n  listProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Handles interactions with a selectable list.\n */\nexport function useSelectableList(props: SelectableListOptions): SelectableListAria {\n  let {\n    selectionManager,\n    collection,\n    disabledKeys,\n    ref,\n    keyboardDelegate,\n    autoFocus,\n    shouldFocusWrap,\n    isVirtualized,\n    disallowEmptySelection,\n    selectOnFocus = false,\n    disallowTypeAhead,\n    shouldUseVirtualFocus,\n    allowsTabNavigation\n  } = props;\n\n  // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).\n  // When virtualized, the layout object will be passed in as a prop and override this.\n  let collator = useCollator({usage: 'search', sensitivity: 'base'});\n  let delegate = useMemo(() => keyboardDelegate || new ListKeyboardDelegate(collection, disabledKeys, ref, collator), [keyboardDelegate, collection, disabledKeys, ref, collator]);\n\n  // If not virtualized, scroll the focused element into view when the focusedKey changes.\n  // When virtualized, Virtualizer handles this internally.\n  useEffect(() => {\n    if (!isVirtualized && selectionManager.focusedKey && ref?.current) {\n      let element = ref.current.querySelector(`[data-key=\"${selectionManager.focusedKey}\"]`) as HTMLElement;\n      if (element) {\n        scrollIntoView(ref.current, element);\n      }\n    }\n  }, [isVirtualized, ref, selectionManager.focusedKey]);\n\n  let {collectionProps} = useSelectableCollection({\n    ref,\n    selectionManager,\n    keyboardDelegate: delegate,\n    autoFocus,\n    shouldFocusWrap,\n    disallowEmptySelection,\n    selectOnFocus,\n    disallowTypeAhead,\n    shouldUseVirtualFocus,\n    allowsTabNavigation\n  });\n\n  return {\n    listProps: collectionProps\n  };\n}\n\n/**\n * Scrolls `scrollView` so that `element` is visible.\n * Similar to `element.scrollIntoView({block: 'nearest'})` (not supported in Edge),\n * but doesn't affect parents above `scrollView`.\n */\nfunction scrollIntoView(scrollView: HTMLElement, element: HTMLElement) {\n  let offsetX = relativeOffset(scrollView, element, 'left');\n  let offsetY = relativeOffset(scrollView, element, 'top');\n  let width = element.offsetWidth;\n  let height = element.offsetHeight;\n  let x = scrollView.scrollLeft;\n  let y = scrollView.scrollTop;\n  let maxX = x + scrollView.offsetWidth;\n  let maxY = y + scrollView.offsetHeight;\n\n  if (offsetX <= x) {\n    x = offsetX;\n  } else if (offsetX + width > maxX) {\n    x += offsetX + width - maxX;\n  }\n  if (offsetY <= y) {\n    y = offsetY;\n  } else if (offsetY + height > maxY) {\n    y += offsetY + height - maxY;\n  }\n\n  scrollView.scrollLeft = x;\n  scrollView.scrollTop = y;\n}\n\n/**\n * Computes the offset left or top from child to ancestor by accumulating\n * offsetLeft or offsetTop through intervening offsetParents.\n */\nfunction relativeOffset(ancestor: HTMLElement, child: HTMLElement, axis: 'left'|'top') {\n  const prop = axis === 'left' ? 'offsetLeft' : 'offsetTop';\n  let sum = 0;\n  while (child.offsetParent) {\n    sum += child[prop];\n    if (child.offsetParent === ancestor) {\n      // Stop once we have found the ancestor we are interested in.\n      break;\n    } else if (child.offsetParent.contains(ancestor)) {\n      // If the ancestor is not `position:relative`, then we stop at \n      // _its_ offset parent, and we subtract off _its_ offset, so that\n      // we end up with the proper offset from child to ancestor.\n      sum -= ancestor[prop];\n      break;\n    }\n    child = child.offsetParent as HTMLElement;\n  }\n  return sum;\n}\n"]},"metadata":{},"sourceType":"module"}