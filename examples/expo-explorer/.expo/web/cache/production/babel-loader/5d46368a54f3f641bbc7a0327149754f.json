{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _react=_interopRequireDefault(require(\"react\"));var _Stack=require(\"../Stack\");var _useThemeProps=require(\"../../../hooks/useThemeProps\");var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/primitives/List/Ordered.tsx\";var OrderedList=function OrderedList(_ref,ref){var style=_ref.style,children=_ref.children,props=(0,_objectWithoutProperties2.default)(_ref,[\"style\",\"children\"]);var _usePropsResolution=(0,_useThemeProps.usePropsResolution)('List',props),_text=_usePropsResolution._text,start=_usePropsResolution.start,_hover=_usePropsResolution._hover,newProps=(0,_objectWithoutProperties2.default)(_usePropsResolution,[\"_text\",\"start\",\"_hover\"]);children=_react.default.Children.map(children,function(child,ind){return _react.default.cloneElement(child,(0,_extends2.default)({ol:true,index:ind,_text:_text,_hover:_hover,start:start},child.props),child.props.children);});return _react.default.createElement(_Stack.VStack,(0,_extends2.default)({style:style},newProps,{ref:ref,__self:_this,__source:{fileName:_jsxFileName,lineNumber:27,columnNumber:5}}),children);};var _default=_react.default.memo(_react.default.forwardRef(OrderedList));exports.default=_default;","map":{"version":3,"sources":["Ordered.tsx"],"names":["OrderedList","style","children","props","_text","start","_hover","newProps","React","ol","index","child"],"mappings":"mWAAA,GAAA,CAAA,MAAA,CAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CACA,GAAA,CAAA,MAAA,CAAA,OAAA,YAAA,CAEA,GAAA,CAAA,cAAA,CAAA,OAAA,gCAAA,C,kIAEA,GAAMA,CAAAA,WAAW,CAAXA,QAAAA,CAAAA,WAAAA,CAAc,IAAdA,CAAc,GAAdA,CAAwE,CAAvDC,GAAAA,CAAAA,KAAuD,CAAA,IAAA,CAAvDA,KAAAA,CAAOC,QAAgD,CAAA,IAAA,CAAhDA,QAAPD,CAAoBE,KAAmC,CAAA,CAAA,EAAA,yBAAA,CAAA,OAAA,EAAA,IAAA,CAAA,CAAA,OAAA,CAAA,UAAA,CAAA,CAAvDF,CAAuD,GAAA,CAAA,mBAAA,CAC9B,CAAA,EAAA,cAAA,CAAA,kBAAA,EAAA,MAAA,CAD8B,KAC9B,CAD8B,CACpEG,KADoE,CAAA,mBAAA,CAAA,KAAA,CAC7DC,KAD6D,CAAA,mBAAA,CAAA,KAAA,CACtDC,MADsD,CAAA,mBAAA,CAAA,MAAA,CAC3CC,QAD2C,CAAA,CAAA,EAAA,yBAAA,CAAA,OAAA,EAAA,mBAAA,CAAA,CAAA,OAAA,CAAA,OAAA,CAAA,QAAA,CAAA,CAAA,CAM5EL,QAAQ,CAAGM,MAAAA,CAAAA,OAAAA,CAAAA,QAAAA,CAAAA,GAAAA,CAAAA,QAAAA,CAA6B,SAAA,KAAA,CAAA,GAAA,CAA6B,CACnE,MAAOA,CAAAA,MAAAA,CAAAA,OAAAA,CAAAA,YAAAA,CAAAA,KAAAA,CAAAA,CAAAA,EAAAA,SAAAA,CAAAA,OAAAA,EAAAA,CAGHC,EAAE,CAHCD,IAAAA,CAIHE,KAAK,CAJFF,GAAAA,CAKHJ,KAAK,CALFI,KAAAA,CAMHF,MAAM,CANHE,MAAAA,CAOHH,KAAK,CAPFG,KAAAA,CAAAA,CAQAG,KAAK,CARLH,KAAAA,CAAAA,CAULG,KAAK,CAALA,KAAAA,CAVF,QAAOH,CAAP,CADFN,CAAWM,CAAXN,CAcA,MACE,CAAA,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,MAAA,CAAD,MAAA,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAA,CAAQ,KAAK,CAAb,KAAA,CAAA,CAAA,QAAA,CAAA,CAAoC,GAAG,CAAvC,GAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CADF,QACE,CADF,CApBF,CAAA,C,aA2BeM,MAAAA,CAAAA,OAAAA,CAAAA,IAAAA,CAAWA,MAAAA,CAAAA,OAAAA,CAAAA,UAAAA,CAAXA,WAAWA,CAAXA,C","sourcesContent":["import React from 'react';\nimport { VStack } from '../Stack';\nimport type { IListProps } from './types';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\n\nconst OrderedList = ({ style, children, ...props }: IListProps, ref?: any) => {\n  const { _text, start, _hover, ...newProps } = usePropsResolution(\n    'List',\n    props\n  );\n  // add props to children\n  children = React.Children.map(children, (child: any, ind: number) => {\n    return React.cloneElement(\n      child,\n      {\n        ol: true,\n        index: ind,\n        _text,\n        _hover,\n        start,\n        ...child.props,\n      },\n      child.props.children\n    );\n  });\n  return (\n    <VStack style={style} {...newProps} ref={ref}>\n      {children}\n    </VStack>\n  );\n};\n\nexport default React.memo(React.forwardRef(OrderedList));\n"]},"metadata":{},"sourceType":"script"}