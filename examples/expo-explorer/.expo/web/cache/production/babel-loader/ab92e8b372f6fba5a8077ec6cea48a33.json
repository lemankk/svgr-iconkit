{"ast":null,"code":"var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.useKeyboardBottomInset=void 0;var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");var useKeyboardBottomInset=function useKeyboardBottomInset(){var _React$useState=React.useState(0),_React$useState2=(0,_slicedToArray2.default)(_React$useState,2),bottom=_React$useState2[0],setBottom=_React$useState2[1];var subscriptions=React.useRef([]);React.useEffect(function(){function onKeyboardChange(e){if(e.startCoordinates&&e.endCoordinates.screenY<e.startCoordinates.screenY)setBottom(e.endCoordinates.height/2);else setBottom(0);}if(_reactNative.Platform.OS==='ios'){subscriptions.current=[_reactNative.Keyboard.addListener('keyboardWillChangeFrame',onKeyboardChange)];}else{subscriptions.current=[_reactNative.Keyboard.addListener('keyboardDidHide',onKeyboardChange),_reactNative.Keyboard.addListener('keyboardDidShow',onKeyboardChange)];}return function(){subscriptions.current.forEach(function(subscription){subscription.remove();});};},[setBottom,subscriptions]);return bottom;};exports.useKeyboardBottomInset=useKeyboardBottomInset;","map":{"version":3,"sources":["useKeyboardBottomInset.ts"],"names":["useKeyboardBottomInset","bottom","setBottom","React","subscriptions","e","Platform","Keyboard","subscription"],"mappings":"mWAAA,GAAA,CAAA,KAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,C,wDAGO,GAAMA,CAAAA,sBAAsB,CAAtBA,QAAAA,CAAAA,sBAAAA,EAA+B,CAAA,GAAA,CAAA,eAAA,CACdG,KAAK,CAALA,QAAAA,CADc,CACdA,CADc,CAAA,gBAAA,CAAA,CAAA,EAAA,eAAA,CAAA,OAAA,EAAA,eAAA,CAAA,CAAA,CAAA,CACnCF,MADmC,CAAA,gBAAA,CAAA,CAAA,CAAA,CAC3BC,SAD2B,CAAA,gBAAA,CAAA,CAAA,CAAA,CAE1C,GAAME,CAAAA,aAAa,CAAGD,KAAK,CAALA,MAAAA,CAAtB,EAAsBA,CAAtB,CAEAA,KAAK,CAALA,SAAAA,CAAgB,UAAM,CACpB,QAAA,CAAA,gBAAA,CAAA,CAAA,CAA4C,CAC1C,GACEE,CAAC,CAADA,gBAAAA,EACAA,CAAC,CAADA,cAAAA,CAAAA,OAAAA,CAA2BA,CAAC,CAADA,gBAAAA,CAF7B,OAAA,CAIEH,SAAS,CAACG,CAAC,CAADA,cAAAA,CAAAA,MAAAA,CAJZ,CAIW,CAATH,CAJF,IAKKA,CAAAA,SAAS,CAATA,CAAS,CAATA,CAGP,IAAII,YAAAA,CAAAA,QAAAA,CAAAA,EAAAA,GAAJ,KAAA,CAA2B,CACzBF,aAAa,CAAbA,OAAAA,CAAwB,CACtBG,YAAAA,CAAAA,QAAAA,CAAAA,WAAAA,CAAAA,yBAAAA,CADFH,gBACEG,CADsB,CAAxBH,CADF,CAAA,IAIO,CACLA,aAAa,CAAbA,OAAAA,CAAwB,CACtBG,YAAAA,CAAAA,QAAAA,CAAAA,WAAAA,CAAAA,iBAAAA,CADsB,gBACtBA,CADsB,CAEtBA,YAAAA,CAAAA,QAAAA,CAAAA,WAAAA,CAAAA,iBAAAA,CAFFH,gBAEEG,CAFsB,CAAxBH,CAKF,OAAO,WAAM,CACXA,aAAa,CAAbA,OAAAA,CAAAA,OAAAA,CAA8B,SAAA,YAAA,CAAkB,CAC9CI,YAAY,CAAZA,MAAAA,GADFJ,CAAAA,EADF,CAAA,CApBFD,CAAAA,CAyBG,CAAA,SAAA,CAzBHA,aAyBG,CAzBHA,EA2BA,MAAA,CAAA,MAAA,CA/BK,CAAA,C","sourcesContent":["import * as React from 'react';\nimport { Keyboard, Platform, KeyboardEvent } from 'react-native';\n\nexport const useKeyboardBottomInset = () => {\n  const [bottom, setBottom] = React.useState(0);\n  const subscriptions = React.useRef<any[]>([]);\n\n  React.useEffect(() => {\n    function onKeyboardChange(e: KeyboardEvent) {\n      if (\n        e.startCoordinates &&\n        e.endCoordinates.screenY < e.startCoordinates.screenY\n      )\n        setBottom(e.endCoordinates.height / 2);\n      else setBottom(0);\n    }\n\n    if (Platform.OS === 'ios') {\n      subscriptions.current = [\n        Keyboard.addListener('keyboardWillChangeFrame', onKeyboardChange),\n      ];\n    } else {\n      subscriptions.current = [\n        Keyboard.addListener('keyboardDidHide', onKeyboardChange),\n        Keyboard.addListener('keyboardDidShow', onKeyboardChange),\n      ];\n    }\n    return () => {\n      subscriptions.current.forEach((subscription) => {\n        subscription.remove();\n      });\n    };\n  }, [setBottom, subscriptions]);\n\n  return bottom;\n};\n"]},"metadata":{},"sourceType":"script"}