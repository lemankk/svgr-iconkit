{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _react=_interopRequireWildcard(require(\"react\"));var _Box=_interopRequireDefault(require(\"../Box\"));var _utils=require(\"../../../utils\");var _useThemeProps=require(\"../../../hooks/useThemeProps\");var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/primitives/Stack/Stack.tsx\";var Stack=function Stack(props,ref){var children=props.children,divider=props.divider,reversed=props.reversed,remainingProps=(0,_objectWithoutProperties2.default)(props,[\"children\",\"divider\",\"reversed\"]);var _usePropsResolution=(0,_useThemeProps.usePropsResolution)('Stack',remainingProps),space=_usePropsResolution.space,direction=_usePropsResolution.direction,newProps=(0,_objectWithoutProperties2.default)(_usePropsResolution,[\"space\",\"direction\"]);return _react.default.createElement(_Box.default,(0,_extends2.default)({flexDirection:direction},newProps,{ref:ref,__self:_this,__source:{fileName:_jsxFileName,lineNumber:38,columnNumber:5}}),(0,_utils.getSpacedChildren)(children,space,direction==='row'?'X':'Y',reversed?'reverse':'normal',divider));};var _default=(0,_react.memo)((0,_react.forwardRef)(Stack));exports.default=_default;","map":{"version":3,"sources":["Stack.tsx"],"names":["Stack","children","divider","reversed","remainingProps","props","space","direction","newProps"],"mappings":"wbAAA,GAAA,CAAA,MAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CACA,GAAA,CAAA,IAAA,CAAA,sBAAA,CAAA,OAAA,UAAA,CAAA,CACA,GAAA,CAAA,MAAA,CAAA,OAAA,kBAAA,CACA,GAAA,CAAA,cAAA,CAAA,OAAA,gCAAA,C,iIA0BA,GAAMA,CAAAA,KAAK,CAALA,QAAAA,CAAAA,KAAAA,CAAQ,KAARA,CAAQ,GAARA,CAA2C,CAAA,GACvCC,CAAAA,QADuC,CACYI,KADZ,CAAA,QAAA,CAC7BH,OAD6B,CACYG,KADZ,CAAA,OAAA,CACpBF,QADoB,CACYE,KADZ,CAAA,QAAA,CACPD,cADO,CAAA,CAAA,EAAA,yBAAA,CAAA,OAAA,EAAA,KAAA,CAAA,CAAA,UAAA,CAAA,SAAA,CAAA,UAAA,CAAA,CAAA,CAAA,GAAA,CAAA,mBAAA,CAEA,CAAA,EAAA,cAAA,CAAA,kBAAA,EAAA,OAAA,CAFA,cAEA,CAFA,CAEvCE,KAFuC,CAAA,mBAAA,CAAA,KAAA,CAEhCC,SAFgC,CAAA,mBAAA,CAAA,SAAA,CAElBC,QAFkB,CAAA,CAAA,EAAA,yBAAA,CAAA,OAAA,EAAA,mBAAA,CAAA,CAAA,OAAA,CAAA,WAAA,CAAA,CAAA,CAO/C,MACE,CAAA,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,IAAA,CAAD,OAAA,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAA,CAAK,aAAa,CAAlB,SAAA,CAAA,CAAA,QAAA,CAAA,CAA6C,GAAG,CAAhD,GAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CACG,CAAA,EAAA,MAAA,CAAA,iBAAA,EAAA,QAAA,CAAA,KAAA,CAGCD,SAAS,GAATA,KAAAA,CAAAA,GAAAA,CAHD,GAAA,CAICJ,QAAQ,CAAA,SAAA,CAJT,QAAA,CAFL,OAEK,CADH,CADF,CAPF,CAAA,C,aAoBe,CAAA,EAAA,MAAA,CAAA,IAAA,EAAK,CAAA,EAAA,MAAA,CAAA,UAAA,EAAL,KAAK,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { default as Box } from '../Box';\nimport { getSpacedChildren } from '../../../utils';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type { IBoxProps } from '../Box';\nimport type { ResponsiveValue } from '../../types';\n\nexport interface IStackProps extends IBoxProps {\n  /**\n   * The divider element to use between elements.\n   */\n  divider?: JSX.Element;\n  /**\n   * The space between each stack item. Accepts Responsive values\n   */\n  space?: ResponsiveValue<\n    'gutter' | '2xs' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | '2xl' | number\n  >;\n  /**\n   * Determines whether to reverse the direction of Stack Items.\n   */\n  reversed?: boolean;\n  /**\n   * The direction of the Stack Items.\n   * @default column\n   */\n  direction?: ResponsiveValue<'column' | 'row'>;\n}\n\nconst Stack = (props: IStackProps, ref?: any) => {\n  const { children, divider, reversed, ...remainingProps } = props;\n  const { space, direction, ...newProps }: any = usePropsResolution(\n    'Stack',\n    remainingProps\n  );\n\n  return (\n    <Box flexDirection={direction} {...newProps} ref={ref}>\n      {getSpacedChildren(\n        children,\n        space,\n        direction === 'row' ? 'X' : 'Y',\n        reversed ? 'reverse' : 'normal',\n        divider\n      )}\n    </Box>\n  );\n};\n\nexport default memo(forwardRef(Stack));\n"]},"metadata":{},"sourceType":"script"}