{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React from'react';var ariaToAccessibilityMap={'aria-activedescendant':'accessibilityActiveDescendant','aria-atomic':'accessibilityAtomic','aria-autocomplete':'accessibilityAutoComplete','aria-busy':'accessibilityBusy','aria-checked':'accessibilityChecked','aria-colcount':'accessibilityColumnCount','aria-colindex':'accessibilityColumnIndex','aria-colspan':'accessibilityColumnSpan','aria-controls':'accessibilityControls','aria-describedby':'accessibilityDescribedBy','aria-details':'accessibilityDetails','aria-disabled':'accessibilityDisabled','aria-errormessage':'accessibilityErrorMessage','aria-expanded':'accessibilityExpanded','aria-flowto':'accessibilityFlowTo','aria-haspopup':'accessibilityHasPopup','aria-hidden':'accessibilityHidden','aria-invalid':'accessibilityInvalid','aria-keyshortcuts':'accessibilityKeyShortcuts','aria-label':'accessibilityLabel','aria-labelledby':'accessibilityLabelledBy','aria-live':'accessibilityLiveRegion','aria-modal':'accessibilityModal','aria-multiline':'accessibilityMultiline','aria-multiselectable':'accessibilityMultiSelectable','aria-orientation':'accessibilityOrientation','aria-owns':'accessibilityOwns','aria-placeholder':'accessibilityPlaceholder','aria-posinset':'accessibilityPosInSet','aria-pressed':'accessibilityPressed','aria-readonly':'accessibilityReadOnly','aria-required':'accessibilityRequired','aria-roledescription':'accessibilityRoleDescription','aria-rowcount':'accessibilityRowCount','aria-rowindex':'accessibilityRowIndex','aria-rowspan':'accessibilityRowSpan','aria-selected':'accessibilitySelected','aria-setsize':'accessibilitySetSize','aria-sort':'accessibilitySort','aria-valuemax':'accessibilityValueMax','aria-valuemin':'accessibilityValueMin','aria-valuenow':'accessibilityValueNow','aria-valuetext':'accessibilityValueText'};export var mapDomPropsToRN=function mapDomPropsToRN(props){var newProps=_objectSpread({},props);if(props.tabIndex==='0'||props.tabIndex===0){newProps.focusable=true;}if(props.role){newProps.accessibilityRole=props.role;}if(props.id){newProps.nativeID=props.id;}for(var key in props){if(key.indexOf('aria')>-1){if(ariaToAccessibilityMap[key]){newProps[ariaToAccessibilityMap[key]]=props[key];}else{console.warn('@react-native-aria/utils:: ','No equivalent mapping of '+key+' found in ariaToAccessibilityMap. Please raise a PR to support this attribute.');}}else if(key.indexOf('data-')>-1){if(!newProps.dataSet){newProps.dataSet={};}newProps.dataSet[key.split('data-')[1]]=props[key];}}return newProps;};export var useMapDomPropsToRN=function useMapDomPropsToRN(props,ref){React.useEffect(function(){if(ref.current){ref.current.tabIndex=props.tabIndex;}},[props.tabIndex]);return mapDomPropsToRN(props);};","map":{"version":3,"sources":["ariaToAccessibilityMap.ts"],"names":["ariaToAccessibilityMap","mapDomPropsToRN","props","newProps","key","console","useMapDomPropsToRN","React","ref"],"mappings":"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","sourcesContent":["import React, { RefObject } from 'react';\n\nconst ariaToAccessibilityMap: any = {\n  'aria-activedescendant': 'accessibilityActiveDescendant',\n  'aria-atomic': 'accessibilityAtomic',\n  'aria-autocomplete': 'accessibilityAutoComplete',\n  'aria-busy': 'accessibilityBusy',\n  'aria-checked': 'accessibilityChecked',\n  'aria-colcount': 'accessibilityColumnCount',\n  'aria-colindex': 'accessibilityColumnIndex',\n  'aria-colspan': 'accessibilityColumnSpan',\n  'aria-controls': 'accessibilityControls',\n  'aria-describedby': 'accessibilityDescribedBy',\n  'aria-details': 'accessibilityDetails',\n  'aria-disabled': 'accessibilityDisabled',\n  'aria-errormessage': 'accessibilityErrorMessage',\n  'aria-expanded': 'accessibilityExpanded',\n  'aria-flowto': 'accessibilityFlowTo',\n  'aria-haspopup': 'accessibilityHasPopup',\n  'aria-hidden': 'accessibilityHidden',\n  'aria-invalid': 'accessibilityInvalid',\n  'aria-keyshortcuts': 'accessibilityKeyShortcuts',\n  'aria-label': 'accessibilityLabel',\n  'aria-labelledby': 'accessibilityLabelledBy',\n  'aria-live': 'accessibilityLiveRegion',\n  'aria-modal': 'accessibilityModal',\n  'aria-multiline': 'accessibilityMultiline',\n  'aria-multiselectable': 'accessibilityMultiSelectable',\n  'aria-orientation': 'accessibilityOrientation',\n  'aria-owns': 'accessibilityOwns',\n  'aria-placeholder': 'accessibilityPlaceholder',\n  'aria-posinset': 'accessibilityPosInSet',\n  'aria-pressed': 'accessibilityPressed',\n  'aria-readonly': 'accessibilityReadOnly',\n  'aria-required': 'accessibilityRequired',\n  'aria-roledescription': 'accessibilityRoleDescription',\n  'aria-rowcount': 'accessibilityRowCount',\n  'aria-rowindex': 'accessibilityRowIndex',\n  'aria-rowspan': 'accessibilityRowSpan',\n  'aria-selected': 'accessibilitySelected',\n  'aria-setsize': 'accessibilitySetSize',\n  'aria-sort': 'accessibilitySort',\n  'aria-valuemax': 'accessibilityValueMax',\n  'aria-valuemin': 'accessibilityValueMin',\n  'aria-valuenow': 'accessibilityValueNow',\n  'aria-valuetext': 'accessibilityValueText',\n};\n\n// Refer - https://necolas.github.io/react-native-web/docs/accessibility/\nexport const mapDomPropsToRN = (props: any) => {\n  let newProps: any = { ...props };\n\n  if (props.tabIndex === '0' || props.tabIndex === 0) {\n    newProps.focusable = true;\n  }\n  // use the below hook for tabIndex\n  // useMapDomPropsToRN\n  // if (props.tabIndex === '-1' || props.tabIndex === -1) {\n  //   newProps.focusable = false;\n  // }\n\n  if (props.role) {\n    newProps.accessibilityRole = props.role;\n  }\n\n  if (props.id) {\n    newProps.nativeID = props.id;\n  }\n\n  for (let key in props) {\n    // Map aria to RN web accessibility equivalents\n    if (key.indexOf('aria') > -1) {\n      if (ariaToAccessibilityMap[key]) {\n        newProps[ariaToAccessibilityMap[key]] = props[key];\n      } else {\n        console.warn(\n          '@react-native-aria/utils:: ',\n          'No equivalent mapping of ' +\n            key +\n            ' found in ariaToAccessibilityMap. Please raise a PR to support this attribute.'\n        );\n      }\n    } else if (key.indexOf('data-') > -1) {\n      if (!newProps.dataSet) {\n        newProps.dataSet = {};\n      }\n\n      newProps.dataSet[key.split('data-')[1]] = props[key];\n    }\n  }\n\n  return newProps;\n};\n\n// RN web currently doesn't allow setting tabIndex via props, so need to be set using setNativeProps or ref\n// https://github.com/necolas/react-native-web/issues/1916\n// https://github.com/necolas/react-native-web/issues/1099\nexport const useMapDomPropsToRN = (props: any, ref: RefObject<any>) => {\n  React.useEffect(() => {\n    if (ref.current) {\n      ref.current.tabIndex = props.tabIndex;\n    }\n  }, [props.tabIndex]);\n\n  return mapDomPropsToRN(props);\n};\n"]},"metadata":{},"sourceType":"module"}