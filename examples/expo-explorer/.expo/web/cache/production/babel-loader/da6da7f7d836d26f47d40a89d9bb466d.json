{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.addTextAndPropsToStrings=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _react=_interopRequireDefault(require(\"react\"));var _Text=_interopRequireDefault(require(\"../components/primitives/Text\"));var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/utils/addTextAndPropsToStrings.tsx\";var addTextAndPropsToStrings=function addTextAndPropsToStrings(children,props){var childArray=_react.default.Children.map(children,function(child){if(typeof child==='string'){return _react.default.createElement(_Text.default,(0,_extends2.default)({},props,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:7,columnNumber:14}}),child);}else{if(!child){return null;}return _react.default.cloneElement(child,(0,_extends2.default)({},props,child.props));}});return childArray;};exports.addTextAndPropsToStrings=addTextAndPropsToStrings;","map":{"version":3,"sources":["addTextAndPropsToStrings.tsx"],"names":["addTextAndPropsToStrings","childArray","React","child"],"mappings":"oQAAA,GAAA,CAAA,MAAA,CAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CACA,GAAA,CAAA,KAAA,CAAA,sBAAA,CAAA,OAAA,iCAAA,CAAA,C,8HAEO,GAAMA,CAAAA,wBAAwB,CAAxBA,QAAAA,CAAAA,wBAAAA,CAA2B,QAA3BA,CAA2B,KAA3BA,CAA0D,CACrE,GAAMC,CAAAA,UAAU,CAAGC,MAAAA,CAAAA,OAAAA,CAAAA,QAAAA,CAAAA,GAAAA,CAAAA,QAAAA,CAA6B,SAAA,KAAA,CAAW,CACzD,GAAI,MAAA,CAAA,KAAA,GAAJ,QAAA,CAA+B,CAC7B,MAAO,CAAA,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,KAAA,CAAD,OAAA,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAA,EAAA,CAAA,KAAA,CAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,CAAA,CAAA,YAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAP,KAAO,CAAP,CADF,CAAA,IAEO,CACL,GAAI,CAAJ,KAAA,CAAY,CACV,MAAA,KAAA,CAEF,OAAOA,CAAAA,MAAAA,CAAAA,OAAAA,CAAAA,YAAAA,CAAAA,KAAAA,CAAAA,CAAAA,EAAAA,SAAAA,CAAAA,OAAAA,EAAAA,EAAAA,CAAAA,KAAAA,CAEFC,KAAK,CAFV,KAAOD,CAAAA,CAAP,CAKH,CAZD,CAAmBA,CAAnB,CAaA,MAAA,CAAA,UAAA,CAdK,CAAA,C","sourcesContent":["import React from 'react';\nimport Text from '../components/primitives/Text';\n\nexport const addTextAndPropsToStrings = (children: any, props: any) => {\n  const childArray = React.Children.map(children, (child) => {\n    if (typeof child === 'string') {\n      return <Text {...props}>{child}</Text>;\n    } else {\n      if (!child) {\n        return null;\n      }\n      return React.cloneElement(child, {\n        ...props,\n        ...child.props,\n      });\n    }\n  });\n  return childArray;\n};\n"]},"metadata":{},"sourceType":"script"}