{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.Typeahead=void 0;var _toConsumableArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _react=_interopRequireDefault(require(\"react\"));var _button=require(\"@react-native-aria/button\");var _combobox=require(\"@react-stately/combobox\");var _combobox2=require(\"@react-native-aria/combobox\");var _listbox=require(\"@react-native-aria/listbox\");var _reactNative=require(\"react-native-web/dist/index\");var _collections=require(\"@react-stately/collections\");var _Box=_interopRequireDefault(require(\"../../primitives/Box\"));var _Pressable=require(\"../../primitives/Pressable\");var _Text=_interopRequireDefault(require(\"../../primitives/Text\"));var _tools=require(\"../../../theme/tools\");var _types=require(\"./types\");var _Input=require(\"../../primitives/Input\");var _hooks=require(\"../../../hooks\");var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/Typeahead/Typeahead.tsx\";var Typeahead=_react.default.forwardRef(function(_ref,ref){var onSelectedItemChange=_ref.onSelectedItemChange,options=_ref.options,renderItem=_ref.renderItem,getOptionLabel=_ref.getOptionLabel,getOptionKey=_ref.getOptionKey,onChange=_ref.onChange,numberOfItems=_ref.numberOfItems,rest=(0,_objectWithoutProperties2.default)(_ref,[\"onSelectedItemChange\",\"options\",\"renderItem\",\"getOptionLabel\",\"getOptionKey\",\"onChange\",\"numberOfItems\"]);return _react.default.createElement(ComboBoxImplementation,(0,_extends2.default)({},rest,{onSelectionChange:onSelectedItemChange,items:numberOfItems!==undefined?options.slice(0,numberOfItems):options,onInputChange:onChange,ref:ref,__self:_this,__source:{fileName:_jsxFileName,lineNumber:31,columnNumber:7}}),function(item){if(typeof item!=='string'&&getOptionLabel===undefined){throw new Error('Please use getOptionLabel prop');}if(item.id===undefined&&getOptionKey===undefined){throw new Error('Please use getOptionKey prop');}var optionLabel=getOptionLabel?getOptionLabel(item):item;var optionKey=getOptionKey?getOptionKey(item):item.id!==undefined?item.id:optionLabel;return _react.default.createElement(_collections.Item,{textValue:optionLabel,key:optionKey,__self:_this,__source:{fileName:_jsxFileName,lineNumber:59,columnNumber:13}},renderItem?renderItem(item):_react.default.createElement(_Box.default,{p:2,justifyContent:\"center\",__self:_this,__source:{fileName:_jsxFileName,lineNumber:63,columnNumber:17}},_react.default.createElement(_Text.default,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:64,columnNumber:19}},optionLabel)));});});exports.Typeahead=Typeahead;var ComboBoxImplementation=_react.default.forwardRef(function(props,ref){var _extractInObject=(0,_tools.extractInObject)(props,_types.layoutPropsList),_extractInObject2=(0,_slicedToArray2.default)(_extractInObject,1),layoutProps=_extractInObject2[0];var state=(0,_combobox.useComboBoxState)(props);var triggerRef=_react.default.useRef(null);var inputRef=_react.default.useRef(null);var listBoxRef=_react.default.useRef(null);var popoverRef=_react.default.useRef(null);var _useComboBox=(0,_combobox2.useComboBox)((0,_extends2.default)({},props,{inputRef:inputRef,buttonRef:triggerRef,listBoxRef:listBoxRef,popoverRef:popoverRef,menuTrigger:'input'}),state),triggerProps=_useComboBox.buttonProps,inputProps=_useComboBox.inputProps,listBoxProps=_useComboBox.listBoxProps,labelProps=_useComboBox.labelProps;var toggleIconSetter=function toggleIconSetter(){if(typeof props.toggleIcon==='function')return props.toggleIcon({isOpen:state.isOpen});return props.toggleIcon;};var _useButton=(0,_button.useButton)(triggerProps),buttonProps=_useButton.buttonProps;return _react.default.createElement(_Box.default,(0,_extends2.default)({flexDirection:\"row\"},layoutProps,{ref:ref,__self:_this,__source:{fileName:_jsxFileName,lineNumber:113,columnNumber:7}}),_react.default.createElement(_Box.default,{flex:1,__self:_this,__source:{fileName:_jsxFileName,lineNumber:114,columnNumber:9}},props.label&&_react.default.createElement(_Text.default,(0,_extends2.default)({},labelProps,{pb:1,__self:_this,__source:{fileName:_jsxFileName,lineNumber:116,columnNumber:13}}),props.label),_react.default.createElement(_Input.Input,(0,_extends2.default)({},inputProps,{ref:inputRef,InputRightElement:_react.default.createElement(_Pressable.Pressable,(0,_extends2.default)({},buttonProps,{ref:triggerRef,__self:_this,__source:{fileName:_jsxFileName,lineNumber:125,columnNumber:15}}),toggleIconSetter()),__self:_this,__source:{fileName:_jsxFileName,lineNumber:120,columnNumber:11}})),state.isOpen&&_react.default.createElement(ListBoxPopup,(0,_extends2.default)({},listBoxProps,{listBoxRef:listBoxRef,popoverRef:popoverRef,state:state,label:props.label,__self:_this,__source:{fileName:_jsxFileName,lineNumber:132,columnNumber:13}}))));});function ListBoxPopup(props){var _this2=this;var popoverRef=props.popoverRef,listBoxRef=props.listBoxRef,state=props.state,dropdownHeight=props.dropdownHeight,label=props.label;var _useListBox=(0,_listbox.useListBox)({label:label,autoFocus:state.focusStrategy,disallowEmptySelection:true},state,listBoxRef),listBoxProps=_useListBox.listBoxProps;return _react.default.createElement(_Box.default,{ref:popoverRef,__self:this,__source:{fileName:_jsxFileName,lineNumber:168,columnNumber:5}},_react.default.createElement(_Box.default,{position:\"absolute\",width:\"100%\",maxHeight:dropdownHeight!=null?dropdownHeight:200,__self:this,__source:{fileName:_jsxFileName,lineNumber:169,columnNumber:7}},_react.default.createElement(_reactNative.ScrollView,(0,_extends2.default)({},listBoxProps,{keyboardShouldPersistTaps:\"handled\",ref:function ref(node){if(_reactNative.Platform.OS==='web'){listBoxRef.current=(0,_reactNative.findNodeHandle)(node);}else{listBoxRef.current=node;}},__self:this,__source:{fileName:_jsxFileName,lineNumber:170,columnNumber:9}}),(0,_toConsumableArray2.default)(state.collection).map(function(item){return _react.default.createElement(Option,{key:item.key,item:item,state:state,__self:_this2,__source:{fileName:_jsxFileName,lineNumber:182,columnNumber:13}});}))));}function Option(_ref2){var item=_ref2.item,state=_ref2.state;var searchItemStyle=(0,_hooks.useThemeProps)('TypeAheadSearchItem',{});var ref=_react.default.useRef(null);var isDisabled=state.disabledKeys.has(item.key);var isSelected=state.selectionManager.isSelected(item.key);var isFocused=state.selectionManager.focusedKey===item.key;var _useOption=(0,_listbox.useOption)({key:item.key,isDisabled:isDisabled,isSelected:isSelected,shouldFocusOnHover:true,shouldUseVirtualFocus:true},state,ref),optionProps=_useOption.optionProps;var backgroundColor=searchItemStyle.backgroundColor;var opacity=1;if(isSelected){backgroundColor=searchItemStyle._focus.backgroundColor;}else if(isFocused){backgroundColor=searchItemStyle._focus.backgroundColor;}else if(isDisabled){opacity=0.6;backgroundColor=searchItemStyle._disabled.backgroundColor;}return _react.default.createElement(_Pressable.Pressable,(0,_extends2.default)({},optionProps,{opacity:opacity,cursor:isDisabled?_reactNative.Platform.OS==='web'?'not-allowed':null:null,backgroundColor:backgroundColor,ref:ref,__self:this,__source:{fileName:_jsxFileName,lineNumber:223,columnNumber:5}}),item.rendered);}","map":{"version":3,"sources":["Typeahead.tsx"],"names":["Typeahead","React","onSelectedItemChange","options","renderItem","getOptionLabel","getOptionKey","onChange","numberOfItems","rest","item","optionLabel","optionKey","ComboBoxImplementation","layoutProps","layoutPropsList","state","triggerRef","inputRef","listBoxRef","popoverRef","triggerProps","inputProps","listBoxProps","labelProps","buttonRef","menuTrigger","toggleIconSetter","props","isOpen","buttonProps","dropdownHeight","label","autoFocus","disallowEmptySelection","Platform","searchItemStyle","ref","isDisabled","isSelected","isFocused","optionProps","key","shouldFocusOnHover","shouldUseVirtualFocus","backgroundColor","opacity"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useButton } from '@react-native-aria/button';\nimport { ComboBoxState, useComboBoxState } from '@react-stately/combobox';\nimport { useComboBox } from '@react-native-aria/combobox';\nimport { useListBox, useOption } from '@react-native-aria/listbox';\nimport { ScrollView, findNodeHandle, Platform } from 'react-native';\nimport { Item } from '@react-stately/collections';\nimport Box from '../../primitives/Box';\nimport { Pressable } from '../../primitives/Pressable';\nimport Text from '../../primitives/Text';\nimport { extractInObject } from '../../../theme/tools';\nimport { ITypeaheadProps, IComboBoxProps, layoutPropsList } from './types';\nimport { Input } from '../../primitives/Input';\nimport { useThemeProps } from '../../../hooks';\n\nexport const Typeahead = React.forwardRef(\n  (\n    {\n      onSelectedItemChange,\n      options,\n      renderItem,\n      getOptionLabel,\n      getOptionKey,\n      onChange,\n      numberOfItems,\n      ...rest\n    }: ITypeaheadProps,\n    ref?: any\n  ) => {\n    return (\n      <ComboBoxImplementation\n        {...rest}\n        onSelectionChange={onSelectedItemChange}\n        items={\n          numberOfItems !== undefined\n            ? options.slice(0, numberOfItems)\n            : options\n        }\n        onInputChange={onChange}\n        ref={ref}\n      >\n        {(item: any) => {\n          if (typeof item !== 'string' && getOptionLabel === undefined) {\n            throw new Error('Please use getOptionLabel prop');\n          }\n\n          if (item.id === undefined && getOptionKey === undefined) {\n            throw new Error('Please use getOptionKey prop');\n          }\n\n          const optionLabel = getOptionLabel ? getOptionLabel(item) : item;\n          const optionKey = getOptionKey\n            ? getOptionKey(item)\n            : item.id !== undefined\n            ? item.id\n            : optionLabel;\n\n          return (\n            <Item textValue={optionLabel} key={optionKey}>\n              {renderItem ? (\n                renderItem(item)\n              ) : (\n                <Box p={2} justifyContent=\"center\">\n                  <Text>{optionLabel}</Text>\n                </Box>\n              )}\n            </Item>\n          );\n        }}\n      </ComboBoxImplementation>\n    );\n  }\n);\n\nconst ComboBoxImplementation = React.forwardRef(\n  (props: IComboBoxProps, ref?: any) => {\n    const [layoutProps] = extractInObject(props, layoutPropsList);\n    let state = useComboBoxState(props);\n\n    let triggerRef = React.useRef(null);\n    let inputRef = React.useRef(null);\n    let listBoxRef = React.useRef(null);\n    let popoverRef = React.useRef(null);\n\n    let {\n      buttonProps: triggerProps,\n      inputProps,\n      listBoxProps,\n      labelProps,\n    } = useComboBox(\n      {\n        ...props,\n        inputRef,\n        buttonRef: triggerRef,\n        listBoxRef,\n        popoverRef,\n        menuTrigger: 'input',\n      },\n      state\n    );\n\n    const toggleIconSetter = () => {\n      if (typeof props.toggleIcon === 'function')\n        return props.toggleIcon({\n          isOpen: state.isOpen,\n        });\n      return props.toggleIcon;\n    };\n\n    let { buttonProps } = useButton(triggerProps);\n\n    return (\n      <Box flexDirection=\"row\" {...layoutProps} ref={ref}>\n        <Box flex={1}>\n          {props.label && (\n            <Text {...labelProps} pb={1}>\n              {props.label}\n            </Text>\n          )}\n          <Input\n            {...inputProps}\n            ref={inputRef}\n            InputRightElement={\n              // @ts-ignore - RN has hitSlop type inconsistent for View and Pressable!\n              <Pressable {...buttonProps} ref={triggerRef}>\n                {toggleIconSetter()}\n              </Pressable>\n            }\n          />\n\n          {state.isOpen && (\n            <ListBoxPopup\n              {...listBoxProps}\n              listBoxRef={listBoxRef}\n              popoverRef={popoverRef}\n              state={state}\n              label={props.label}\n            />\n          )}\n        </Box>\n      </Box>\n    );\n  }\n);\n\ntype IListBoxProps = {\n  popoverRef: any;\n  listBoxRef: any;\n  state: ComboBoxState<any>;\n  dropdownHeight: number;\n  label: string;\n};\n\nfunction ListBoxPopup(props: IListBoxProps) {\n  let { popoverRef, listBoxRef, state, dropdownHeight, label } = props;\n\n  let { listBoxProps } = useListBox(\n    {\n      label,\n      autoFocus: state.focusStrategy,\n      disallowEmptySelection: true,\n    },\n    state,\n    listBoxRef\n  );\n\n  return (\n    <Box ref={popoverRef}>\n      <Box position=\"absolute\" width=\"100%\" maxHeight={dropdownHeight ?? 200}>\n        <ScrollView\n          {...listBoxProps}\n          keyboardShouldPersistTaps=\"handled\"\n          ref={(node) => {\n            if (Platform.OS === 'web') {\n              listBoxRef.current = findNodeHandle(node);\n            } else {\n              listBoxRef.current = node;\n            }\n          }}\n        >\n          {[...state.collection].map((item) => (\n            <Option key={item.key} item={item} state={state} />\n          ))}\n        </ScrollView>\n      </Box>\n    </Box>\n  );\n}\n\nfunction Option({ item, state }: { item: any; state: ComboBoxState<any> }) {\n  const searchItemStyle = useThemeProps('TypeAheadSearchItem', {});\n\n  let ref = React.useRef(null);\n  let isDisabled = state.disabledKeys.has(item.key);\n  let isSelected = state.selectionManager.isSelected(item.key);\n  let isFocused = state.selectionManager.focusedKey === item.key;\n\n  let { optionProps } = useOption(\n    {\n      key: item.key,\n      isDisabled,\n      isSelected,\n      shouldFocusOnHover: true,\n      shouldUseVirtualFocus: true,\n    },\n    state,\n    ref\n  );\n\n  let backgroundColor = searchItemStyle.backgroundColor;\n  let opacity = 1;\n\n  if (isSelected) {\n    backgroundColor = searchItemStyle._focus.backgroundColor;\n  } else if (isFocused) {\n    backgroundColor = searchItemStyle._focus.backgroundColor;\n  } else if (isDisabled) {\n    opacity = 0.6;\n    backgroundColor = searchItemStyle._disabled.backgroundColor;\n  }\n\n  return (\n    <Pressable\n      {...optionProps}\n      opacity={opacity}\n      cursor={\n        isDisabled ? (Platform.OS === 'web' ? 'not-allowed' : null) : null\n      }\n      backgroundColor={backgroundColor}\n      ref={ref}\n    >\n      {item.rendered}\n    </Pressable>\n  );\n}\n"]},"metadata":{},"sourceType":"script"}