{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.mode=mode;exports.randomColor=randomColor;exports.isLight=exports.isDark=exports.tone=exports.getColor=exports.transparentize=void 0;var _lodash=_interopRequireDefault(require(\"lodash.get\"));var _lodash2=_interopRequireDefault(require(\"lodash.isempty\"));var _tinycolor=_interopRequireDefault(require(\"tinycolor2\"));function mode(light,dark){return function(props){return props.colorMode==='dark'?dark:light;};}var transparentize=function transparentize(color,opacity){return function(theme){var raw=getColor(theme,color);return(0,_tinycolor.default)(raw).setAlpha(opacity).toRgbString();};};exports.transparentize=transparentize;var getColor=function getColor(theme,color,fallback){var hex=(0,_lodash.default)(theme,\"colors.\"+color,color);var isValid=(0,_tinycolor.default)(hex).isValid();return isValid?hex:fallback;};exports.getColor=getColor;var tone=function tone(color){return function(theme){var hex=getColor(theme,color);var isDark=(0,_tinycolor.default)(hex).isDark();return isDark?'dark':'light';};};exports.tone=tone;var isDark=function isDark(color){return function(theme){return tone(color)(theme)==='dark';};};exports.isDark=isDark;var isLight=function isLight(color){return function(theme){return tone(color)(theme)==='light';};};exports.isLight=isLight;function randomColor(opts){var fallback=_tinycolor.default.random().toHexString();if(!opts||(0,_lodash2.default)(opts)){return fallback;}if(opts.string&&opts.colors){return randomColorFromList(opts.string,opts.colors);}if(opts.string&&!opts.colors){return randomColorFromString(opts.string);}if(opts.colors&&!opts.string){return randomFromList(opts.colors);}return fallback;}function randomFromList(list){return list[Math.floor(Math.random()*list.length)];}function randomColorFromList(str,list){var index=0;if(str.length===0)return list[0];for(var i=0;i<str.length;i++){index=str.charCodeAt(i)+((index<<5)-index);index=index&index;}index=(index%list.length+list.length)%list.length;return list[index];}function randomColorFromString(str){var hash=0;if(str.length===0)return hash.toString();for(var i=0;i<str.length;i++){hash=str.charCodeAt(i)+((hash<<5)-hash);hash=hash&hash;}var color='#';for(var j=0;j<3;j++){var value=hash>>j*8&255;color+=('00'+value.toString(16)).substr(-2);}return color;}","map":{"version":3,"sources":["colors.ts"],"names":["props","transparentize","raw","getColor","hex","isValid","tone","isDark","isLight","fallback","Color","opts","randomColorFromList","randomColorFromString","randomFromList","list","Math","index","str","i","hash","color","j","value"],"mappings":"yRAAA,GAAA,CAAA,OAAA,CAAA,sBAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA,CACA,GAAA,CAAA,QAAA,CAAA,sBAAA,CAAA,OAAA,CAAA,gBAAA,CAAA,CAAA,CACA,GAAA,CAAA,UAAA,CAAA,sBAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA,CAGO,QAAA,CAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAqC,CAC1C,MAAO,UAAA,KAAA,CAAA,CAAA,MAAiBA,CAAAA,KAAK,CAALA,SAAAA,GAAAA,MAAAA,CAAAA,IAAAA,CAAjB,KAAA,CAAP,CAAA,CAGK,IAAMC,CAAAA,cAAc,CAAdA,QAAAA,CAAAA,cAAAA,CAAiB,KAAjBA,CAAiB,OAAjBA,CAAiB,CAAA,MAAoC,UAAA,KAAA,CAE7D,CACH,GAAMC,CAAAA,GAAG,CAAGC,QAAQ,CAAA,KAAA,CAApB,KAAoB,CAApB,CACA,MAAO,CAAA,EAAA,UAAA,CAAA,OAAA,EAAA,GAAA,EAAA,QAAA,CAAA,OAAA,EAAP,WAAO,EAAP,CAJ4B,CAAA,CAAvB,CAAA,C,sCAOA,GAAMA,CAAAA,QAAQ,CAARA,QAAAA,CAAAA,QAAAA,CAAW,KAAXA,CAAW,KAAXA,CAAW,QAAXA,CAA8D,CACzE,GAAMC,CAAAA,GAAG,CAAG,CAAA,EAAA,OAAA,CAAA,OAAA,EAAA,KAAA,CAAA,UAAA,KAAA,CAAZ,KAAY,CAAZ,CACA,GAAMC,CAAAA,OAAO,CAAG,CAAA,EAAA,UAAA,CAAA,OAAA,EAAA,GAAA,EAAhB,OAAgB,EAAhB,CACA,MAAOA,CAAAA,OAAO,CAAA,GAAA,CAAd,QAAA,CAHK,CAAA,C,0BAMA,GAAMC,CAAAA,IAAI,CAAJA,QAAAA,CAAAA,IAAAA,CAAO,KAAPA,CAAO,CAAA,MAAmB,UAAA,KAAA,CAAiB,CACtD,GAAMF,CAAAA,GAAG,CAAGD,QAAQ,CAAA,KAAA,CAApB,KAAoB,CAApB,CACA,GAAMI,CAAAA,MAAM,CAAG,CAAA,EAAA,UAAA,CAAA,OAAA,EAAA,GAAA,EAAf,MAAe,EAAf,CACA,MAAOA,CAAAA,MAAM,CAAA,MAAA,CAAb,OAAA,CAHkB,CAAA,CAAb,CAAA,C,kBAMA,GAAMA,CAAAA,MAAM,CAANA,QAAAA,CAAAA,MAAAA,CAAS,KAATA,CAAS,CAAA,MAAmB,UAAA,KAAA,CAAA,CAAA,MACvCD,CAAAA,IAAI,CAAJA,KAAI,CAAJA,CAAAA,KAAAA,IADuC,MAAA,CAAnB,CAAA,CAAf,CAAA,C,sBAGA,GAAME,CAAAA,OAAO,CAAPA,QAAAA,CAAAA,OAAAA,CAAU,KAAVA,CAAU,CAAA,MAAmB,UAAA,KAAA,CAAA,CAAA,MACxCF,CAAAA,IAAI,CAAJA,KAAI,CAAJA,CAAAA,KAAAA,IADwC,OAAA,CAAnB,CAAA,CAAhB,CAAA,C,wBAcA,QAAA,CAAA,WAAA,CAAA,IAAA,CAAgD,CACrD,GAAMG,CAAAA,QAAQ,CAAGC,UAAAA,CAAAA,OAAAA,CAAAA,MAAAA,GAAjB,WAAiBA,EAAjB,CAEA,GAAI,CAAA,IAAA,EAAS,CAAA,EAAA,QAAA,CAAA,OAAA,EAAb,IAAa,CAAb,CAA4B,CAC1B,MAAA,CAAA,QAAA,CAGF,IAAIC,IAAI,CAAJA,MAAAA,EAAeA,IAAI,CAAvB,MAAA,CAAgC,CAC9B,MAAOC,CAAAA,mBAAmB,CAACD,IAAI,CAAL,MAAA,CAAcA,IAAI,CAA5C,MAA0B,CAA1B,CAGF,IAAIA,IAAI,CAAJA,MAAAA,EAAe,CAACA,IAAI,CAAxB,MAAA,CAAiC,CAC/B,MAAOE,CAAAA,qBAAqB,CAACF,IAAI,CAAjC,MAA4B,CAA5B,CAGF,IAAIA,IAAI,CAAJA,MAAAA,EAAe,CAACA,IAAI,CAAxB,MAAA,CAAiC,CAC/B,MAAOG,CAAAA,cAAc,CAACH,IAAI,CAA1B,MAAqB,CAArB,CAGF,OAAA,CAAA,QAAA,CAGF,SAAA,CAAA,cAAA,CAAA,IAAA,CAAwC,CACtC,MAAOI,CAAAA,IAAI,CAACC,IAAI,CAAJA,KAAAA,CAAWA,IAAI,CAAJA,MAAAA,GAAgBD,IAAI,CAA3C,MAAYC,CAAD,CAAX,CAGF,SAAA,CAAA,mBAAA,CAAA,GAAA,CAAA,IAAA,CAA0D,CACxD,GAAIC,CAAAA,KAAK,CAAT,CAAA,CACA,GAAIC,GAAG,CAAHA,MAAAA,GAAJ,CAAA,CAAsB,MAAOH,CAAAA,IAAI,CAAX,CAAW,CAAX,CACtB,IAAK,GAAII,CAAAA,CAAC,CAAV,CAAA,CAAgBA,CAAC,CAAGD,GAAG,CAAvB,MAAA,CAAgCC,CAAhC,EAAA,CAAqC,CACnCF,KAAK,CAAGC,GAAG,CAAHA,UAAAA,CAAAA,CAAAA,GAAqB,CAACD,KAAK,EAAN,CAAA,EAA7BA,KAAQC,CAARD,CACAA,KAAK,CAAGA,KAAK,CAAbA,KAAAA,CAEFA,CAAAA,KAAK,CAAG,CAAEA,KAAK,CAAGF,IAAI,CAAb,MAACE,CAAuBF,IAAI,CAA7B,MAAA,EAAwCA,IAAI,CAApDE,MAAAA,CACA,MAAOF,CAAAA,IAAI,CAAX,KAAW,CAAX,CAGF,SAAA,CAAA,qBAAA,CAAA,GAAA,CAA4C,CAC1C,GAAIK,CAAAA,IAAI,CAAR,CAAA,CACA,GAAIF,GAAG,CAAHA,MAAAA,GAAJ,CAAA,CAAsB,MAAOE,CAAAA,IAAI,CAAX,QAAOA,EAAP,CACtB,IAAK,GAAID,CAAAA,CAAC,CAAV,CAAA,CAAgBA,CAAC,CAAGD,GAAG,CAAvB,MAAA,CAAgCC,CAAhC,EAAA,CAAqC,CACnCC,IAAI,CAAGF,GAAG,CAAHA,UAAAA,CAAAA,CAAAA,GAAqB,CAACE,IAAI,EAAL,CAAA,EAA5BA,IAAOF,CAAPE,CACAA,IAAI,CAAGA,IAAI,CAAXA,IAAAA,CAEF,IAAIC,CAAAA,KAAK,CAAT,GAAA,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAV,CAAA,CAAgBA,CAAC,CAAjB,CAAA,CAAuBA,CAAvB,EAAA,CAA4B,CAC1B,GAAMC,CAAAA,KAAK,CAAIH,IAAI,EAAKE,CAAC,CAAX,CAACF,CAAf,GAAA,CACAC,KAAK,EAAI,CAAC,KAAOE,KAAK,CAALA,QAAAA,CAAR,EAAQA,CAAR,EAAA,MAAA,CAAmC,CAA5CF,CAAS,CAATA,CAEF,OAAA,CAAA,KAAA,CACD","sourcesContent":["import get from 'lodash.get';\nimport isEmpty from 'lodash.isempty';\nimport Color from 'tinycolor2';\nimport type { Dict } from './utils';\n\nexport function mode(light: any, dark: any) {\n  return (props: any) => (props.colorMode === 'dark' ? dark : light);\n}\n\nexport const transparentize = (color: string, opacity: number) => (\n  theme: Dict\n) => {\n  const raw = getColor(theme, color);\n  return Color(raw).setAlpha(opacity).toRgbString();\n};\n\nexport const getColor = (theme: Dict, color: string, fallback?: string) => {\n  const hex = get(theme, `colors.${color}`, color);\n  const isValid = Color(hex).isValid();\n  return isValid ? hex : fallback;\n};\n\nexport const tone = (color: string) => (theme: Dict) => {\n  const hex = getColor(theme, color);\n  const isDark = Color(hex).isDark();\n  return isDark ? 'dark' : 'light';\n};\n\nexport const isDark = (color: string) => (theme: Dict) =>\n  tone(color)(theme) === 'dark';\n\nexport const isLight = (color: string) => (theme: Dict) =>\n  tone(color)(theme) === 'light';\n\ninterface RandomColorOptions {\n  /**\n   * If passed, string will be used to generate\n   * random color\n   */\n  string?: string;\n  /**\n   * List of colors to pick from at random\n   */\n  colors?: string[];\n}\nexport function randomColor(opts?: RandomColorOptions) {\n  const fallback = Color.random().toHexString();\n\n  if (!opts || isEmpty(opts)) {\n    return fallback;\n  }\n\n  if (opts.string && opts.colors) {\n    return randomColorFromList(opts.string, opts.colors);\n  }\n\n  if (opts.string && !opts.colors) {\n    return randomColorFromString(opts.string);\n  }\n\n  if (opts.colors && !opts.string) {\n    return randomFromList(opts.colors);\n  }\n\n  return fallback;\n}\n\nfunction randomFromList(list: string[]) {\n  return list[Math.floor(Math.random() * list.length)];\n}\n\nfunction randomColorFromList(str: string, list: string[]) {\n  let index = 0;\n  if (str.length === 0) return list[0];\n  for (let i = 0; i < str.length; i++) {\n    index = str.charCodeAt(i) + ((index << 5) - index);\n    index = index & index;\n  }\n  index = ((index % list.length) + list.length) % list.length;\n  return list[index];\n}\n\nfunction randomColorFromString(str: string) {\n  let hash = 0;\n  if (str.length === 0) return hash.toString();\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    hash = hash & hash;\n  }\n  let color = '#';\n  for (let j = 0; j < 3; j++) {\n    const value = (hash >> (j * 8)) & 255;\n    color += ('00' + value.toString(16)).substr(-2);\n  }\n  return color;\n}\n"]},"metadata":{},"sourceType":"script"}