{"ast":null,"code":"Object.defineProperty(exports,\"__esModule\",{value:true});exports.useTheme=useTheme;var _react=require(\"react\");var _NativeBaseContext=require(\"./../core/NativeBaseContext\");function useTheme(){var theme=(0,_react.useContext)(_NativeBaseContext.NativeBaseContext);if(!theme){throw Error('useTheme: `theme` is undefined. Seems you forgot to wrap your app in `<NativeBaseProvider />`');}return theme;}","map":{"version":3,"sources":["useTheme.ts"],"names":["theme","NativeBaseContext","Error"],"mappings":"mFAAA,GAAA,CAAA,MAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CACA,GAAA,CAAA,kBAAA,CAAA,OAAA,+BAAA,CAEO,QAAA,CAAA,QAAA,EAA4D,CACjE,GAAMA,CAAAA,KAAK,CAAG,CAAA,EAAA,MAAA,CAAA,UAAA,EACXC,kBAAAA,CADH,iBAAc,CAAd,CAGA,GAAI,CAAJ,KAAA,CAAY,CACV,KAAMC,CAAAA,KAAK,CAAX,+FAAW,CAAX,CAKF,OAAA,CAAA,KAAA,CACD","sourcesContent":["import { useContext } from 'react';\nimport { NativeBaseContext } from './../core/NativeBaseContext';\n\nexport function useTheme<T extends object = Record<string, any>>() {\n  const theme = useContext(\n    (NativeBaseContext as unknown) as React.Context<T | undefined>\n  );\n  if (!theme) {\n    throw Error(\n      'useTheme: `theme` is undefined. Seems you forgot to wrap your app in `<NativeBaseProvider />`'\n    );\n  }\n\n  return theme;\n}\n"]},"metadata":{},"sourceType":"script"}