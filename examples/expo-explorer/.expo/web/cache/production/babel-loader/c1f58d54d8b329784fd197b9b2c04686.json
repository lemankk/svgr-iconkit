{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _react=_interopRequireWildcard(require(\"react\"));var _primitives=require(\"../../primitives\");var _useThemeProps=require(\"../../../hooks/useThemeProps\");var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/Progress/index.tsx\";var Progress=function Progress(props,ref){var _usePropsResolution=(0,_useThemeProps.usePropsResolution)('Progress',props),min=_usePropsResolution.min,max=_usePropsResolution.max,value=_usePropsResolution.value,isIndeterminate=_usePropsResolution.isIndeterminate,newProps=(0,_objectWithoutProperties2.default)(_usePropsResolution,[\"min\",\"max\",\"value\",\"isIndeterminate\"]);var innerBg=newProps.innerBg;var innerProps={bg:innerBg,shadow:0,rounded:newProps.rounded,height:'100%',w:value<max&&value>min?(value-min)/(max-min)*100+'%':value>min?'100%':'0%',display:'flex',alignItems:'center',justifyContent:'center',color:'white'};return _react.default.createElement(_primitives.Box,(0,_extends2.default)({},newProps,{style:newProps.style,ref:ref,accessible:true,accessibilityRole:\"progressbar\",accessibilityValue:{min:min,max:max,now:value<max&&value>min?(value-min)/(max-min)*100:value>min?100:0},__self:_this,__source:{fileName:_jsxFileName,lineNumber:74,columnNumber:5}}),isIndeterminate?_react.default.createElement(_primitives.Box,(0,_extends2.default)({},innerProps,{children:newProps.children,__self:_this,__source:{fileName:_jsxFileName,lineNumber:104,columnNumber:9}})):_react.default.createElement(_primitives.Box,(0,_extends2.default)({},innerProps,{children:newProps.children,__self:_this,__source:{fileName:_jsxFileName,lineNumber:106,columnNumber:9}})));};var _default=(0,_react.memo)((0,_react.forwardRef)(Progress));exports.default=_default;","map":{"version":3,"sources":["index.tsx"],"names":["Progress","min","max","value","isIndeterminate","newProps","innerBg","innerProps","bg","shadow","rounded","height","w","display","alignItems","justifyContent","color","now"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Box, IBoxProps } from '../../primitives';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\n\nexport interface IProgressProps extends IBoxProps {\n  /**\n   * Value of Progress.\n   * @default 0\n   */\n  value?: number;\n  /**\n   * Defines height of Progress\n   * @default sm\n   */\n  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | '2xl' | string;\n  /**\n   * The color scheme of the progress. This should be one of the color keys in the theme (e.g.\"green\", \"red\").\n   * @default primary\n   */\n  colorScheme?: string;\n  /**\n   * Whether progress is indeterminate\n   * @default false\n   */\n  isIndeterminate?: any;\n  /**\n   * Min progress value\n   * @default 0\n   */\n  min?: number;\n  /**\n   * Max progress value\n   * @default 100\n   */\n  max?: number;\n}\n\nconst Progress = (props: IProgressProps, ref?: any) => {\n  // const width = new Animated.Value(0);\n  // useEffect(() => {\n  //   Animated.loop(\n  //     Animated.timing(width, {\n  //       toValue: 270,\n  //       duration: 1000,\n  //       useNativeDriver: true,\n  //     })\n  //   ).start();\n  // });\n\n  const { min, max, value, isIndeterminate, ...newProps } = usePropsResolution(\n    'Progress',\n    props\n  );\n  const { innerBg } = newProps;\n\n  const innerProps = {\n    bg: innerBg,\n    shadow: 0,\n    rounded: newProps.rounded,\n    height: '100%',\n    w:\n      value < max && value > min\n        ? ((value - min) / (max - min)) * 100 + '%'\n        : value > min\n        ? '100%'\n        : '0%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: 'white',\n  };\n\n  return (\n    <Box\n      {...newProps}\n      style={newProps.style}\n      ref={ref}\n      accessible\n      accessibilityRole=\"progressbar\"\n      accessibilityValue={{\n        min: min,\n        max: max,\n        now:\n          value < max && value > min\n            ? ((value - min) / (max - min)) * 100\n            : value > min\n            ? 100\n            : 0,\n      }}\n    >\n      {isIndeterminate ? (\n        // <Animated.View\n        //   style={[\n        //     {\n        //       transform: [\n        //         {\n        //           translateX: width,\n        //         },\n        //       ],\n        //     },\n        //   ]}\n        // >\n        // </Animated.View>\n        <Box {...innerProps} children={newProps.children} />\n      ) : (\n        <Box {...innerProps} children={newProps.children} />\n      )}\n    </Box>\n  );\n};\n\nexport default memo(forwardRef(Progress));\n"]},"metadata":{},"sourceType":"script"}