{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _react=_interopRequireWildcard(require(\"react\"));var _Modal=require(\"../../composites/Modal\");var _hooks=require(\"../../../hooks\");var _reactNative=require(\"react-native-web/dist/index\");var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/Actionsheet/Actionsheet.tsx\";var Actionsheet=function Actionsheet(_ref,ref){var children=_ref.children,props=(0,_objectWithoutProperties2.default)(_ref,[\"children\"]);var _usePropsResolution=(0,_hooks.usePropsResolution)('Actionsheet',props),isOpen=_usePropsResolution.isOpen,disableOverlay=_usePropsResolution.disableOverlay,onClose=_usePropsResolution.onClose,newProps=(0,_objectWithoutProperties2.default)(_usePropsResolution,[\"isOpen\",\"disableOverlay\",\"onClose\"]);var pan=_react.default.useRef(new _reactNative.Animated.ValueXY()).current;var sheetHeight=_react.default.useRef(0);_react.default.useEffect(function(){if(!isOpen){setTimeout(function(){pan.setValue({x:0,y:0});},250);}},[isOpen,pan]);var panResponder=_react.default.useRef(_reactNative.PanResponder.create({onMoveShouldSetPanResponder:function onMoveShouldSetPanResponder(_evt,gestureState){return gestureState.dx!==0||gestureState.dy!==0;},onPanResponderMove:function onPanResponderMove(e,gestureState){if(gestureState.dy>0){_reactNative.Animated.event([null,{dy:pan.y}],{useNativeDriver:false})(e,gestureState);}},onPanResponderRelease:function onPanResponderRelease(_e,gestureState){if(sheetHeight.current/4-gestureState.dy<0){_reactNative.Animated.timing(pan,{toValue:{x:0,y:sheetHeight.current},duration:150,useNativeDriver:true}).start(function(){onClose();});}else{_reactNative.Animated.spring(pan,{toValue:{x:0,y:0},overshootClamping:true,useNativeDriver:true}).start();}}})).current;return _react.default.createElement(_Modal.Modal,(0,_extends2.default)({isOpen:isOpen,onClose:onClose,justifyContent:\"flex-end\",animationPreset:\"slide\"},newProps,{overlayVisible:disableOverlay?false:true,closeOnOverlayClick:disableOverlay?false:true,ref:ref,__self:_this,__source:{fileName:_jsxFileName,lineNumber:62,columnNumber:5}}),_react.default.createElement(_reactNative.Animated.View,(0,_extends2.default)({style:{transform:[{translateY:pan.y}],width:'100%'},onLayout:function onLayout(event){var height=event.nativeEvent.layout.height;sheetHeight.current=height;}},panResponder.panHandlers,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:73,columnNumber:7}}),children));};var _default=(0,_react.memo)((0,_react.forwardRef)(Actionsheet));exports.default=_default;","map":{"version":3,"sources":["Actionsheet.tsx"],"names":["Actionsheet","children","props","isOpen","disableOverlay","onClose","newProps","pan","React","Animated","sheetHeight","setTimeout","x","y","panResponder","PanResponder","onMoveShouldSetPanResponder","gestureState","onPanResponderMove","dy","useNativeDriver","onPanResponderRelease","toValue","duration","overshootClamping","transform","translateY","width","height","event"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Modal } from '../../composites/Modal';\nimport type { IActionsheetProps } from './types';\nimport { usePropsResolution } from '../../../hooks';\nimport { Animated, PanResponder } from 'react-native';\n\nconst Actionsheet = ({ children, ...props }: IActionsheetProps, ref: any) => {\n  const { isOpen, disableOverlay, onClose, ...newProps } = usePropsResolution(\n    'Actionsheet',\n    props\n  );\n  let pan = React.useRef(new Animated.ValueXY()).current;\n  let sheetHeight = React.useRef(0);\n\n  React.useEffect(() => {\n    if (!isOpen) {\n      // Reset value when modal close animation is completed\n      setTimeout(() => {\n        pan.setValue({\n          x: 0,\n          y: 0,\n        });\n      }, 250);\n    }\n  }, [isOpen, pan]);\n\n  const panResponder = React.useRef(\n    PanResponder.create({\n      onMoveShouldSetPanResponder: (_evt, gestureState) => {\n        // return true if user is swiping, return false if it's a single click\n        return gestureState.dx !== 0 || gestureState.dy !== 0;\n      },\n      onPanResponderMove: (e, gestureState) => {\n        if (gestureState.dy > 0) {\n          Animated.event([null, { dy: pan.y }], {\n            useNativeDriver: false,\n          })(e, gestureState);\n        }\n      },\n      onPanResponderRelease: (_e, gestureState) => {\n        // If sheet is dragged 1/4th of it's height, close it\n        if (sheetHeight.current / 4 - gestureState.dy < 0) {\n          Animated.timing(pan, {\n            toValue: { x: 0, y: sheetHeight.current },\n            duration: 150,\n            useNativeDriver: true,\n          }).start(() => {\n            onClose();\n          });\n        } else {\n          Animated.spring(pan, {\n            toValue: { x: 0, y: 0 },\n            overshootClamping: true,\n            useNativeDriver: true,\n          }).start();\n        }\n      },\n    })\n  ).current;\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      justifyContent=\"flex-end\"\n      //@ts-ignore - internal use only\n      animationPreset=\"slide\"\n      {...newProps}\n      overlayVisible={disableOverlay ? false : true}\n      closeOnOverlayClick={disableOverlay ? false : true}\n      ref={ref}\n    >\n      <Animated.View\n        style={{\n          transform: [{ translateY: pan.y }],\n          width: '100%',\n        }}\n        onLayout={(event) => {\n          const { height } = event.nativeEvent.layout;\n          sheetHeight.current = height;\n        }}\n        {...panResponder.panHandlers}\n      >\n        {children}\n      </Animated.View>\n    </Modal>\n  );\n};\n\nexport default memo(forwardRef(Actionsheet));\n"]},"metadata":{},"sourceType":"script"}