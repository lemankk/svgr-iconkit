{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.useSafeArea=useSafeArea;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _reactNativeSafeAreaContext=require(\"react-native-safe-area-context\");var _utils=require(\"./utils\");var _useTheme=require(\"./../useTheme\");function useSafeArea(props){var insets=(0,_reactNativeSafeAreaContext.useSafeAreaInsets)();var sizes=(0,_useTheme.useTheme)().sizes;var _getSortedProps=(0,_utils.getSortedProps)(props),safeAreaProps=_getSortedProps.safeAreaProps,paddingProps=_getSortedProps.paddingProps,sansPaddingProps=_getSortedProps.sansPaddingProps;if(!Object.keys(safeAreaProps).length){return props;}var calcualtedPaddingProps=(0,_utils.calculatePaddingProps)(safeAreaProps,paddingProps,insets,sizes);return(0,_extends2.default)({},sansPaddingProps,paddingProps,calcualtedPaddingProps);}","map":{"version":3,"sources":["index.ts"],"names":["insets","sizes","safeAreaProps","paddingProps","sansPaddingProps","Object","calcualtedPaddingProps"],"mappings":"4PAAA,GAAA,CAAA,2BAAA,CAAA,OAAA,CAAA,gCAAA,CAAA,CACA,GAAA,CAAA,MAAA,CAAA,OAAA,WAAA,CACA,GAAA,CAAA,SAAA,CAAA,OAAA,iBAAA,CAEO,QAAA,CAAA,WAAA,CAAA,KAAA,CAAiC,CACtC,GAAMA,CAAAA,MAAM,CAAG,CAAA,EAAA,2BAAA,CAAf,iBAAe,GAAf,CACA,GAAMC,CAAAA,KAAK,CAAG,CAAA,EAAA,SAAA,CAAA,QAAA,IAAd,KAAA,CAFsC,GAAA,CAAA,eAAA,CAGoB,CAAA,EAAA,MAAA,CAAA,cAAA,EAHpB,KAGoB,CAHpB,CAG9BC,aAH8B,CAAA,eAAA,CAAA,aAAA,CAGfC,YAHe,CAAA,eAAA,CAAA,YAAA,CAGDC,gBAHC,CAAA,eAAA,CAAA,gBAAA,CAMtC,GAAI,CAACC,MAAM,CAANA,IAAAA,CAAAA,aAAAA,EAAL,MAAA,CAAwC,CACtC,MAAA,CAAA,KAAA,CAEF,IAAIC,CAAAA,sBAAsB,CAAG,CAAA,EAAA,MAAA,CAAA,qBAAA,EAAA,aAAA,CAAA,YAAA,CAAA,MAAA,CAA7B,KAA6B,CAA7B,CAMA,MAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAA,EAAA,CAAA,gBAAA,CAAA,YAAA,CAAA,sBAAA,CAAA,CACD","sourcesContent":["import { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { getSortedProps, calculatePaddingProps } from './utils';\nimport { useTheme } from './../useTheme';\n\nexport function useSafeArea(props: any) {\n  const insets = useSafeAreaInsets();\n  const sizes = useTheme().sizes;\n  const { safeAreaProps, paddingProps, sansPaddingProps } = getSortedProps(\n    props\n  );\n  if (!Object.keys(safeAreaProps).length) {\n    return props;\n  }\n  let calcualtedPaddingProps = calculatePaddingProps(\n    safeAreaProps,\n    paddingProps,\n    insets,\n    sizes\n  );\n  return { ...sansPaddingProps, ...paddingProps, ...calcualtedPaddingProps };\n}\n"]},"metadata":{},"sourceType":"script"}