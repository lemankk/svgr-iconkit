{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.NativeBaseProvider=void 0;var _react=_interopRequireDefault(require(\"react\"));var _native=require(\"styled-components/native\");var _reactNativeSafeAreaContext=require(\"react-native-safe-area-context\");var _utils=require(\"@react-native-aria/utils\");var _theme=require(\"./../theme\");var _HybridProvider=_interopRequireDefault(require(\"./hybrid-overlay/HybridProvider\"));var _overlays=require(\"@react-native-aria/overlays\");var _Toast=require(\"../components/composites/Toast\");var _NativeBaseContext=require(\"./NativeBaseContext\");var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/core/NativeBaseProvider.tsx\";var NativeBaseProvider=function NativeBaseProvider(props){var _config$theme;var colorModeManager=props.colorModeManager,_props$config=props.config,config=_props$config===void 0?{}:_props$config,children=props.children,_props$theme=props.theme,propsTheme=_props$theme===void 0?_theme.theme:_props$theme,initialWindowMetrics=props.initialWindowMetrics;var theme=(_config$theme=config.theme)!=null?_config$theme:propsTheme;return _react.default.createElement(_native.ThemeProvider,{theme:theme,__self:_this,__source:{fileName:_jsxFileName,lineNumber:38,columnNumber:5}},_react.default.createElement(_NativeBaseContext.NativeBaseConfigProvider,{config:config,__self:_this,__source:{fileName:_jsxFileName,lineNumber:39,columnNumber:7}},_react.default.createElement(_reactNativeSafeAreaContext.SafeAreaProvider,{initialMetrics:initialWindowMetrics!=null?initialWindowMetrics:_reactNativeSafeAreaContext.initialWindowMetrics,__self:_this,__source:{fileName:_jsxFileName,lineNumber:40,columnNumber:9}},_react.default.createElement(_HybridProvider.default,{colorModeManager:colorModeManager,options:theme.config,__self:_this,__source:{fileName:_jsxFileName,lineNumber:43,columnNumber:11}},_react.default.createElement(_overlays.OverlayProvider,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:47,columnNumber:13}},_react.default.createElement(_Toast.ToastProvider,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:48,columnNumber:15}},_react.default.createElement(_utils.SSRProvider,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:49,columnNumber:17}},children)))))));};exports.NativeBaseProvider=NativeBaseProvider;","map":{"version":3,"sources":["NativeBaseProvider.tsx"],"names":["NativeBaseProvider","colorModeManager","config","children","propsTheme","defaultTheme","initialWindowMetrics","props","theme","defaultInitialWindowMetrics"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { ThemeProvider } from 'styled-components/native';\nimport {\n  SafeAreaProvider,\n  initialWindowMetrics as defaultInitialWindowMetrics,\n} from 'react-native-safe-area-context';\nimport { SSRProvider } from '@react-native-aria/utils';\nimport { theme as defaultTheme, ITheme } from './../theme';\nimport type { IColorModeProviderProps } from './color-mode';\nimport HybridProvider from './hybrid-overlay/HybridProvider';\nimport { OverlayProvider } from '@react-native-aria/overlays';\nimport { ToastProvider } from '../components/composites/Toast';\nimport {\n  INativebaseConfig,\n  NativeBaseConfigProvider,\n} from './NativeBaseContext';\n\nexport interface NativeBaseProviderProps {\n  theme?: ITheme;\n  colorModeManager?: IColorModeProviderProps['colorModeManager'];\n  children?: React.ReactNode;\n  initialWindowMetrics?: any;\n  config?: INativebaseConfig;\n  // Refer https://github.com/th3rdwave/react-native-safe-area-context#testing\n}\n\nconst NativeBaseProvider = (props: NativeBaseProviderProps) => {\n  const {\n    colorModeManager,\n    config = {},\n    children,\n    theme: propsTheme = defaultTheme,\n    initialWindowMetrics,\n  } = props;\n  const theme = config.theme ?? propsTheme;\n\n  return (\n    <ThemeProvider theme={theme}>\n      <NativeBaseConfigProvider config={config}>\n        <SafeAreaProvider\n          initialMetrics={initialWindowMetrics ?? defaultInitialWindowMetrics}\n        >\n          <HybridProvider\n            colorModeManager={colorModeManager}\n            options={theme.config}\n          >\n            <OverlayProvider>\n              <ToastProvider>\n                <SSRProvider>{children}</SSRProvider>\n              </ToastProvider>\n            </OverlayProvider>\n          </HybridProvider>\n        </SafeAreaProvider>\n      </NativeBaseConfigProvider>\n    </ThemeProvider>\n  );\n};\n\nexport { NativeBaseProvider };\n"]},"metadata":{},"sourceType":"script"}