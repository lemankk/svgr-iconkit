{"ast":null,"code":"import _taggedTemplateLiteralLoose from\"@babel/runtime/helpers/taggedTemplateLiteralLoose\";var _templateObject,_templateObject2,_templateObject3,_templateObject4;import React from\"react\";import{ClipboardStatic}from\"react-native-web/dist/index\";import{Box,SimpleGrid,Text,Icon,Pressable,useToast}from\"native-base\";import styled,{css}from\"styled-components/native\";import Clipboard from\"expo-clipboard\";var IconContent=styled(Box)(_templateObject||(_templateObject=_taggedTemplateLiteralLoose([\"\\n  border-bottom-width: 1px;\\n  border-bottom-color: #ccc;\\n  align-items: center;\\n  justify-content: center;\\n  width: 100px;\\n  height: 70px;\\n\"])));var IconWrapper=styled(Pressable)(_templateObject2||(_templateObject2=_taggedTemplateLiteralLoose([\"\\n  border: 1px solid #ccc;\\n  border-radius: 5px;\\n  width: 100px;\\n  height: 100px;\\n\\n\"])));var IconListWrapper=styled.View(_templateObject3||(_templateObject3=_taggedTemplateLiteralLoose([\"\\nposition: relative;\\nwidth: 100%;\\n\"])));IconListWrapper.displayName='IconListWrapper';var IconLabel=styled(Text)(_templateObject4||(_templateObject4=_taggedTemplateLiteralLoose([\"\\n  align-items: center;\\n  justify-content: center;\\n  padding: 2px;\\n  width: 100px;\\n  height: 30px;\\n  font-size: 9px;\\n  text-align: center;\\n\"])));export default function IconList(_ref){var maxCount=_ref.maxCount,_ref$allVariantNames=_ref.allVariantNames,allVariantNames=_ref$allVariantNames===void 0?[]:_ref$allVariantNames,_ref$color=_ref.color,color=_ref$color===void 0?\"#ccc\":_ref$color,_ref$size=_ref.size,size=_ref$size===void 0?24:_ref$size,_ref$variant=_ref.variant,variant=_ref$variant===void 0?\"regular\":_ref$variant,_ref$allIconNames=_ref.allIconNames,allIconNames=_ref$allIconNames===void 0?[]:_ref$allIconNames,Iconset=_ref.component,children=_ref.children,onIconPress=_ref.onIconPress,_ref$numColumn=_ref.numColumn,numColumn=_ref$numColumn===void 0?3:_ref$numColumn;var toast=useToast();if(!Iconset){return null;}return React.createElement(React.Fragment,null,React.createElement(IconListWrapper,{color:color,size:size},React.createElement(SimpleGrid,{alignItems:\"center\",columns:numColumn,spacingY:4,spacingX:4},allIconNames&&allIconNames.slice(0,maxCount).map(function(icon){return React.createElement(IconWrapper,{onPress:function onPress(){return onIconPress&&onIconPress(icon);},key:icon},React.createElement(IconContent,null,React.createElement(Iconset,{variant:variant,name:icon,size:size,color:color})),React.createElement(IconLabel,{noOfLines:3,numberOfLines:3},icon));}))),children);}","map":{"version":3,"sources":["/Users/leman/local-works/niceforum/svgr-iconkit/examples/expo-explorer/src/components/IconList.js"],"names":["React","ClipboardStatic","Box","SimpleGrid","Text","Icon","Pressable","useToast","styled","css","Clipboard","IconContent","IconWrapper","IconListWrapper","View","displayName","IconLabel","IconList","maxCount","allVariantNames","color","size","variant","allIconNames","Iconset","component","children","onIconPress","numColumn","toast","slice","map","icon"],"mappings":"kKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,OACSC,e,mCACT,OAASC,GAAT,CAAcC,UAAd,CAA0BC,IAA1B,CAAgCC,IAAhC,CAAsCC,SAAtC,CAAiDC,QAAjD,KAAiE,aAAjE,CACA,MAAOC,CAAAA,MAAP,EAAiBC,GAAjB,KAA4B,0BAA5B,CACA,MAAOC,CAAAA,SAAP,KAAsB,gBAAtB,CAEA,GAAMC,CAAAA,WAAW,CAAGH,MAAM,CAACN,GAAD,CAAT,yNAAjB,CAQA,GAAMU,CAAAA,WAAW,CAAGJ,MAAM,CAACF,SAAD,CAAT,iKAAjB,CAOA,GAAMO,CAAAA,eAAe,CAAGL,MAAM,CAACM,IAAV,6GAArB,CAIAD,eAAe,CAACE,WAAhB,CAA8B,iBAA9B,CAEA,GAAMC,CAAAA,SAAS,CAAGR,MAAM,CAACJ,IAAD,CAAT,2NAAf,CAUA,cAAe,SAASa,CAAAA,QAAT,MAWZ,IAVDC,CAAAA,QAUC,MAVDA,QAUC,2BATDC,eASC,CATDA,eASC,+BATiB,EASjB,sCARDC,KAQC,CARDA,KAQC,qBARO,MAQP,2BAPDC,IAOC,CAPDA,IAOC,oBAPM,EAON,6BANDC,OAMC,CANDA,OAMC,uBANS,SAMT,qCALDC,YAKC,CALDA,YAKC,4BALc,EAKd,mBAJUC,OAIV,MAJDC,SAIC,CAHDC,QAGC,MAHDA,QAGC,CAFDC,WAEC,MAFDA,WAEC,qBADDC,SACC,CADDA,SACC,yBADW,CACX,gBAED,GAAMC,CAAAA,KAAK,CAAGtB,QAAQ,EAAtB,CAEA,GAAI,CAACiB,OAAL,CAAc,CACZ,MAAO,KAAP,CACD,CAED,MACE,yCACA,oBAAC,eAAD,EAAiB,KAAK,CAAEJ,KAAxB,CAA+B,IAAI,CAAEC,IAArC,EACE,oBAAC,UAAD,EACE,UAAU,CAAC,QADb,CAEE,OAAO,CAAEO,SAFX,CAGE,QAAQ,CAAE,CAHZ,CAIE,QAAQ,CAAE,CAJZ,EAMGL,YAAY,EACXA,YAAY,CAACO,KAAb,CAAmB,CAAnB,CAAsBZ,QAAtB,EAAgCa,GAAhC,CAAoC,SAACC,IAAD,QAClC,qBAAC,WAAD,EAAa,OAAO,CAAE,yBAAML,CAAAA,WAAW,EAAIA,WAAW,CAACK,IAAD,CAAhC,EAAtB,CAA8D,GAAG,CAAEA,IAAnE,EACE,oBAAC,WAAD,MACE,oBAAC,OAAD,EAAS,OAAO,CAAEV,OAAlB,CAA2B,IAAI,CAAEU,IAAjC,CAAuC,IAAI,CAAEX,IAA7C,CAAmD,KAAK,CAAED,KAA1D,EADF,CADF,CAIE,oBAAC,SAAD,EAAW,SAAS,CAAE,CAAtB,CAAyB,aAAa,CAAE,CAAxC,EACGY,IADH,CAJF,CADkC,EAApC,CAPJ,CADF,CADA,CAqBGN,QArBH,CADF,CAyBD","sourcesContent":["import React from \"react\";\nimport { ClipboardStatic } from \"react-native\";\nimport { Box, SimpleGrid, Text, Icon, Pressable, useToast } from \"native-base\";\nimport styled, { css } from \"styled-components/native\";\nimport Clipboard from \"expo-clipboard\";\n\nconst IconContent = styled(Box)`\n  border-bottom-width: 1px;\n  border-bottom-color: #ccc;\n  align-items: center;\n  justify-content: center;\n  width: 100px;\n  height: 70px;\n`;\nconst IconWrapper = styled(Pressable)`\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  width: 100px;\n  height: 100px;\n\n`;\nconst IconListWrapper = styled.View`\nposition: relative;\nwidth: 100%;\n`;\nIconListWrapper.displayName = 'IconListWrapper';\n\nconst IconLabel = styled(Text)`\n  align-items: center;\n  justify-content: center;\n  padding: 2px;\n  width: 100px;\n  height: 30px;\n  font-size: 9px;\n  text-align: center;\n`;\n\nexport default function IconList({\n  maxCount,\n  allVariantNames = [],\n  color = \"#ccc\",\n  size = 24,\n  variant = \"regular\",\n  allIconNames = [],\n  component: Iconset,\n  children,\n  onIconPress,\n  numColumn = 3,\n}) {\n  \n  const toast = useToast();\n  \n  if (!Iconset) {\n    return null;\n  }\n\n  return (\n    <>\n    <IconListWrapper color={color} size={size}>\n      <SimpleGrid\n        alignItems=\"center\"\n        columns={numColumn}\n        spacingY={4}\n        spacingX={4}\n      >\n        {allIconNames &&\n          allIconNames.slice(0, maxCount).map((icon) => (\n            <IconWrapper onPress={() => onIconPress && onIconPress(icon)} key={icon}>\n              <IconContent>\n                <Iconset variant={variant} name={icon} size={size} color={color} />\n              </IconContent>\n              <IconLabel noOfLines={3} numberOfLines={3}>\n                {icon}\n              </IconLabel>\n            </IconWrapper>\n          ))}\n      </SimpleGrid>\n          </IconListWrapper>\n      {children}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}