{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"children\",\"contentContainerStyle\",\"padder\"];import React from\"react\";import{Box}from\"native-base\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";function Content(_ref){var children=_ref.children,contentContainerStyle=_ref.contentContainerStyle,_ref$padder=_ref.padder,padder=_ref$padder===void 0?false:_ref$padder,restProps=_objectWithoutProperties(_ref,_excluded);var contentStyles={};if(padder){contentStyles.paddingTop=20;contentStyles.paddingBottom=20;}return React.createElement(ScrollView,_extends({style:{flex:1},scrollIndicatorInsets:{top:4,bottom:4,left:4,right:4},contentContainerStyle:[contentStyles,contentContainerStyle]},restProps),children);}export default Content;","map":{"version":3,"sources":["/Users/leman/local-works/niceforum/svgr-iconkit/examples/expo-explorer/src/components/Content.js"],"names":["React","Box","Content","children","contentContainerStyle","padder","restProps","contentStyles","paddingTop","paddingBottom","flex","top","bottom","left","right"],"mappings":"sMAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,aAApB,C,iEAGA,QAASC,CAAAA,OAAT,MAKG,IAJDC,CAAAA,QAIC,MAJDA,QAIC,CAHDC,qBAGC,MAHDA,qBAGC,kBAFDC,MAEC,CAFDA,MAEC,sBAFQ,KAER,aADEC,SACF,0CACD,GAAMC,CAAAA,aAAa,CAAG,EAAtB,CACA,GAAIF,MAAJ,CAAY,CACVE,aAAa,CAACC,UAAd,CAA2B,EAA3B,CACAD,aAAa,CAACE,aAAd,CAA8B,EAA9B,CACD,CACD,MACE,qBAAC,UAAD,WACE,KAAK,CAAE,CAACC,IAAI,CAAE,CAAP,CADT,CAEE,qBAAqB,CAAE,CAAEC,GAAG,CAAE,CAAP,CAAUC,MAAM,CAAE,CAAlB,CAAqBC,IAAI,CAAE,CAA3B,CAA8BC,KAAK,CAAE,CAArC,CAFzB,CAGE,qBAAqB,CAAE,CAACP,aAAD,CAAgBH,qBAAhB,CAHzB,EAIME,SAJN,EAMGH,QANH,CADF,CAUD,CAED,cAAeD,CAAAA,OAAf","sourcesContent":["import React from \"react\";\nimport { Box } from \"native-base\";\nimport { ScrollView } from \"react-native\";\n\nfunction Content({\n  children,\n  contentContainerStyle,\n  padder = false,\n  ...restProps\n}) {\n  const contentStyles = {};\n  if (padder) {\n    contentStyles.paddingTop = 20;\n    contentStyles.paddingBottom = 20;\n  }\n  return (\n    <ScrollView\n      style={{flex: 1}}\n      scrollIndicatorInsets={{ top: 4, bottom: 4, left: 4, right: 4 }}\n      contentContainerStyle={[contentStyles, contentContainerStyle]}\n      {...restProps}\n    >\n      {children}\n    </ScrollView>\n  );\n}\n\nexport default Content;\n"]},"metadata":{},"sourceType":"module"}